{
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[json]": {
        "editor.defaultFormatter": "dprint.dprint"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[json-tmLanguage]": {
        "editor.defaultFormatter": "RedCMD.tmlanguage-syntax-highlighter"
    },
    "[markdown]": {
        "editor.defaultFormatter": "dprint.dprint"
    },
    "[rust]": {
        "editor.defaultFormatter": "dprint.dprint"
    },
    "[toml]": {
        "editor.defaultFormatter": "dprint.dprint"
    },
    "[typescript]": {
        "editor.defaultFormatter": "dprint.dprint"
    },
    "editor.codeActionsOnSave": {
        "addMissingImports": "explicit",
        "source.fixAll": "explicit",
        "source.organizeImports": "explicit"
    },
    // "editor.defaultFormatter": "dprint.dprint",
    "eslint.enable": true,
    "eslint.options": {
        "extensions": [
            ".ts"
        ]
    },
    "eslint.probe": [
        "typescript"
    ],
    "files.associations": {
        ".eslintrc.json": "jsonc",
        "ahk.configuration.json": "jsonc",
        "dprint.json": "jsonc",
        "extensions.json": "jsonc",
        "oxlintrc.json": "jsonc",
        "settings.json": "jsonc",
        "tsconfig.json": "jsonc",
        "*.zh-cn.ahk.json": "jsonc"
    },
    "typescript.tsdk": "node_modules\\typescript\\lib",
    "cSpell.customDictionaries": {
        "custom-dictionary-workspace": {
            "name": "custom-dictionary-workspace",
            "path": "${workspaceFolder:nekoHelp}/.cspell/custom-dictionary-workspace.txt",
            "addWords": true,
            "scope": "workspace"
        }
    },
    "workbench.localHistory.enabled": false,
    "markdownlint.config": {
        "no-inline-html": {
            "allowed_elements": [
                "details",
                "summary",
                "b"
            ]
        },
        "ul-indent": {
            "indent": 2
        }
    },
    "explorer.fileNesting.enabled": true,
    "files.readonlyInclude": {
        "node_modules/**": true,
        "dist/**": true
    },
    "i18n-ally.localesPaths": [
        "i18n"
    ],
    "i18n-ally.sortKeys": true,
    "i18n-ally.enabledParsers": [
        "json",
        "ts"
    ],
    "i18n-ally.displayLanguage": "en",
    "explorer.fileNesting.patterns": {
        // https://github.com/antfu/vscode-file-nesting-config
        ".env": "*.env, .env.*, .envrc, env.d.ts",
        ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
        "package.json": "jest.config.js, cspell.json, .browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
        "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
        "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
        "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
        "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts"
    }
    //  "markdown.extension.list.indentationSize": "inherit"
}
