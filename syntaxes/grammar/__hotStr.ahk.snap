>; normal
#^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>::ts,,::TypeScript
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#      ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#        ^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
>::ts(::TypeScript()
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#     ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#       ^^^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
>;   ^Avoid vscode automatic bracket matching, here if it is Str
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>;;X-flag
#^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>; https://github.com/CoffeeChaton/vscode-autohotkey-NekoHelp/blob/main/CHANGELOG.md#00252023-02-26
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>;-----------
#^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>::case0,,::foo() ; "send foo()"
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#         ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#           ^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                 ^^^^^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk comment.line.hotstring.ahk
>:X:case1,,::foo()  ; call foo() function
#^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
# ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk entity.name.function.hotstring.x.flag.ahk
#  ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#   ^^^^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk string.entity.name.function.hotstring.trigger.x.flag.ahk.ahk
#          ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#            ^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk meta.comment.line.semicolon.ahk
#                   ^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>::case2,,::  ; call foo() function
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#         ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#           ^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#             ^^^^^^^^^^^^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk comment.line.hotstring.ahk
>    foo()
#^^^^ source.ahk
#    ^^^ source.ahk entity.name.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk punctuation.bracket.ahk
>Return
#^^^^^^ source.ahk keyword.control.flow.ahk
>
>foo() {
#^^^ source.ahk entity.name.function.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
>    MsgBox, % "i am foo"
#^^^^ source.ahk
#    ^^^^^^ source.ahk meta.command.line.ahk support.function.ahk
#          ^ source.ahk meta.command.line.ahk punctuation.ahk
#           ^ source.ahk meta.command.line.ahk
#            ^ source.ahk meta.command.line.ahk punctuation.definition.variable.percent.ahk
#             ^ source.ahk meta.command.line.ahk
#              ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^^^^^^^ source.ahk meta.command.line.ahk string.quoted.double.ahk
#                       ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>;-----------
#^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>;-----------
#^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>name_copied := "XX"
#^^^^^^^^^^^^ source.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>:X:name1,,::Send, % "name 1 is " name_copied
#^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
# ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk entity.name.function.hotstring.x.flag.ahk
#  ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#   ^^^^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk string.entity.name.function.hotstring.trigger.x.flag.ahk.ahk
#          ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#            ^^^^ source.ahk meta.command.line.ahk support.function.ahk
#                ^ source.ahk meta.command.line.ahk punctuation.ahk
#                 ^ source.ahk meta.command.line.ahk
#                  ^ source.ahk meta.command.line.ahk punctuation.definition.variable.percent.ahk
#                   ^ source.ahk meta.command.line.ahk
#                    ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^ source.ahk meta.command.line.ahk string.quoted.double.ahk
#                               ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^^^^^^^^^^^^ source.ahk meta.command.line.ahk
>;                                 ^^^^^^^^^^^var
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>;          ^^^^Send key https://www.autohotkey.com/docs/v1/lib/Send.htm
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>;^ X-flag https://www.autohotkey.com/docs/v1/Hotstrings.htm#Options
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>;....
#^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>name_copied := "XX"
#^^^^^^^^^^^^ source.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>:XB0:name2,,::Send % "name 2 is " name_copied
#^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
# ^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk entity.name.function.hotstring.x.flag.ahk
#    ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#     ^^^^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk string.entity.name.function.hotstring.trigger.x.flag.ahk.ahk
#            ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#              ^^^^ source.ahk meta.command.line.ahk support.function.ahk
#                  ^ source.ahk meta.command.line.ahk
#                   ^ source.ahk meta.command.line.ahk punctuation.definition.variable.percent.ahk
#                    ^ source.ahk meta.command.line.ahk
#                     ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^^^^^^^^^^ source.ahk meta.command.line.ahk string.quoted.double.ahk
#                                ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^^^^^^^^^^^^ source.ahk meta.command.line.ahk
>:X B0:name3,,::Send % "name 3 is " name_copied
#^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
# ^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk entity.name.function.hotstring.x.flag.ahk
#     ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#      ^^^^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk string.entity.name.function.hotstring.trigger.x.flag.ahk.ahk
#             ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#               ^^^^ source.ahk meta.command.line.ahk support.function.ahk
#                   ^ source.ahk meta.command.line.ahk
#                    ^ source.ahk meta.command.line.ahk punctuation.definition.variable.percent.ahk
#                     ^ source.ahk meta.command.line.ahk
#                      ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^ source.ahk meta.command.line.ahk string.quoted.double.ahk
#                                 ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^^^^^^^^^^^^ source.ahk meta.command.line.ahk
>; ^ has space does not affect.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>:B0X:name1,,::Send % "name 4 is " name_copied
#^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
# ^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk entity.name.function.hotstring.x.flag.ahk
#    ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#     ^^^^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk string.entity.name.function.hotstring.trigger.x.flag.ahk.ahk
#            ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#              ^^^^ source.ahk meta.command.line.ahk support.function.ahk
#                  ^ source.ahk meta.command.line.ahk
#                   ^ source.ahk meta.command.line.ahk punctuation.definition.variable.percent.ahk
#                    ^ source.ahk meta.command.line.ahk
#                     ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^^^^^^^^^^ source.ahk meta.command.line.ahk string.quoted.double.ahk
#                                ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^^^^^^^^^^^^ source.ahk meta.command.line.ahk
>;-----------
#^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>~F12::Reload
#^ source.ahk meta.hotkey.line.ahk storage.modifier.hotkey.ahk
# ^^^ source.ahk meta.hotkey.line.ahk meta.2.hotkey.line.ahk markup.bold.hotkey.ahk
#    ^^ source.ahk meta.hotkey.line.ahk
#      ^^^^^^ source.ahk keyword.control.flow.ahk
>
>
>
>; not flag
#^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>::ahk,,::AutoHotkey
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#       ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#         ^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
>::AHK,,::AutoHotkey
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#       ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#         ^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
>::dx9,,::DirectX
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#       ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#         ^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
>::ts,,::TypeScript
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#      ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#        ^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
>::es,,::eslint
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#      ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#        ^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
>::pr,,::prettier ; dddddddddd
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#      ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#        ^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                 ^^^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk comment.line.hotstring.ahk
>;                ^^^^^^^^^^^^ comment
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>
>; X-flag
#^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>:x:dd,,::MsgBox, % "dd" ;
#^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
# ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk entity.name.function.hotstring.x.flag.ahk
#  ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#   ^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk string.entity.name.function.hotstring.trigger.x.flag.ahk.ahk
#       ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#         ^^^^^^ source.ahk meta.command.line.ahk support.function.ahk
#               ^ source.ahk meta.command.line.ahk punctuation.ahk
#                ^ source.ahk meta.command.line.ahk
#                 ^ source.ahk meta.command.line.ahk punctuation.definition.variable.percent.ahk
#                  ^ source.ahk meta.command.line.ahk
#                   ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^ source.ahk meta.command.line.ahk string.quoted.double.ahk
#                      ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk meta.command.line.ahk meta.comment.line.semicolon.ahk
#                        ^ source.ahk meta.command.line.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>
>; with out r/t flag
#^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>:*b0:<em1>::</em>{left 5} {Enter} ^t ;
#^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
# ^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#    ^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#     ^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#          ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#            ^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                 ^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#                         ^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                          ^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#                                 ^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                                     ^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk comment.line.hotstring.ahk
>:*b0:<em2>::</em>{left 5} {}} </em5> {{}
#^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
# ^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#    ^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#     ^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#          ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#            ^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                 ^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#                         ^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                          ^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt2.flag.ahk
#                             ^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                                     ^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt2.flag.ahk
>:*b0:a1,::{{} ; send "{"
#^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
# ^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#    ^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#     ^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#        ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#          ^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt2.flag.ahk
#             ^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#              ^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk comment.line.hotstring.ahk
>;            ^comment
#^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>:*b0:a2,::{}} ; send "}"
#^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
# ^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#    ^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#     ^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#        ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#          ^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt2.flag.ahk
#             ^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#              ^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk comment.line.hotstring.ahk
>::a99,,:: </em>{left 5} {Enter} ^t ;
#^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#  ^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk string.entity.name.function.hotstring.trigger.with_rt.flag.ahk
#       ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.with_rt.flag.ahk
#         ^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#               ^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#                       ^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                        ^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk entity.name.function.hotstring.with_rt.flag.ahk
#                               ^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk
#                                   ^ source.ahk hotstring.rt.flag.ahk string.hotstring.with_rt.flag.ahk comment.line.hotstring.ahk
>
>
>; r/t flag
#^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>:r:<em3>::</em>{left 5}
#^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk
# ^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk entity.name.function.hotstring.rt.flag.ahk
#  ^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk
#   ^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk string.entity.name.function.hotstring.trigger.rt.flag.ahk
#        ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk
#          ^^^^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.rt.flag.ahk
>;              ^^^^^^^ just string
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>:t:<em4>::</em>{left 5}
#^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk
# ^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk entity.name.function.hotstring.rt.flag.ahk
#  ^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk
#   ^^^^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk string.entity.name.function.hotstring.trigger.rt.flag.ahk
#        ^^ source.ahk hotstring.rt.flag.ahk keyword.operator.hotstring.rt.flag.ahk
#          ^^^^^^^^^^^^^ source.ahk hotstring.rt.flag.ahk string.hotstring.rt.flag.ahk
>;              ^^^^^^^ just string
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>
>
>; r/t + x ---> only x flag
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>:xr:dd5,,::MsgBox, % "dd" ; show MsgBox
#^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
# ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk entity.name.function.hotstring.x.flag.ahk
#   ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#    ^^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk string.entity.name.function.hotstring.trigger.x.flag.ahk.ahk
#         ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#           ^^^^^^ source.ahk meta.command.line.ahk support.function.ahk
#                 ^ source.ahk meta.command.line.ahk punctuation.ahk
#                  ^ source.ahk meta.command.line.ahk
#                   ^ source.ahk meta.command.line.ahk punctuation.definition.variable.percent.ahk
#                    ^ source.ahk meta.command.line.ahk
#                     ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^^ source.ahk meta.command.line.ahk string.quoted.double.ahk
#                        ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk meta.command.line.ahk meta.comment.line.semicolon.ahk
#                          ^^^^^^^^^^^^^ source.ahk meta.command.line.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>:xr:dd6,,::MsgBox, % "{left 5}" ; show MsgBox
#^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
# ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk entity.name.function.hotstring.x.flag.ahk
#   ^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#    ^^^^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk string.entity.name.function.hotstring.trigger.x.flag.ahk.ahk
#         ^^ source.ahk hotstring.x.flag.ahk keyword.operator.hotstring.x.flag.ahk
#           ^^^^^^ source.ahk meta.command.line.ahk support.function.ahk
#                 ^ source.ahk meta.command.line.ahk punctuation.ahk
#                  ^ source.ahk meta.command.line.ahk
#                   ^ source.ahk meta.command.line.ahk punctuation.definition.variable.percent.ahk
#                    ^ source.ahk meta.command.line.ahk
#                     ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^^^^^^^^ source.ahk meta.command.line.ahk string.quoted.double.ahk
#                              ^ source.ahk meta.command.line.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk meta.command.line.ahk meta.comment.line.semicolon.ahk
#                                ^^^^^^^^^^^^^ source.ahk meta.command.line.ahk meta.comment.line.semicolon.ahk comment.line.semicolon.ahk
>
>