[
    {
        "api_name": "Access.AcAggregateType",
        "enum_ch": [
            "acAggregateAverage",
            "acAggregateCount",
            "acAggregateDistinct",
            "acAggregateMaximum",
            "acAggregateMinimum",
            "acAggregateNone",
            "acAggregateSum"
        ],
        "file_name": "Access.AcAggregateType.md",
        "kind": "enumeration",
        "main": "Specifies the type of aggregation to apply to a set of values.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAggregateAverage**|2|Average|\n|**acAggregateCount**|6|Count|\n|**acAggregateDistinct**|5|Distinct|\n|**acAggregateMaximum**|4|Maximum|\n|**acAggregateMinimum**|3|Minimum|\n|**acAggregateNone**|0|None|\n|**acAggregateSum**|1|Sum|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcAxisRange",
        "enum_ch": [
            "acAxisRangeAuto",
            "acAxisRangedFixed"
        ],
        "file_name": "Access.AcAxisRange.md",
        "kind": "enumeration",
        "main": "Specifies the behavior for representing minimum and maximum values on an axis.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAxisRangeAuto**|0|The represented range is determined automatically by the lowest and highest values in the set.|\n|**acAxisRangedFixed**|1|The represented range is determined by fixed minimum/maximum values and may be clipped accordingly.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcAxisUnits",
        "enum_ch": [
            "acAxisUnitsBillions",
            "acAxisUnitsHundredBillions",
            "acAxisUnitsHundredMillions",
            "acAxisUnitsHundreds",
            "acAxisUnitsHundredThousands",
            "acAxisUnitsMillions",
            "acAxisUnitsNone",
            "acAxisUnitsPercentage",
            "acAxisUnitsTenBillions",
            "acAxisUnitsTenMillions",
            "acAxisUnitsTenThousands",
            "acAxisUnitsThousands",
            "acAxisUnitsTrillions"
        ],
        "file_name": "Access.AcAxisUnits.md",
        "kind": "enumeration",
        "main": "Specifies the unit of measurement for values displayed on an axis.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAxisUnitsBillions**|9|Billions|\n|**acAxisUnitsHundredBillions**|11|Hundred Billions|\n|**acAxisUnitsHundredMillions**|8|Hundred Millions|\n|**acAxisUnitsHundreds**|2|Hundreds|\n|**acAxisUnitsHundredThousands**|5|Hundred Thousands|\n|**acAxisUnitsMillions**|6|Millions|\n|**acAxisUnitsNone**|0|None (original values)|\n|**acAxisUnitsPercentage**|1|Percentage|\n|**acAxisUnitsTenBillions**|10|Ten Billions|\n|**acAxisUnitsTenMillions**|7|Ten Millions|\n|**acAxisUnitsTenThousands**|4|Ten Thousands|\n|**acAxisUnitsThousands**|3|Thousands|\n|**acAxisUnitsTrillions**|12|Trillions|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcBrowseToObjectType",
        "enum_ch": [
            "acBrowseToForm",
            "acBrowseToReport"
        ],
        "file_name": "Access.AcBrowseToObjectType.md",
        "kind": "enumeration",
        "main": "Specifies the type of object to browse to.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acBrowseToForm**|2|Open a form.|\n|**acBrowseToReport**|3|Open a report.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AccessObject.CurrentView",
        "file_name": "Access.AccessObject.CurrentView.md",
        "kind": "property",
        "main": "Returns the current view for the specified Access object. Read-only **[AcCurrentView](Access.AcCurrentView.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcCurrentView.md"
        ]
    },
    {
        "api_name": "Access.AccessObject.DateCreated",
        "file_name": "Access.AccessObject.DateCreated.md",
        "kind": "property",
        "main": "Returns a **Date** indicating the date and time when the design of the specified object was last modified. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Date"
        ]
    },
    {
        "api_name": "Access.AccessObject.DateModified",
        "file_name": "Access.AccessObject.DateModified.md",
        "kind": "property",
        "main": "Returns a **Date** indicating the date and time when the design of the specified object was last modified. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Date"
        ]
    },
    {
        "api_name": "Access.AccessObject.FullName",
        "file_name": "Access.AccessObject.FullName.md",
        "kind": "property",
        "main": "Sets or returns the full path (including the file name) of a specific object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.AccessObject.GetDependencyInfo",
        "file_name": "Access.AccessObject.GetDependencyInfo.md",
        "kind": "method",
        "main": "Returns a **[DependencyInfo](Access.DependencyInfo.md)** object that represents the database objects that are dependent upon the specified object.\n",
        "Parameters": [],
        "Return_value": [
            "Access.DependencyInfo.md"
        ]
    },
    {
        "api_name": "Access.AccessObject.IsDependentUpon",
        "file_name": "Access.AccessObject.IsDependentUpon.md",
        "kind": "method",
        "main": "Returns a **Boolean** value that indicates whether the specified object is dependent upon the database object specified in the _ObjectName_ argument.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName"
        ],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.AccessObject.IsLoaded",
        "file_name": "Access.AccessObject.IsLoaded.md",
        "kind": "property",
        "main": "Use the **IsLoaded** property to determine if an **AccessObject** object is currently loaded. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsLoaded",
            "AccessObject",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.AccessObject.IsWeb",
        "file_name": "Access.AccessObject.IsWeb.md",
        "kind": "property",
        "main": "Gets whether the specified object is a web object. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.AccessObject",
        "Events": [],
        "file_name": "Access.AccessObject.md",
        "kind": "object",
        "main": "An **AccessObject** object refers to a particular Access object.\n",
        "Methods": [
            "GetDependencyInfo",
            "IsDependentUpon"
        ],
        "Properties": [
            "CurrentView",
            "DateCreated",
            "DateModified",
            "FullName",
            "IsLoaded",
            "IsWeb",
            "Name",
            "Parent",
            "Properties",
            "Type"
        ]
    },
    {
        "api_name": "Access.AccessObject.Name",
        "file_name": "Access.AccessObject.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.AccessObject.Parent",
        "file_name": "Access.AccessObject.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AccessObject.Properties",
        "file_name": "Access.AccessObject.Properties.md",
        "kind": "property",
        "main": "Returns a reference to an **AccessObject** object's **[AccessObjectProperties](Access.AccessObjectProperties.md)** collection. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "AccessObject",
            "Access.AccessObjectProperties.md"
        ]
    },
    {
        "api_name": "Access.AccessObject.Type",
        "file_name": "Access.AccessObject.Type.md",
        "kind": "property",
        "main": "Returns the value of an **AccessObject** object type. Read-only **[AcObjectType](Access.AcObjectType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "AccessObject",
            "Access.AcObjectType.md"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperties.Add",
        "file_name": "Access.AccessObjectProperties.Add.md",
        "kind": "method",
        "main": "Use the **Add** method to add a new property as an **[AccessObjectProperty](access.accessobjectproperty.md)** object to the **AccessObjectProperties** collection of an **[AccessObject](Access.AccessObject.md)** object.\n",
        "Parameters": [
            "PropertyName",
            "Value"
        ],
        "Return_value": [
            "Add",
            "access.accessobjectproperty.md",
            "AccessObjectProperties",
            "Access.AccessObject.md"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperties.Application",
        "file_name": "Access.AccessObjectProperties.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperties.Count",
        "file_name": "Access.AccessObjectProperties.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperties.Item",
        "file_name": "Access.AccessObjectProperties.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObjectProperty**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "AccessObjectProperty"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperties",
        "Events": [],
        "file_name": "Access.AccessObjectProperties.md",
        "kind": "object",
        "main": "The **AccessObjectProperties** collection contains all of the custom **[AccessObjectProperty](Access.AccessObjectProperty.md)** objects of a specific instance of an object. These **AccessObjectProperty** objects (which are often just called properties) uniquely characterize that instance of the object.\n",
        "Methods": [
            "Add",
            "Remove"
        ],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperties.Parent",
        "file_name": "Access.AccessObjectProperties.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AccessObjectProperties.Remove",
        "file_name": "Access.AccessObjectProperties.Remove.md",
        "kind": "method",
        "main": "Use the **Remove** method to remove an **[AccessObjectProperty](access.accessobjectproperty.md)** object from the **AccessObjectProperties** collection of an **[AccessObject](Access.AccessObject.md)** object.\n",
        "Parameters": [
            "Item"
        ],
        "Return_value": [
            "Remove",
            "access.accessobjectproperty.md",
            "AccessObjectProperties",
            "Access.AccessObject.md"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperty",
        "Events": [],
        "file_name": "Access.AccessObjectProperty.md",
        "kind": "object",
        "main": "An **AccessObjectProperty** object represents a built-in or user-defined characteristic of an **[AccessObject](access.accessobject.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Name",
            "Value"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperty.Name",
        "file_name": "Access.AccessObjectProperty.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.AccessObjectProperty.Value",
        "file_name": "Access.AccessObjectProperty.Value.md",
        "kind": "property",
        "main": "Determines or specifies the value of a built-in property of an **[AccessObject](Access.AccessObject.md)** object. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AccessObject.md",
            "Variant"
        ]
    },
    {
        "api_name": "Access.AcChartType",
        "enum_ch": [
            "acChartBarClustered",
            "acChartBarStacked",
            "acChartBarStacked100",
            "acChartColumnClustered",
            "acChartColumnStacked",
            "acChartColumnStacked100",
            "acChartCombo",
            "acChartLine",
            "acChartLineStacked",
            "acChartLineStacked100",
            "acChartPie"
        ],
        "file_name": "Access.AcChartType.md",
        "kind": "enumeration",
        "main": "Specifies the chart type.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acChartBarClustered**|3|Clustered Bar|\n|**acChartBarStacked**|4|Stacked Bar|\n|**acChartBarStacked100**|5|100% Stacked Bar|\n|**acChartColumnClustered**|0|Clustered Column|\n|**acChartColumnStacked**|1|Stacked Column|\n|**acChartColumnStacked100**|2|100% Stacked Column|\n|**acChartCombo**|10|Combo|\n|**acChartLine**|6|Line|\n|**acChartLineStacked**|7|Line Stacked|\n|**acChartLineStacked100**|8|100% Stacked Line|\n|**acChartPie**|9|Pie|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcCloseSave",
        "enum_ch": [
            "acSaveNo",
            "acSavePrompt",
            "acSaveYes"
        ],
        "file_name": "Access.AcCloseSave.md",
        "kind": "enumeration",
        "main": "Used by the **Close** method to specify whether or not to save an object upon closing.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acSaveNo**|2|The specified object is not saved.|\n|**acSavePrompt**|0|The user is asked whether or not they want to save the object. This value is ignored if you are closing a Visual Basic module. The module will be closed, but changes to the module will not be saved.|\n|**acSaveYes**|1|The specified object is saved.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcColorIndex",
        "enum_ch": [
            "acColorIndexAqua",
            "acColorIndexBlack",
            "acColorIndexBlue",
            "acColorIndexBrightGreen",
            "acColorIndexDarkBlue",
            "acColorIndexFuchsia",
            "acColorIndexGray",
            "acColorIndexGreen",
            "acColorIndexMaroon",
            "acColorIndexOlive",
            "acColorIndexRed",
            "acColorIndexSilver",
            "acColorIndexTeal",
            "acColorIndexViolet",
            "acColorIndexWhite",
            "acColorIndexYellow"
        ],
        "file_name": "Access.AcColorIndex.md",
        "kind": "enumeration",
        "main": "Specifies the color to apply.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acColorIndexAqua**|14|Aqua color.|\n|**acColorIndexBlack**|0|Black color.|\n|**acColorIndexBlue**|12|Blue color.|\n|**acColorIndexBrightGreen**|10|Bright green color.|\n|**acColorIndexDarkBlue**|4|Dark blue color.|\n|**acColorIndexFuchsia**|13|Fuchsia color.|\n|**acColorIndexGray**|7|Gray color.|\n|**acColorIndexGreen**|2|Green color.|\n|**acColorIndexMaroon**|1|Maroon color.|\n|**acColorIndexOlive**|3|Olive color.|\n|**acColorIndexRed**|9|Red color.|\n|**acColorIndexSilver**|8|Silver color.|\n|**acColorIndexTeal**|6|Teal color.|\n|**acColorIndexViolet**|5|Violet color.|\n|**acColorIndexWhite**|15|White color.|\n|**acColorIndexYellow**|11|Yellow color.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcCommand",
        "enum_ch": [
            "acCmdAboutMicrosoftAccess",
            "acCmdAddDataMacroAfterDelete",
            "acCmdAddDataMacroAfterInsert",
            "acCmdAddDataMacroAfterUpdate",
            "acCmdAddDataMacroValidateChange",
            "acCmdAddDataMacroValidateDelete",
            "acCmdAddFromOutlook",
            "acCmdAddInManager",
            "acCmdAddNamedDataMacro",
            "acCmdAddToNewGroup",
            "acCmdAddWatch",
            "acCmdAdvancedFilterSort",
            "acCmdAlignBottom",
            "acCmdAlignCenter",
            "acCmdAlignLeft",
            "acCmdAlignmentAndSizing",
            "acCmdAlignMiddle",
            "acCmdAlignRight",
            "acCmdAlignToGrid",
            "acCmdAlignTop",
            "acCmdAlignToShortest",
            "acCmdAlignToTallest",
            "acCmdAnalyzePerformance",
            "acCmdAnalyzeTable",
            "acCmdAnchorBottomLeft",
            "acCmdAnchorBottomRight",
            "acCmdAnchorBottomStretchAcross",
            "acCmdAnchorStretchAcross",
            "acCmdAnchorStretchDown",
            "acCmdAnchorStretchDownAcross",
            "acCmdAnchorStretchDownRight",
            "acCmdAnchorTopLeft",
            "acCmdAnchorTopRight",
            "acCmdAnswerWizard",
            "acCmdApplyAutoFormat1",
            "acCmdApplyAutoFormat10",
            "acCmdApplyAutoFormat11",
            "acCmdApplyAutoFormat12",
            "acCmdApplyAutoFormat13",
            "acCmdApplyAutoFormat14",
            "acCmdApplyAutoFormat15",
            "acCmdApplyAutoFormat16",
            "acCmdApplyAutoFormat17",
            "acCmdApplyAutoFormat18",
            "acCmdApplyAutoFormat19",
            "acCmdApplyAutoFormat2",
            "acCmdApplyAutoFormat20",
            "acCmdApplyAutoFormat21",
            "acCmdApplyAutoFormat22",
            "acCmdApplyAutoFormat23",
            "acCmdApplyAutoFormat24",
            "acCmdApplyAutoFormat25",
            "acCmdApplyAutoFormat3",
            "acCmdApplyAutoFormat4",
            "acCmdApplyAutoFormat5",
            "acCmdApplyAutoFormat6",
            "acCmdApplyAutoFormat7",
            "acCmdApplyAutoFormat8",
            "acCmdApplyAutoFormat9",
            "acCmdApplyDefault",
            "acCmdApplyFilterSort",
            "acCmdAppMaximize",
            "acCmdAppMinimize",
            "acCmdAppMove",
            "acCmdAppRestore",
            "acCmdAppSize",
            "acCmdArrangeIconsAuto",
            "acCmdArrangeIconsByCreated",
            "acCmdArrangeIconsByModified",
            "acCmdArrangeIconsByName",
            "acCmdArrangeIconsByType",
            "acCmdAutoCorrect",
            "acCmdAutoDial",
            "acCmdAutoFormat",
            "acCmdBackgroundPicture",
            "acCmdBackgroundSound",
            "acCmdBackup",
            "acCmdBookmarksClearAll",
            "acCmdBookmarksNext",
            "acCmdBookmarksPrevious",
            "acCmdBookmarksToggle",
            "acCmdBringToFront",
            "acCmdBrowseSharePointList",
            "acCmdCalculatedColumn",
            "acCmdCallStack",
            "acCmdChangeToCheckBox",
            "acCmdChangeToComboBox",
            "acCmdChangeToCommandButton",
            "acCmdChangeToImage",
            "acCmdChangeToLabel",
            "acCmdChangeToListBox",
            "acCmdChangeToOptionButton",
            "acCmdChangeToTextBox",
            "acCmdChangeToToggleButton",
            "acCmdClearAll",
            "acCmdClearAllBreakpoints",
            "acCmdClearGrid",
            "acCmdClearHyperlink",
            "acCmdClearItemDefaults",
            "acCmdClose",
            "acCmdCloseAll",
            "acCmdCloseDatabase",
            "acCmdCloseWindow",
            "acCmdCollectDataViaEmail",
            "acCmdColumnWidth",
            "acCmdCompactDatabase",
            "acCmdCompatCheckCurrentObject",
            "acCmdCompatCheckDatabase",
            "acCmdCompileAllModules",
            "acCmdCompileAndSaveAllModules",
            "acCmdCompileLoadedModules",
            "acCmdCompleteWord",
            "acCmdConditionalFormatting",
            "acCmdConnection",
            "acCmdControlMarginsMedium",
            "acCmdControlMarginsNarrow",
            "acCmdControlMarginsNone",
            "acCmdControlMarginsWide",
            "acCmdControlPaddingMedium",
            "acCmdControlPaddingNarrow",
            "acCmdControlPaddingNone",
            "acCmdControlPaddingWide",
            "acCmdControlWizardsToggle",
            "acCmdConvertDatabase",
            "acCmdConvertLinkedTableToLocal",
            "acCmdConvertMacrosToVisualBasic",
            "acCmdCopy",
            "acCmdCopyDatabaseFile",
            "acCmdCopyHyperlink",
            "acCmdCreateMenuFromMacro",
            "acCmdCreateRelationship",
            "acCmdCreateReplica",
            "acCmdCreateShortcut",
            "acCmdCreateShortcutMenuFromMacro",
            "acCmdCreateToolbarFromMacro",
            "acCmdCut",
            "acCmdDatabaseProperties",
            "acCmdDatabaseSplitter",
            "acCmdDataEntry",
            "acCmdDataOutline",
            "acCmdDatasheetView",
            "acCmdDateAndTime",
            "acCmdDebugWindow",
            "acCmdDelete",
            "acCmdDeleteGroup",
            "acCmdDeletePage",
            "acCmdDeleteQueryColumn",
            "acCmdDeleteRecord",
            "acCmdDeleteRows",
            "acCmdDeleteSharePointList",
            "acCmdDeleteTab",
            "acCmdDeleteTable",
            "acCmdDeleteTableColumn",
            "acCmdDeleteWatch",
            "acCmdDesignObject",
            "acCmdDesignView",
            "acCmdDiagramAddRelatedTables",
            "acCmdDiagramAutosizeSelectedTables",
            "acCmdDiagramDeleteRelationship",
            "acCmdDiagramLayoutDiagram",
            "acCmdDiagramLayoutSelection",
            "acCmdDiagramModifyUserDefinedView",
            "acCmdDiagramNewLabel",
            "acCmdDiagramNewTable",
            "acCmdDiagramRecalculatePageBreaks",
            "acCmdDiagramShowRelationshipLabels",
            "acCmdDiagramViewPageBreaks",
            "acCmdDiscardChanges",
            "acCmdDiscardChangesAndRefresh",
            "acCmdDocMaximize",
            "acCmdDocMinimize",
            "acCmdDocMove",
            "acCmdDocRestore",
            "acCmdDocSize",
            "acCmdDocumenter",
            "acCmdDropSQLDatabase",
            "acCmdDuplicate",
            "acCmdEditHyperlink",
            "acCmdEditingAllowed",
            "acCmdEditListItems",
            "acCmdEditRelationship",
            "acCmdEditTriggers",
            "acCmdEditWatch",
            "acCmdEncryptDecryptDatabase",
            "acCmdEnd",
            "acCmdExit",
            "acCmdExportAccess",
            "acCmdExportdBase",
            "acCmdExportExcel",
            "acCmdExportFixedFormat",
            "acCmdExportHTML",
            "acCmdExportODBC",
            "acCmdExportRTF",
            "acCmdExportSharePointList",
            "acCmdExportSnapShot",
            "acCmdExportText",
            "acCmdExportXML",
            "acCmdFavoritesAddTo",
            "acCmdFavoritesOpen",
            "acCmdFieldList",
            "acCmdFilterByForm",
            "acCmdFilterBySelection",
            "acCmdFilterExcludingSelection",
            "acCmdFilterMenu",
            "acCmdFind",
            "acCmdFindNext",
            "acCmdFindNextWordUnderCursor",
            "acCmdFindPrevious",
            "acCmdFindPrevWordUnderCursor",
            "acCmdFitToWindow",
            "acCmdFont",
            "acCmdFormatCells",
            "acCmdFormHdrFtr",
            "acCmdFormView",
            "acCmdFreezeColumn",
            "acCmdGoBack",
            "acCmdGoContinue",
            "acCmdGoForward",
            "acCmdGroupByTable",
            "acCmdGroupControls",
            "acCmdHideColumns",
            "acCmdHideMessageBar",
            "acCmdHidePane",
            "acCmdHideTable",
            "acCmdHorizontalSpacingDecrease",
            "acCmdHorizontalSpacingIncrease",
            "acCmdHorizontalSpacingMakeEqual",
            "acCmdHyperlinkDisplayText",
            "acCmdImportAttachAccess",
            "acCmdImportAttachdBase",
            "acCmdImportAttachExcel",
            "acCmdImportAttachHTML",
            "acCmdImportAttachODBC",
            "acCmdImportAttachOutlook",
            "acCmdImportAttachSharePointList",
            "acCmdImportAttachText",
            "acCmdImportAttachXML",
            "acCmdIndent",
            "acCmdIndexes",
            "acCmdInsertActiveXControl",
            "acCmdInsertChart",
            "acCmdInsertFile",
            "acCmdInsertFileIntoModule",
            "acCmdInsertHyperlink",
            "acCmdInsertLogo",
            "acCmdInsertLookupColumn",
            "acCmdInsertLookupField",
            "acCmdInsertMovieFromFile",
            "acCmdInsertNavigationButton",
            "acCmdInsertObject",
            "acCmdInsertPage",
            "acCmdInsertPicture",
            "acCmdInsertPivotTable",
            "acCmdInsertProcedure",
            "acCmdInsertQueryColumn",
            "acCmdInsertRows",
            "acCmdInsertSpreadsheet",
            "acCmdInsertSubdatasheet",
            "acCmdInsertTableColumn",
            "acCmdInsertTitle",
            "acCmdInsertUnboundSection",
            "acCmdInvokeBuilder",
            "acCmdJoinProperties",
            "acCmdLastPosition",
            "acCmdLayoutGridlinesBoth",
            "acCmdLayoutGridlinesBottom",
            "acCmdLayoutGridlinesCrossHatch",
            "acCmdLayoutGridlinesHorizontal",
            "acCmdLayoutGridlinesNone",
            "acCmdLayoutGridlinesOutline",
            "acCmdLayoutGridlinesTop",
            "acCmdLayoutGridlinesVertical",
            "acCmdLayoutInsertColumnLeft",
            "acCmdLayoutInsertColumnRight",
            "acCmdLayoutInsertRowAbove",
            "acCmdLayoutInsertRowBelow",
            "acCmdLayoutMergeCells",
            "acCmdLayoutPreview",
            "acCmdLayoutSplitColumnCell",
            "acCmdLayoutSplitRowCell",
            "acCmdLayoutView",
            "acCmdLineUpIcons",
            "acCmdLinkedTableManager",
            "acCmdLinkTables",
            "acCmdListConstants",
            "acCmdLoadFromQuery",
            "acCmdMacroAllActions",
            "acCmdMakeMDEFile",
            "acCmdManageAttachments",
            "acCmdManageReplies",
            "acCmdManageTableEvents",
            "acCmdMaximiumRecords",
            "acCmdMicrosoftAccessHelpTopics",
            "acCmdMicrosoftOnTheWeb",
            "acCmdModifySharePointList",
            "acCmdModifySharePointListAlerts",
            "acCmdModifySharePointListPermissions",
            "acCmdModifySharePointListWorkflow",
            "acCmdMoreWindows",
            "acCmdMoveColumnCellDown",
            "acCmdMoveColumnCellUp",
            "acCmdNewDatabase",
            "acCmdNewGroup",
            "acCmdNewObjectAutoForm",
            "acCmdNewObjectAutoFormWeb",
            "acCmdNewObjectAutoReport",
            "acCmdNewObjectAutoReportWeb",
            "acCmdNewObjectBlankForm",
            "acCmdNewObjectBlankFormWeb",
            "acCmdNewObjectBlankReport",
            "acCmdNewObjectBlankReportWeb",
            "acCmdNewObjectClassModule",
            "acCmdNewObjectContinuousForm",
            "acCmdNewObjectContinuousFormWeb",
            "acCmdNewObjectDatasheetForm",
            "acCmdNewObjectDatasheetFormWeb",
            "acCmdNewObjectDesignForm",
            "acCmdNewObjectDesignQuery",
            "acCmdNewObjectDesignReport",
            "acCmdNewObjectDesignTable",
            "acCmdNewObjectDiagram",
            "acCmdNewObjectForm",
            "acCmdNewObjectFunction",
            "acCmdNewObjectLabelsReport",
            "acCmdNewObjectMacro",
            "acCmdNewObjectMacroWeb",
            "acCmdNewObjectModalForm",
            "acCmdNewObjectModule",
            "acCmdNewObjectNavigationLeft",
            "acCmdNewObjectNavigationLeftWeb",
            "acCmdNewObjectNavigationRight",
            "acCmdNewObjectNavigationRightWeb",
            "acCmdNewObjectNavigationTop",
            "acCmdNewObjectNavigationTopLeft",
            "acCmdNewObjectNavigationTopLeftWeb",
            "acCmdNewObjectNavigationTopRight",
            "acCmdNewObjectNavigationTopRightWeb",
            "acCmdNewObjectNavigationTopTop",
            "acCmdNewObjectNavigationTopTopWeb",
            "acCmdNewObjectNavigationTopWeb",
            "acCmdNewObjectPivotChart",
            "acCmdNewObjectPivotTable",
            "acCmdNewObjectQuery",
            "acCmdNewObjectQueryWeb",
            "acCmdNewObjectReport",
            "acCmdNewObjectSplitForm",
            "acCmdNewObjectStoredProcedure",
            "acCmdNewObjectTable",
            "acCmdNewObjectView",
            "acCmdObjBrwFindWholeWordOnly",
            "acCmdObjBrwGroupMembers",
            "acCmdObjBrwHelp",
            "acCmdObjBrwShowHiddenMembers",
            "acCmdObjBrwViewDefinition",
            "acCmdObjectBrowser",
            "acCmdOfficeClipboard",
            "acCmdOLEDDELinks",
            "acCmdOLEObjectConvert",
            "acCmdOLEObjectDefaultVerb",
            "acCmdOpenDatabase",
            "acCmdOpenHyperlink",
            "acCmdOpenNewHyperlink",
            "acCmdOpenSearchPage",
            "acCmdOpenStartPage",
            "acCmdOpenTable",
            "acCmdOpenURL",
            "acCmdOptions",
            "acCmdOutdent",
            "acCmdOutputToExcel",
            "acCmdOutputToRTF",
            "acCmdOutputToText",
            "acCmdPageHdrFtr",
            "acCmdPageNumber",
            "acCmdPageProperties",
            "acCmdPageSetup",
            "acCmdParameterInfo",
            "acCmdPartialReplicaWizard",
            "acCmdPaste",
            "acCmdPasteAppend",
            "acCmdPasteAsHyperlink",
            "acCmdPasteFormatting",
            "acCmdPasteSpecial",
            "acCmdPivotAutoAverage",
            "acCmdPivotAutoCount",
            "acCmdPivotAutoFilter",
            "acCmdPivotAutoMax",
            "acCmdPivotAutoMin",
            "acCmdPivotAutoStdDev",
            "acCmdPivotAutoStdDevP",
            "acCmdPivotAutoSum",
            "acCmdPivotAutoVar",
            "acCmdPivotAutoVarP",
            "acCmdPivotChartByRowByColumn",
            "acCmdPivotChartDrillInto",
            "acCmdPivotChartDrillOut",
            "acCmdPivotChartMultiplePlots",
            "acCmdPivotChartMultiplePlotsUnifiedScale",
            "acCmdPivotChartShowLegend",
            "acCmdPivotChartSortAscByTotal",
            "acCmdPivotChartSortDescByTotal",
            "acCmdPivotChartType",
            "acCmdPivotChartUndo",
            "acCmdPivotChartView",
            "acCmdPivotCollapse",
            "acCmdPivotDelete",
            "acCmdPivotDropAreas",
            "acCmdPivotExpand",
            "acCmdPivotRefresh",
            "acCmdPivotShowAll",
            "acCmdPivotShowBottom1",
            "acCmdPivotShowBottom10",
            "acCmdPivotShowBottom10Percent",
            "acCmdPivotShowBottom1Percent",
            "acCmdPivotShowBottom2",
            "acCmdPivotShowBottom25",
            "acCmdPivotShowBottom25Percent",
            "acCmdPivotShowBottom2Percent",
            "acCmdPivotShowBottom5",
            "acCmdPivotShowBottom5Percent",
            "acCmdPivotShowBottomOther",
            "acCmdPivotShowTop1",
            "acCmdPivotShowTop10",
            "acCmdPivotShowTop10Percent",
            "acCmdPivotShowTop1Percent",
            "acCmdPivotShowTop2",
            "acCmdPivotShowTop25",
            "acCmdPivotShowTop25Percent",
            "acCmdPivotShowTop2Percent",
            "acCmdPivotShowTop5",
            "acCmdPivotShowTop5Percent",
            "acCmdPivotShowTopOther",
            "acCmdPivotTableClearCustomOrdering",
            "acCmdPivotTableCreateCalcField",
            "acCmdPivotTableCreateCalcTotal",
            "acCmdPivotTableDemote",
            "acCmdPivotTableExpandIndicators",
            "acCmdPivotTableExportToExcel",
            "acCmdPivotTableFilterBySelection",
            "acCmdPivotTableGroupItems",
            "acCmdPivotTableHideDetails",
            "acCmdPivotTableMoveToColumnArea",
            "acCmdPivotTableMoveToDetailArea",
            "acCmdPivotTableMoveToFilterArea",
            "acCmdPivotTableMoveToRowArea",
            "acCmdPivotTablePercentColumnTotal",
            "acCmdPivotTablePercentGrandTotal",
            "acCmdPivotTablePercentParentColumnItem",
            "acCmdPivotTablePercentParentRowItem",
            "acCmdPivotTablePercentRowTotal",
            "acCmdPivotTablePromote",
            "acCmdPivotTableRemove",
            "acCmdPivotTableShowAsNormal",
            "acCmdPivotTableShowDetails",
            "acCmdPivotTableSubtotal",
            "acCmdPivotTableUngroupItems",
            "acCmdPivotTableView",
            "acCmdPrepareDatabaseForWeb",
            "acCmdPreviewEightPages",
            "acCmdPreviewFourPages",
            "acCmdPreviewOnePage",
            "acCmdPreviewTwelvePages",
            "acCmdPreviewTwoPages",
            "acCmdPrimaryKey",
            "acCmdPrint",
            "acCmdPrintPreview",
            "acCmdPrintRelationships",
            "acCmdPrintSelection",
            "acCmdProcedureDefinition",
            "acCmdProperties",
            "acCmdPublishDatabase",
            "acCmdPublishDefaults",
            "acCmdPublishFixedFormat",
            "acCmdQueryAddToOutput",
            "acCmdQueryGroupBy",
            "acCmdQueryParameters",
            "acCmdQueryTotals",
            "acCmdQueryTypeAppend",
            "acCmdQueryTypeCrosstab",
            "acCmdQueryTypeDelete",
            "acCmdQueryTypeMakeTable",
            "acCmdQueryTypeSelect",
            "acCmdQueryTypeSQLDataDefinition",
            "acCmdQueryTypeSQLPassThrough",
            "acCmdQueryTypeSQLUnion",
            "acCmdQueryTypeUpdate",
            "acCmdQuickInfo",
            "acCmdQuickPrint",
            "acCmdQuickWatch",
            "acCmdRecordsGoToFirst",
            "acCmdRecordsGoToLast",
            "acCmdRecordsGoToNew",
            "acCmdRecordsGoToNext",
            "acCmdRecordsGoToPrevious",
            "acCmdRecoverDesignMaster",
            "acCmdRedo",
            "acCmdReferences",
            "acCmdRefresh",
            "acCmdRefreshData",
            "acCmdRefreshPage",
            "acCmdRefreshSharePointList",
            "acCmdRegisterActiveXControls",
            "acCmdRelationships",
            "acCmdRemove",
            "acCmdRemoveAllFilters",
            "acCmdRemoveAllSorts",
            "acCmdRemoveFilterFromCurrentColumn",
            "acCmdRemoveFilterSort",
            "acCmdRemoveFromLayout",
            "acCmdRemoveTable",
            "acCmdRename",
            "acCmdRenameColumn",
            "acCmdRenameGroup",
            "acCmdRepairDatabase",
            "acCmdReplace",
            "acCmdReportHdrFtr",
            "acCmdReportView",
            "acCmdReset",
            "acCmdResolveConflicts",
            "acCmdRestore",
            "acCmdRowHeight",
            "acCmdRun",
            "acCmdRunMacro",
            "acCmdRunOpenMacro",
            "acCmdSave",
            "acCmdSaveAllModules",
            "acCmdSaveAs",
            "acCmdSaveAsHTML",
            "acCmdSaveAsOutlookContact",
            "acCmdSaveAsQuery",
            "acCmdSaveAsReport",
            "acCmdSaveAsTemplate",
            "acCmdSaveDatabaseAsNewTemplatePart",
            "acCmdSavedExports",
            "acCmdSavedImports",
            "acCmdSaveLayout",
            "acCmdSaveModuleAsText",
            "acCmdSaveRecord",
            "acCmdSaveSelectionAsNewDataType",
            "acCmdSelectAll",
            "acCmdSelectAllRecords",
            "acCmdSelectEntireColumn",
            "acCmdSelectEntireLayout",
            "acCmdSelectEntireRow",
            "acCmdSelectForm",
            "acCmdSelectRecord",
            "acCmdSelectReport",
            "acCmdSend",
            "acCmdSendToBack",
            "acCmdServerFilterByForm",
            "acCmdServerProperties",
            "acCmdSetCaption",
            "acCmdSetControlDefaults",
            "acCmdSetDatabasePassword",
            "acCmdSetNextStatement",
            "acCmdShareOnSharePoint",
            "acCmdSharePointSiteRecycleBin",
            "acCmdShowAllRelationships",
            "acCmdShowColumnHistory",
            "acCmdShowDatePicker",
            "acCmdShowDirectRelationships",
            "acCmdShowEnvelope",
            "acCmdShowLogicCatalog",
            "acCmdShowMembers",
            "acCmdShowMessageBar",
            "acCmdShowNextStatement",
            "acCmdShowTable",
            "acCmdSingleStep",
            "acCmdSizeToFit",
            "acCmdSizeToFitForm",
            "acCmdSizeToGrid",
            "acCmdSizeToNarrowest",
            "acCmdSizeToWidest",
            "acCmdSnapToGrid",
            "acCmdSortAscending",
            "acCmdSortDescending",
            "acCmdSortingAndGrouping",
            "acCmdSpeech",
            "acCmdSpelling",
            "acCmdSQLView",
            "acCmdStackedLayout",
            "acCmdStartNewWorkflow",
            "acCmdStartupProperties",
            "acCmdStepInto",
            "acCmdStepOut",
            "acCmdStepOver",
            "acCmdStepToCursor",
            "acCmdSubdatasheetCollapseAll",
            "acCmdSubdatasheetExpandAll",
            "acCmdSubdatasheetRemove",
            "acCmdSubformDatasheet",
            "acCmdSubformDatasheetView",
            "acCmdSubformFormView",
            "acCmdSubformInNewWindow",
            "acCmdSubformPivotChartView",
            "acCmdSubformPivotTableView",
            "acCmdSwitchboardManager",
            "acCmdSynchronize",
            "acCmdSynchronizeNow",
            "acCmdSyncWebApplication",
            "acCmdTabControlPageOrder",
            "acCmdTableAddTable",
            "acCmdTableCustomView",
            "acCmdTableNames",
            "acCmdTabOrder",
            "acCmdTabularLayout",
            "acCmdTestValidationRules",
            "acCmdTileHorizontally",
            "acCmdTileVertically",
            "acCmdToggleBreakpoint",
            "acCmdToggleCacheListData",
            "acCmdToggleFilter",
            "acCmdToggleOffline",
            "acCmdToolbarControlProperties",
            "acCmdToolbarsCustomize",
            "acCmdTransferSQLDatabase",
            "acCmdTransparentBackground",
            "acCmdTransparentBorder",
            "acCmdUndo",
            "acCmdUnfreezeAllColumns",
            "acCmdUngroupControls",
            "acCmdUnhideColumns",
            "acCmdUpsizingWizard",
            "acCmdUserAndGroupAccounts",
            "acCmdUserAndGroupPermissions",
            "acCmdUserLevelSecurityWizard",
            "acCmdVerticalSpacingDecrease",
            "acCmdVerticalSpacingIncrease",
            "acCmdVerticalSpacingMakeEqual",
            "acCmdViewCode",
            "acCmdViewDetails",
            "acCmdViewDiagrams",
            "acCmdViewFieldList",
            "acCmdViewForms",
            "acCmdViewFunctions",
            "acCmdViewGrid",
            "acCmdViewLargeIcons",
            "acCmdViewList",
            "acCmdViewMacros",
            "acCmdViewModules",
            "acCmdViewObjectDependencies",
            "acCmdViewQueries",
            "acCmdViewReports",
            "acCmdViewRuler",
            "acCmdViewShowPaneDiagram",
            "acCmdViewShowPaneGrid",
            "acCmdViewShowPaneSQL",
            "acCmdViewSmallIcons",
            "acCmdViewStoredProcedures",
            "acCmdViewTableColumnNames",
            "acCmdViewTableColumnProperties",
            "acCmdViewTableKeys",
            "acCmdViewTableNameOnly",
            "acCmdViewTables",
            "acCmdViewTableUserView",
            "acCmdViewToolbox",
            "acCmdViewVerifySQL",
            "acCmdViewViews",
            "acCmdVisualBasicEditor",
            "acCmdWindowArrangeIcons",
            "acCmdWindowCascade",
            "acCmdWindowHide",
            "acCmdWindowSplit",
            "acCmdWindowUnhide",
            "acCmdWordMailMerge",
            "acCmdWorkflowTasks",
            "acCmdWorkgroupAdministrator",
            "acCmdZoom10",
            "acCmdZoom100",
            "acCmdZoom1000",
            "acCmdZoom150",
            "acCmdZoom200",
            "acCmdZoom25",
            "acCmdZoom50",
            "acCmdZoom500",
            "acCmdZoom75",
            "acCmdZoomBox",
            "acCmdZoomSelection"
        ],
        "file_name": "Access.AcCommand.md",
        "kind": "enumeration",
        "main": "Used with the **[RunCommand](Access.Application.RunCommand.md)** method to run built-in commands.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acCmdAboutMicrosoftAccess**|35||\n|**acCmdAddDataMacroAfterDelete**|720||\n|**acCmdAddDataMacroAfterInsert**|718||\n|**acCmdAddDataMacroAfterUpdate**|719||\n|**acCmdAddDataMacroValidateChange**|722||\n|**acCmdAddDataMacroValidateDelete**|721||\n|**acCmdAddFromOutlook**|583||\n|**acCmdAddInManager**|526||\n|**acCmdAddNamedDataMacro**|723||\n|**acCmdAddToNewGroup**|494||\n|**acCmdAddWatch**|201||\n|**acCmdAdvancedFilterSort**|99||\n|**acCmdAlignBottom**|46||\n|**acCmdAlignCenter**|477||\n|**acCmdAlignLeft**|43||\n|**acCmdAlignmentAndSizing**|478||\n|**acCmdAlignMiddle**|476||\n|**acCmdAlignRight**|44||\n|**acCmdAlignToGrid**|47||\n|**acCmdAlignTop**|45||\n|**acCmdAlignToShortest**|153||\n|**acCmdAlignToTallest**|154||\n|**acCmdAnalyzePerformance**|283||\n|**acCmdAnalyzeTable**|284||\n|**acCmdAnchorBottomLeft**|616||\n|**acCmdAnchorBottomRight**|618||\n|**acCmdAnchorBottomStretchAcross**|617||\n|**acCmdAnchorStretchAcross**|611||\n|**acCmdAnchorStretchDown**|613||\n|**acCmdAnchorStretchDownAcross**|614||\n|**acCmdAnchorStretchDownRight**|615||\n|**acCmdAnchorTopLeft**|610||\n|**acCmdAnchorTopRight**|612||\n|**acCmdAnswerWizard**|235||\n|**acCmdApplyAutoFormat1**|648||\n|**acCmdApplyAutoFormat10**|657||\n|**acCmdApplyAutoFormat11**|658||\n|**acCmdApplyAutoFormat12**|659||\n|**acCmdApplyAutoFormat13**|660||\n|**acCmdApplyAutoFormat14**|661||\n|**acCmdApplyAutoFormat15**|662||\n|**acCmdApplyAutoFormat16**|663||\n|**acCmdApplyAutoFormat17**|664||\n|**acCmdApplyAutoFormat18**|665||\n|**acCmdApplyAutoFormat19**|666||\n|**acCmdApplyAutoFormat2**|649||\n|**acCmdApplyAutoFormat20**|667||\n|**acCmdApplyAutoFormat21**|668||\n|**acCmdApplyAutoFormat22**|669||\n|**acCmdApplyAutoFormat23**|670||\n|**acCmdApplyAutoFormat24**|671||\n|**acCmdApplyAutoFormat25**|672||\n|**acCmdApplyAutoFormat3**|650||\n|**acCmdApplyAutoFormat4**|651||\n|**acCmdApplyAutoFormat5**|652||\n|**acCmdApplyAutoFormat6**|653||\n|**acCmdApplyAutoFormat7**|654||\n|**acCmdApplyAutoFormat8**|655||\n|**acCmdApplyAutoFormat9**|656||\n|**acCmdApplyDefault**|55||\n|**acCmdApplyFilterSort**|93||\n|**acCmdAppMaximize**|10||\n|**acCmdAppMinimize**|11||\n|**acCmdAppMove**|12||\n|**acCmdAppRestore**|9||\n|**acCmdAppSize**|13||\n|**acCmdArrangeIconsAuto**|218||\n|**acCmdArrangeIconsByCreated**|216||\n|**acCmdArrangeIconsByModified**|217||\n|**acCmdArrangeIconsByName**|214||\n|**acCmdArrangeIconsByType**|215||\n|**acCmdAutoCorrect**|261||\n|**acCmdAutoDial**|192||\n|**acCmdAutoFormat**|270||\n|**acCmdBackgroundPicture**|474||\n|**acCmdBackgroundSound**|475||\n|**acCmdBackup**|513||\n|**acCmdBookmarksClearAll**|310||\n|**acCmdBookmarksNext**|308||\n|**acCmdBookmarksPrevious**|309||\n|**acCmdBookmarksToggle**|307||\n|**acCmdBringToFront**|52||\n|**acCmdBrowseSharePointList**|621||\n|**acCmdCalculatedColumn**|698||\n|**acCmdCallStack**|172||\n|**acCmdChangeToCheckBox**|231||\n|**acCmdChangeToComboBox**|230||\n|**acCmdChangeToCommandButton**|501||\n|**acCmdChangeToImage**|234||\n|**acCmdChangeToLabel**|228||\n|**acCmdChangeToListBox**|229||\n|**acCmdChangeToOptionButton**|233||\n|**acCmdChangeToTextBox**|227||\n|**acCmdChangeToToggleButton**|232||\n|**acCmdClearAll**|146||\n|**acCmdClearAllBreakpoints**|132||\n|**acCmdClearGrid**|71||\n|**acCmdClearHyperlink**|343||\n|**acCmdClearItemDefaults**|237||\n|**acCmdClose**|58||\n|**acCmdCloseAll**|646||\n|**acCmdCloseDatabase**|538||\n|**acCmdCloseWindow**|186||\n|**acCmdCollectDataViaEmail**|608||\n|**acCmdColumnWidth**|117||\n|**acCmdCompactDatabase**|4||\n|**acCmdCompatCheckCurrentObject**|696||\n|**acCmdCompatCheckDatabase**|695||\n|**acCmdCompileAllModules**|125||\n|**acCmdCompileAndSaveAllModules**|126||\n|**acCmdCompileLoadedModules**|290||\n|**acCmdCompleteWord**|306||\n|**acCmdConditionalFormatting**|500||\n|**acCmdConnection**|383||\n|**acCmdControlMarginsMedium**|630||\n|**acCmdControlMarginsNarrow**|629||\n|**acCmdControlMarginsNone**|628||\n|**acCmdControlMarginsWide**|631||\n|**acCmdControlPaddingMedium**|634||\n|**acCmdControlPaddingNarrow**|633||\n|**acCmdControlPaddingNone**|632||\n|**acCmdControlPaddingWide**|635||\n|**acCmdControlWizardsToggle**|197||\n|**acCmdConvertDatabase**|171||\n|**acCmdConvertLinkedTableToLocal**|700||\n|**acCmdConvertMacrosToVisualBasic**|279||\n|**acCmdCopy**|190||\n|**acCmdCopyDatabaseFile**|516||\n|**acCmdCopyHyperlink**|328||\n|**acCmdCreateMenuFromMacro**|334||\n|**acCmdCreateRelationship**|150||\n|**acCmdCreateReplica**|263||\n|**acCmdCreateShortcut**|219||\n|**acCmdCreateShortcutMenuFromMacro**|336||\n|**acCmdCreateToolbarFromMacro**|335||\n|**acCmdCut**|189||\n|**acCmdDatabaseProperties**|256||\n|**acCmdDatabaseSplitter**|520||\n|**acCmdDataEntry**|78||\n|**acCmdDataOutline**|468||\n|**acCmdDatasheetView**|282||\n|**acCmdDateAndTime**|226||\n|**acCmdDebugWindow**|123||\n|**acCmdDelete**|337||\n|**acCmdDeleteGroup**|493||\n|**acCmdDeletePage**|332||\n|**acCmdDeleteQueryColumn**|81||\n|**acCmdDeleteRecord**|223||\n|**acCmdDeleteRows**|188||\n|**acCmdDeleteSharePointList**|627||\n|**acCmdDeleteTab**|255||\n|**acCmdDeleteTable**|489||\n|**acCmdDeleteTableColumn**|271||\n|**acCmdDeleteWatch**|267||\n|**acCmdDesignObject**|697||\n|**acCmdDesignView**|183||\n|**acCmdDiagramAddRelatedTables**|373||\n|**acCmdDiagramAutosizeSelectedTables**|378||\n|**acCmdDiagramDeleteRelationship**|382||\n|**acCmdDiagramLayoutDiagram**|380||\n|**acCmdDiagramLayoutSelection**|379||\n|**acCmdDiagramModifyUserDefinedView**|375||\n|**acCmdDiagramNewLabel**|372||\n|**acCmdDiagramNewTable**|381||\n|**acCmdDiagramRecalculatePageBreaks**|377||\n|**acCmdDiagramShowRelationshipLabels**|374||\n|**acCmdDiagramViewPageBreaks**|376||\n|**acCmdDiscardChanges**|639||\n|**acCmdDiscardChangesAndRefresh**|640||\n|**acCmdDocMaximize**|15||\n|**acCmdDocMinimize**|60||\n|**acCmdDocMove**|16||\n|**acCmdDocRestore**|14||\n|**acCmdDocSize**|17||\n|**acCmdDocumenter**|285||\n|**acCmdDropSQLDatabase**|517||\n|**acCmdDuplicate**|34||\n|**acCmdEditHyperlink**|325||\n|**acCmdEditingAllowed**|70||\n|**acCmdEditListItems**|607||\n|**acCmdEditRelationship**|151||\n|**acCmdEditTriggers**|384||\n|**acCmdEditWatch**|202||\n|**acCmdEncryptDecryptDatabase**|5||\n|**acCmdEnd**|198||\n|**acCmdExit**|3||\n|**acCmdExportAccess**|559||\n|**acCmdExportdBase**|565||\n|**acCmdExportExcel**|556||\n|**acCmdExportFixedFormat**|592||\n|**acCmdExportHTML**|564||\n|**acCmdExportODBC**|562||\n|**acCmdExportRTF**|558||\n|**acCmdExportSharePointList**|557||\n|**acCmdExportSnapShot**|563||\n|**acCmdExportText**|560||\n|**acCmdExportXML**|561||\n|**acCmdFavoritesAddTo**|299||\n|**acCmdFavoritesOpen**|298||\n|**acCmdFieldList**|42||\n|**acCmdFilterByForm**|207||\n|**acCmdFilterBySelection**|208||\n|**acCmdFilterExcludingSelection**|277||\n|**acCmdFilterMenu**|619||\n|**acCmdFind**|30||\n|**acCmdFindNext**|341||\n|**acCmdFindNextWordUnderCursor**|313||\n|**acCmdFindPrevious**|120||\n|**acCmdFindPrevWordUnderCursor**|312||\n|**acCmdFitToWindow**|245||\n|**acCmdFont**|19||\n|**acCmdFormatCells**|77||\n|**acCmdFormHdrFtr**|36||\n|**acCmdFormView**|281||\n|**acCmdFreezeColumn**|105||\n|**acCmdGoBack**|294||\n|**acCmdGoContinue**|127||\n|**acCmdGoForward**|295||\n|**acCmdGroupByTable**|387||\n|**acCmdGroupControls**|484||\n|**acCmdHideColumns**|79||\n|**acCmdHideMessageBar**|677||\n|**acCmdHidePane**|365||\n|**acCmdHideTable**|147||\n|**acCmdHorizontalSpacingDecrease**|158||\n|**acCmdHorizontalSpacingIncrease**|159||\n|**acCmdHorizontalSpacingMakeEqual**|157||\n|**acCmdHyperlinkDisplayText**|329||\n|**acCmdImportAttachAccess**|544||\n|**acCmdImportAttachdBase**|552||\n|**acCmdImportAttachExcel**|545||\n|**acCmdImportAttachHTML**|550||\n|**acCmdImportAttachODBC**|549||\n|**acCmdImportAttachOutlook**|551||\n|**acCmdImportAttachSharePointList**|547||\n|**acCmdImportAttachText**|546||\n|**acCmdImportAttachXML**|548||\n|**acCmdIndent**|205||\n|**acCmdIndexes**|152||\n|**acCmdInsertActiveXControl**|258||\n|**acCmdInsertChart**|293||\n|**acCmdInsertFile**|39||\n|**acCmdInsertFileIntoModule**|118||\n|**acCmdInsertHyperlink**|259||\n|**acCmdInsertLogo**|585||\n|**acCmdInsertLookupColumn**|273||\n|**acCmdInsertLookupField**|291||\n|**acCmdInsertMovieFromFile**|469||\n|**acCmdInsertNavigationButton**|724||\n|**acCmdInsertObject**|33||\n|**acCmdInsertPage**|331||\n|**acCmdInsertPicture**|222||\n|**acCmdInsertPivotTable**|470||\n|**acCmdInsertProcedure**|262||\n|**acCmdInsertQueryColumn**|82||\n|**acCmdInsertRows**|187||\n|**acCmdInsertSpreadsheet**|471||\n|**acCmdInsertSubdatasheet**|499||\n|**acCmdInsertTableColumn**|272||\n|**acCmdInsertTitle**|586||\n|**acCmdInsertUnboundSection**|472||\n|**acCmdInvokeBuilder**|178||\n|**acCmdJoinProperties**|72||\n|**acCmdLastPosition**|339||\n|**acCmdLayoutGridlinesBoth**|574||\n|**acCmdLayoutGridlinesBottom**|580||\n|**acCmdLayoutGridlinesCrossHatch**|578||\n|**acCmdLayoutGridlinesHorizontal**|576||\n|**acCmdLayoutGridlinesNone**|577||\n|**acCmdLayoutGridlinesOutline**|581||\n|**acCmdLayoutGridlinesTop**|579||\n|**acCmdLayoutGridlinesVertical**|575||\n|**acCmdLayoutInsertColumnLeft**|680||\n|**acCmdLayoutInsertColumnRight**|681||\n|**acCmdLayoutInsertRowAbove**|678||\n|**acCmdLayoutInsertRowBelow**|679||\n|**acCmdLayoutMergeCells**|682||\n|**acCmdLayoutPreview**|141||\n|**acCmdLayoutSplitColumnCell**|683||\n|**acCmdLayoutSplitRowCell**|684||\n|**acCmdLayoutView**|593||\n|**acCmdLineUpIcons**|213||\n|**acCmdLinkedTableManager**|519||\n|**acCmdLinkTables**|102||\n|**acCmdListConstants**|303||\n|**acCmdLoadFromQuery**|95||\n|**acCmdMacroAllActions**|589||\n|**acCmdMakeMDEFile**|7||\n|**acCmdManageAttachments**|673||\n|**acCmdManageReplies**|609||\n|**acCmdManageTableEvents**|717||\n|**acCmdMaximiumRecords**|508||\n|**acCmdMicrosoftAccessHelpTopics**|100||\n|**acCmdMicrosoftOnTheWeb**|236||\n|**acCmdModifySharePointList**|622||\n|**acCmdModifySharePointListAlerts**|623||\n|**acCmdModifySharePointListPermissions**|625||\n|**acCmdModifySharePointListWorkflow**|624||\n|**acCmdMoreWindows**|8||\n|**acCmdMoveColumnCellDown**|573||\n|**acCmdMoveColumnCellUp**|572||\n|**acCmdNewDatabase**|26||\n|**acCmdNewGroup**|491||\n|**acCmdNewObjectAutoForm**|193||\n|**acCmdNewObjectAutoFormWeb**|705||\n|**acCmdNewObjectAutoReport**|194||\n|**acCmdNewObjectAutoReportWeb**|706||\n|**acCmdNewObjectBlankForm**|600||\n|**acCmdNewObjectBlankFormWeb**|703||\n|**acCmdNewObjectBlankReport**|602||\n|**acCmdNewObjectBlankReportWeb**|704||\n|**acCmdNewObjectClassModule**|140||\n|**acCmdNewObjectContinuousForm**|594||\n|**acCmdNewObjectContinuousFormWeb**|701||\n|**acCmdNewObjectDatasheetForm**|598||\n|**acCmdNewObjectDatasheetFormWeb**|702||\n|**acCmdNewObjectDesignForm**|604||\n|**acCmdNewObjectDesignQuery**|603||\n|**acCmdNewObjectDesignReport**|605||\n|**acCmdNewObjectDesignTable**|606||\n|**acCmdNewObjectDiagram**|352||\n|**acCmdNewObjectForm**|136||\n|**acCmdNewObjectFunction**|394||\n|**acCmdNewObjectLabelsReport**|601||\n|**acCmdNewObjectMacro**|138||\n|**acCmdNewObjectMacroWeb**|708||\n|**acCmdNewObjectModalForm**|599||\n|**acCmdNewObjectModule**|139||\n|**acCmdNewObjectNavigationLeft**|690||\n|**acCmdNewObjectNavigationLeftWeb**|710||\n|**acCmdNewObjectNavigationRight**|691||\n|**acCmdNewObjectNavigationRightWeb**|711||\n|**acCmdNewObjectNavigationTop**|689||\n|**acCmdNewObjectNavigationTopLeft**|693||\n|**acCmdNewObjectNavigationTopLeftWeb**|713||\n|**acCmdNewObjectNavigationTopRight**|694||\n|**acCmdNewObjectNavigationTopRightWeb**|714||\n|**acCmdNewObjectNavigationTopTop**|692||\n|**acCmdNewObjectNavigationTopTopWeb**|712||\n|**acCmdNewObjectNavigationTopWeb**|709||\n|**acCmdNewObjectPivotChart**|596||\n|**acCmdNewObjectPivotTable**|597||\n|**acCmdNewObjectQuery**|135||\n|**acCmdNewObjectQueryWeb**|707||\n|**acCmdNewObjectReport**|137||\n|**acCmdNewObjectSplitForm**|595||\n|**acCmdNewObjectStoredProcedure**|351||\n|**acCmdNewObjectTable**|134||\n|**acCmdNewObjectView**|350||\n|**acCmdObjBrwFindWholeWordOnly**|314||\n|**acCmdObjBrwGroupMembers**|318||\n|**acCmdObjBrwHelp**|316||\n|**acCmdObjBrwShowHiddenMembers**|315||\n|**acCmdObjBrwViewDefinition**|317||\n|**acCmdObjectBrowser**|200||\n|**acCmdOfficeClipboard**|488||\n|**acCmdOLEDDELinks**|27||\n|**acCmdOLEObjectConvert**|167||\n|**acCmdOLEObjectDefaultVerb**|57||\n|**acCmdOpenDatabase**|25||\n|**acCmdOpenHyperlink**|326||\n|**acCmdOpenNewHyperlink**|327||\n|**acCmdOpenSearchPage**|253||\n|**acCmdOpenStartPage**|252||\n|**acCmdOpenTable**|221||\n|**acCmdOpenURL**|251||\n|**acCmdOptions**|49||\n|**acCmdOutdent**|206||\n|**acCmdOutputToExcel**|175||\n|**acCmdOutputToRTF**|176||\n|**acCmdOutputToText**|177||\n|**acCmdPageHdrFtr**|182||\n|**acCmdPageNumber**|225||\n|**acCmdPageProperties**|467||\n|**acCmdPageSetup**|32||\n|**acCmdParameterInfo**|305||\n|**acCmdPartialReplicaWizard**|524||\n|**acCmdPaste**|191||\n|**acCmdPasteAppend**|38||\n|**acCmdPasteAsHyperlink**|490||\n|**acCmdPasteFormatting**|587||\n|**acCmdPasteSpecial**|64||\n|**acCmdPivotAutoAverage**|416||\n|**acCmdPivotAutoCount**|413||\n|**acCmdPivotAutoFilter**|398||\n|**acCmdPivotAutoMax**|415||\n|**acCmdPivotAutoMin**|414||\n|**acCmdPivotAutoStdDev**|417||\n|**acCmdPivotAutoStdDevP**|419||\n|**acCmdPivotAutoSum**|412||\n|**acCmdPivotAutoVar**|418||\n|**acCmdPivotAutoVarP**|420||\n|**acCmdPivotChartByRowByColumn**|456||\n|**acCmdPivotChartDrillInto**|457||\n|**acCmdPivotChartDrillOut**|532||\n|**acCmdPivotChartMultiplePlots**|458||\n|**acCmdPivotChartMultiplePlotsUnifiedScale**|459||\n|**acCmdPivotChartShowLegend**|455||\n|**acCmdPivotChartSortAscByTotal**|534||\n|**acCmdPivotChartSortDescByTotal**|535||\n|**acCmdPivotChartType**|453||\n|**acCmdPivotChartUndo**|460||\n|**acCmdPivotChartView**|397||\n|**acCmdPivotCollapse**|400||\n|**acCmdPivotDelete**|454||\n|**acCmdPivotDropAreas**|452||\n|**acCmdPivotExpand**|401||\n|**acCmdPivotRefresh**|404||\n|**acCmdPivotShowAll**|461||\n|**acCmdPivotShowBottom1**|432||\n|**acCmdPivotShowBottom10**|435||\n|**acCmdPivotShowBottom10Percent**|440||\n|**acCmdPivotShowBottom1Percent**|437||\n|**acCmdPivotShowBottom2**|433||\n|**acCmdPivotShowBottom25**|436||\n|**acCmdPivotShowBottom25Percent**|441||\n|**acCmdPivotShowBottom2Percent**|438||\n|**acCmdPivotShowBottom5**|434||\n|**acCmdPivotShowBottom5Percent**|439||\n|**acCmdPivotShowBottomOther**|442||\n|**acCmdPivotShowTop1**|421||\n|**acCmdPivotShowTop10**|424||\n|**acCmdPivotShowTop10Percent**|429||\n|**acCmdPivotShowTop1Percent**|426||\n|**acCmdPivotShowTop2**|422||\n|**acCmdPivotShowTop25**|425||\n|**acCmdPivotShowTop25Percent**|430||\n|**acCmdPivotShowTop2Percent**|427||\n|**acCmdPivotShowTop5**|423||\n|**acCmdPivotShowTop5Percent**|428||\n|**acCmdPivotShowTopOther**|431||\n|**acCmdPivotTableClearCustomOrdering**|527||\n|**acCmdPivotTableCreateCalcField**|444||\n|**acCmdPivotTableCreateCalcTotal**|443||\n|**acCmdPivotTableDemote**|411||\n|**acCmdPivotTableExpandIndicators**|451||\n|**acCmdPivotTableExportToExcel**|405||\n|**acCmdPivotTableFilterBySelection**|528||\n|**acCmdPivotTableGroupItems**|530||\n|**acCmdPivotTableHideDetails**|402||\n|**acCmdPivotTableMoveToColumnArea**|407||\n|**acCmdPivotTableMoveToDetailArea**|409||\n|**acCmdPivotTableMoveToFilterArea**|408||\n|**acCmdPivotTableMoveToRowArea**|406||\n|**acCmdPivotTablePercentColumnTotal**|447||\n|**acCmdPivotTablePercentGrandTotal**|450||\n|**acCmdPivotTablePercentParentColumnItem**|449||\n|**acCmdPivotTablePercentParentRowItem**|448||\n|**acCmdPivotTablePercentRowTotal**|446||\n|**acCmdPivotTablePromote**|410||\n|**acCmdPivotTableRemove**|529||\n|**acCmdPivotTableShowAsNormal**|445||\n|**acCmdPivotTableShowDetails**|403||\n|**acCmdPivotTableSubtotal**|399||\n|**acCmdPivotTableUngroupItems**|531||\n|**acCmdPivotTableView**|396||\n|**acCmdPrepareDatabaseForWeb**|716||\n|**acCmdPreviewEightPages**|249||\n|**acCmdPreviewFourPages**|248||\n|**acCmdPreviewOnePage**|246||\n|**acCmdPreviewTwelvePages**|250||\n|**acCmdPreviewTwoPages**|247||\n|**acCmdPrimaryKey**|107||\n|**acCmdPrint**|340||\n|**acCmdPrintPreview**|54||\n|**acCmdPrintRelationships**|483||\n|**acCmdPrintSelection**|590||\n|**acCmdProcedureDefinition**|122||\n|**acCmdProperties**|287||\n|**acCmdPublishDatabase**|537||\n|**acCmdPublishDefaults**|324||\n|**acCmdPublishFixedFormat**|591||\n|**acCmdQueryAddToOutput**|362||\n|**acCmdQueryGroupBy**|361||\n|**acCmdQueryParameters**|76||\n|**acCmdQueryTotals**|73||\n|**acCmdQueryTypeAppend**|91||\n|**acCmdQueryTypeCrosstab**|74||\n|**acCmdQueryTypeDelete**|92||\n|**acCmdQueryTypeMakeTable**|94||\n|**acCmdQueryTypeSelect**|89||\n|**acCmdQueryTypeSQLDataDefinition**|168||\n|**acCmdQueryTypeSQLPassThrough**|169||\n|**acCmdQueryTypeSQLUnion**|180||\n|**acCmdQueryTypeUpdate**|90||\n|**acCmdQuickInfo**|304||\n|**acCmdQuickPrint**|278||\n|**acCmdQuickWatch**|203||\n|**acCmdRecordsGoToFirst**|67||\n|**acCmdRecordsGoToLast**|68||\n|**acCmdRecordsGoToNew**|28||\n|**acCmdRecordsGoToNext**|65||\n|**acCmdRecordsGoToPrevious**|66||\n|**acCmdRecoverDesignMaster**|265||\n|**acCmdRedo**|199||\n|**acCmdReferences**|260||\n|**acCmdRefresh**|18||\n|**acCmdRefreshData**|541||\n|**acCmdRefreshPage**|297||\n|**acCmdRefreshSharePointList**|626||\n|**acCmdRegisterActiveXControls**|254||\n|**acCmdRelationships**|133||\n|**acCmdRemove**|366||\n|**acCmdRemoveAllFilters**|644||\n|**acCmdRemoveAllSorts**|645||\n|**acCmdRemoveFilterFromCurrentColumn**|643||\n|**acCmdRemoveFilterSort**|144||\n|**acCmdRemoveFromLayout**|582||\n|**acCmdRemoveTable**|84||\n|**acCmdRename**|143||\n|**acCmdRenameColumn**|274||\n|**acCmdRenameGroup**|492||\n|**acCmdRepairDatabase**|6||\n|**acCmdReplace**|29||\n|**acCmdReportHdrFtr**|37||\n|**acCmdReportView**|539||\n|**acCmdReset**|124||\n|**acCmdResolveConflicts**|266||\n|**acCmdRestore**|514||\n|**acCmdRowHeight**|116||\n|**acCmdRun**|181||\n|**acCmdRunMacro**|31||\n|**acCmdRunOpenMacro**|338||\n|**acCmdSave**|20||\n|**acCmdSaveAllModules**|280||\n|**acCmdSaveAs**|21||\n|**acCmdSaveAsHTML**|321||\n|**acCmdSaveAsOutlookContact**|584||\n|**acCmdSaveAsQuery**|96||\n|**acCmdSaveAsReport**|142||\n|**acCmdSaveAsTemplate**|686||\n|**acCmdSaveDatabaseAsNewTemplatePart**|687||\n|**acCmdSavedExports**|555||\n|**acCmdSavedImports**|543||\n|**acCmdSaveLayout**|145||\n|**acCmdSaveModuleAsText**|119||\n|**acCmdSaveRecord**|97||\n|**acCmdSaveSelectionAsNewDataType**|688||\n|**acCmdSelectAll**|333||\n|**acCmdSelectAllRecords**|109||\n|**acCmdSelectEntireColumn**|571||\n|**acCmdSelectEntireLayout**|715||\n|**acCmdSelectEntireRow**|570||\n|**acCmdSelectForm**|40||\n|**acCmdSelectRecord**|50||\n|**acCmdSelectReport**|319||\n|**acCmdSend**|173||\n|**acCmdSendToBack**|53||\n|**acCmdServerFilterByForm**|507||\n|**acCmdServerProperties**|496||\n|**acCmdSetCaption**|637||\n|**acCmdSetControlDefaults**|56||\n|**acCmdSetDatabasePassword**|275||\n|**acCmdSetNextStatement**|129||\n|**acCmdShareOnSharePoint**|542||\n|**acCmdSharePointSiteRecycleBin**|641||\n|**acCmdShowAllRelationships**|149||\n|**acCmdShowColumnHistory**|620||\n|**acCmdShowDatePicker**|636||\n|**acCmdShowDirectRelationships**|148||\n|**acCmdShowEnvelope**|533||\n|**acCmdShowLogicCatalog**|685||\n|**acCmdShowMembers**|302||\n|**acCmdShowMessageBar**|676||\n|**acCmdShowNextStatement**|130||\n|**acCmdShowTable**|185||\n|**acCmdSingleStep**|88||\n|**acCmdSizeToFit**|59||\n|**acCmdSizeToFitForm**|69||\n|**acCmdSizeToGrid**|48||\n|**acCmdSizeToNarrowest**|155||\n|**acCmdSizeToWidest**|156||\n|**acCmdSnapToGrid**|62||\n|**acCmdSortAscending**|163||\n|**acCmdSortDescending**|164||\n|**acCmdSortingAndGrouping**|51||\n|**acCmdSpeech**|511||\n|**acCmdSpelling**|269||\n|**acCmdSQLView**|184||\n|**acCmdStackedLayout**|568||\n|**acCmdStartNewWorkflow**|675||\n|**acCmdStartupProperties**|224||\n|**acCmdStepInto**|342||\n|**acCmdStepOut**|311||\n|**acCmdStepOver**|128||\n|**acCmdStepToCursor**|204||\n|**acCmdSubdatasheetCollapseAll**|505||\n|**acCmdSubdatasheetExpandAll**|504||\n|**acCmdSubdatasheetRemove**|506||\n|**acCmdSubformDatasheet**|108||\n|**acCmdSubformDatasheetView**|463||\n|**acCmdSubformFormView**|462||\n|**acCmdSubformInNewWindow**|495||\n|**acCmdSubformPivotChartView**|465||\n|**acCmdSubformPivotTableView**|464||\n|**acCmdSwitchboardManager**|521||\n|**acCmdSynchronize**|638||\n|**acCmdSynchronizeNow**|264||\n|**acCmdSyncWebApplication**|699||\n|**acCmdTabControlPageOrder**|330||\n|**acCmdTableAddTable**|498||\n|**acCmdTableCustomView**|497||\n|**acCmdTableNames**|75||\n|**acCmdTabOrder**|41||\n|**acCmdTabularLayout**|569||\n|**acCmdTestValidationRules**|196||\n|**acCmdTileHorizontally**|286||\n|**acCmdTileVertically**|23||\n|**acCmdToggleBreakpoint**|131||\n|**acCmdToggleCacheListData**|642||\n|**acCmdToggleFilter**|220||\n|**acCmdToggleOffline**|540||\n|**acCmdToolbarControlProperties**|301||\n|**acCmdToolbarsCustomize**|165||\n|**acCmdTransferSQLDatabase**|515||\n|**acCmdTransparentBackground**|288||\n|**acCmdTransparentBorder**|289||\n|**acCmdUndo**|292||\n|**acCmdUnfreezeAllColumns**|106||\n|**acCmdUngroupControls**|485||\n|**acCmdUnhideColumns**|80||\n|**acCmdUpsizingWizard**|522||\n|**acCmdUserAndGroupAccounts**|104||\n|**acCmdUserAndGroupPermissions**|103||\n|**acCmdUserLevelSecurityWizard**|276||\n|**acCmdVerticalSpacingDecrease**|161||\n|**acCmdVerticalSpacingIncrease**|162||\n|**acCmdVerticalSpacingMakeEqual**|160||\n|**acCmdViewCode**|170||\n|**acCmdViewDetails**|210||\n|**acCmdViewDiagrams**|354||\n|**acCmdViewFieldList**|353||\n|**acCmdViewForms**|112||\n|**acCmdViewFunctions**|395||\n|**acCmdViewGrid**|63||\n|**acCmdViewLargeIcons**|209||\n|**acCmdViewList**|212||\n|**acCmdViewMacros**|114||\n|**acCmdViewModules**|115||\n|**acCmdViewObjectDependencies**|536||\n|**acCmdViewQueries**|111||\n|**acCmdViewReports**|113||\n|**acCmdViewRuler**|61||\n|**acCmdViewShowPaneDiagram**|358||\n|**acCmdViewShowPaneGrid**|359||\n|**acCmdViewShowPaneSQL**|357||\n|**acCmdViewSmallIcons**|211||\n|**acCmdViewStoredProcedures**|355||\n|**acCmdViewTableColumnNames**|363||\n|**acCmdViewTableColumnProperties**|368||\n|**acCmdViewTableKeys**|369||\n|**acCmdViewTableNameOnly**|364||\n|**acCmdViewTables**|110||\n|**acCmdViewTableUserView**|370||\n|**acCmdViewToolbox**|85||\n|**acCmdViewVerifySQL**|360||\n|**acCmdViewViews**|356||\n|**acCmdVisualBasicEditor**|525||\n|**acCmdWindowArrangeIcons**|24||\n|**acCmdWindowCascade**|22||\n|**acCmdWindowHide**|2||\n|**acCmdWindowSplit**|121||\n|**acCmdWindowUnhide**|1||\n|**acCmdWordMailMerge**|195||\n|**acCmdWorkflowTasks**|674||\n|**acCmdWorkgroupAdministrator**|391||\n|**acCmdZoom10**|244||\n|**acCmdZoom100**|240||\n|**acCmdZoom1000**|482||\n|**acCmdZoom150**|239||\n|**acCmdZoom200**|238||\n|**acCmdZoom25**|243||\n|**acCmdZoom50**|242||\n|**acCmdZoom500**|481||\n|**acCmdZoom75**|241||\n|**acCmdZoomBox**|179||\n|**acCmdZoomSelection**|371||\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcControlType",
        "enum_ch": [
            "acAttachment",
            "acBoundObjectFrame",
            "acCheckBox",
            "acComboBox",
            "acCommandButton",
            "acCustomControl",
            "acEmptyCell",
            "acImage",
            "acLabel",
            "acLine",
            "acListBox",
            "acNavigationButton",
            "acNavigationControl",
            "acObjectFrame",
            "acOptionButton",
            "acOptionGroup",
            "acPage",
            "acPageBreak",
            "acRectangle",
            "acSubForm",
            "acTabCtl",
            "acTextBox",
            "acToggleButton",
            "acWebBrowser"
        ],
        "file_name": "Access.AcControlType.md",
        "kind": "enumeration",
        "main": "Specifies the type of control created by the **[CreateControl](Access.Application.CreateControl.md)** and **[CreateReportControl](access.application.createreportcontrol.md)** methods.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAttachment**|126|Attachment control|\n|**acBoundObjectFrame**|108|BoundObjectFrame control|\n|**acCheckBox**|106|CheckBox control|\n|**acComboBox**|111|ComboBox control|\n|**acCommandButton**|104|CommandButton control|\n|**acCustomControl**|119|ActiveX control|\n|**acEmptyCell**|127|EmptyCell control|\n|**acImage**|103|Image control|\n|**acLabel**|100|Label control|\n|**acLine**|102|Line control|\n|**acListBox**|110|ListBox control|\n|**acNavigationButton**|130|NavigationButton control|\n|**acNavigationControl**|129|NavigationControl control|\n|**acObjectFrame**|114|Unbound ObjectFrame control|\n|**acOptionButton**|105|OptionButton control|\n|**acOptionGroup**|107|OptionGroup control|\n|**acPage**|124|Page control|\n|**acPageBreak**|118|PageBreak control|\n|**acRectangle**|101|Rectangle control|\n|**acSubForm**|112|SubForm control|\n|**acTabCtl**|123|Tab control|\n|**acTextBox**|109|TextBox control|\n|**acToggleButton**|122|ToggleButton control|\n|**acWebBrowser**|128|WebBrowserControl control|\n"
    },
    {
        "api_name": "Access.AcCurrentView",
        "enum_ch": [
            "acCurViewDatasheet",
            "acCurViewDesign",
            "acCurViewFormBrowse",
            "acCurViewLayout",
            "acCurViewPivotChart",
            "acCurViewPivotTable",
            "acCurViewPreview",
            "acCurViewReportBrowse"
        ],
        "file_name": "Access.AcCurrentView.md",
        "kind": "enumeration",
        "main": "Used with the **CurrentView** property to determine the current view of an object.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acCurViewDatasheet**|2|The object is in Datasheet view.|\n|**acCurViewDesign**|0|The object is in Design view.|\n|**acCurViewFormBrowse**|1|The object is in Form view.|\n|**acCurViewLayout**|7|The object is in Layout view.|\n|**acCurViewPivotChart**|4|The object is in PivotChart view.|\n|**acCurViewPivotTable**|3|The object is in PivotTable view.|\n|**acCurViewPreview**|5|The object is in Print Preview.|\n|**acCurViewReportBrowse**|6|The object is in Report view.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcCursorOnHover",
        "enum_ch": [
            "acCursorOnHoverDefault",
            "acCursorOnHoverHyperlinkHand"
        ],
        "file_name": "Access.AcCursorOnHover.md",
        "kind": "enumeration",
        "main": "Used with the **CursorOnHover** property to specify the type of cursor displayed when a user rests the pointer on a button.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acCursorOnHoverDefault**|0|The default cursor is displayed.|\n|**acCursorOnHoverHyperlinkHand**|1|The hyperlink hand cursor is displayed.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcDashType",
        "enum_ch": [
            "acDashTypeDash",
            "acDashTypeDashDot",
            "acDashTypeDot",
            "acDashTypeSolid"
        ],
        "file_name": "Access.AcDashType.md",
        "kind": "enumeration",
        "main": "Specifies the line dash style for a series when its effective chart type is line-based.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDashTypeDash**|1|Dash|\n|**acDashTypeDashDot**|3|Dash Dot|\n|**acDashTypeDot**|2|Dot|\n|**acDashTypeSolid**|0|Solid|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcDataObjectType",
        "enum_ch": [
            "acActiveDataObject",
            "acDataForm",
            "acDataFunction",
            "acDataQuery",
            "acDataReport",
            "acDataServerView",
            "acDataStoredProcedure",
            "acDataTable"
        ],
        "file_name": "Access.AcDataObjectType.md",
        "kind": "enumeration",
        "main": "Used with the **GoToRecord** method to specify the type of object that contains the record to make current.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acActiveDataObject**|-1|The active object contains the record.|\n|**acDataForm**|2|A form contains the record.|\n|**acDataFunction**|10|A user-defined function contains the record (Microsoft Access project only).|\n|**acDataQuery**|1|A query contains the record.|\n|**acDataReport**|3|A report contains the record.|\n|**acDataServerView**|7|A server view contains the record (Microsoft Access project only).|\n|**acDataStoredProcedure**|9|A stored procedure contains the record (Microsoft Access project only).|\n|**acDataTable**|0|A table contains the record.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcDataTransferType",
        "enum_ch": [
            "acExport",
            "acImport",
            "acLink"
        ],
        "file_name": "Access.AcDataTransferType.md",
        "kind": "enumeration",
        "main": "Specifies the type of transfer that you want to make with the **TransferDatabase** or **TransferSpreadsheet** method.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acExport**|1|The data is exported.|\n|**acImport**|0|(Default) The data is imported.|\n|**acLink**|2|The database is linked to the specified data source.|\n"
    },
    {
        "api_name": "Access.AcDateGroupType",
        "enum_ch": [
            "acDateGroupDay",
            "acDateGroupMonth",
            "acDateGroupNone",
            "acDateGroupQuarter",
            "acDateGroupYear"
        ],
        "file_name": "Access.AcDateGroupType.md",
        "kind": "enumeration",
        "main": "Specifies the type of grouping applied to an axis; the type of its associated field is a date.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDateGroupDay**|4|The date is grouped by day.|\n|**acDateGroupMonth**|3|The date is grouped by month.|\n|**acDateGroupNone**|0|No grouping is applied.|\n|**acDateGroupQuarter**|2|The date is grouped by quarter.|\n|**acDateGroupYear**|1|The date is grouped by year.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcDefReportView",
        "enum_ch": [
            "acDefViewPreview",
            "acDefViewReportBrowse"
        ],
        "file_name": "Access.AcDefReportView.md",
        "kind": "enumeration",
        "main": "Use with the **DefaultView** property to set or return the opening view of a report.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDefViewPreview**|0|The report opens in Print Preview.|\n|**acDefViewReportBrowse**|1|The report opens in Report view.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcDefView",
        "enum_ch": [
            "acDefViewContinuous",
            "acDefViewDatasheet",
            "acDefViewPivotChart",
            "acDefViewPivotTable",
            "acDefViewSingle",
            "acDefViewSplitForm"
        ],
        "file_name": "Access.AcDefView.md",
        "kind": "enumeration",
        "main": "Use with the **DefaultView** property to set or return the opening view of a form.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDefViewContinuous**|1|The form displays multiple records (as many as will fit in the current window), each in its own copy of the form's detail section.|\n|**acDefViewDatasheet**|2|Displays the form fields arranged in rows and columns like a spreadsheet.|\n|**acDefViewPivotChart**|4|Displays the form as a PivotChart.|\n|**acDefViewPivotTable**|3|Displays the form as a PivotTable.|\n|**acDefViewSingle**|0|(Default) Displays one record at a time.|\n|**acDefViewSplitForm**|5|Displays the form in Split Form view.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcDisplayAs",
        "enum_ch": [
            "acDisplayAsIcon",
            "acDisplayAsImageIcon",
            "acDisplayAsPaperclip"
        ],
        "file_name": "Access.AcDisplayAs.md",
        "kind": "enumeration",
        "main": "Use with the **DisplayAs** property to specify what is displayed in an Attachment control.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDisplayAsIcon**|1|The attachment is displayed as the icon for that file type.|\n|**acDisplayAsImageIcon**|0|If the attachment is a supported image format, then the image is displayed. If the attachment is not a supported image format, then the icon for that file type is displayed.|\n|**acDisplayAsPaperclip**|2|A paper clip is displayed.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcDisplayAsHyperlink",
        "enum_ch": [
            "acDisplayAsHyperlinkAlways",
            "acDisplayAsHyperlinkIfHlink",
            "acDisplayAsHyperlinkOnScreenOnly"
        ],
        "file_name": "Access.AcDisplayAsHyperlink.md",
        "kind": "enumeration",
        "main": "Used with the **DisplayAsHyperlink** property to specify whether to display the contents of a text box or combo box as a hyperlink.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDisplayAsHyperlinkAlways**|1|Always display the contents of the control as a hyperlink.|\n|**acDisplayAsHyperlinkIfHlink**|0|Display the contents of the control as a hyperlink only when its contents are in the form of a Uniform Resource Locator (URL).|\n|**acDisplayAsHyperlinkOnScreenOnly**|2|Display the contents of the control as a hyperlink only on the screen.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcExportQuality",
        "enum_ch": [
            "acExportQualityPrint",
            "acExportQualityScreen"
        ],
        "file_name": "Access.AcExportQuality.md",
        "kind": "enumeration",
        "main": "Use with the **OutputTo** method to specify the type of output device to optimize for when exporting an object.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acExportQualityPrint**|0|The output is optimized for printing.|\n|**acExportQualityScreen**|1|The output is optimized for onscreen display.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcExportXMLEncoding",
        "enum_ch": [
            "acUTF16",
            "acUTF8"
        ],
        "file_name": "Access.AcExportXMLEncoding.md",
        "kind": "enumeration",
        "main": "Use with the **ExportXML** method to specify the text encoding to use for exporting XML data.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acUTF16**|1|UTF16 encoding.|\n|**acUTF8**|0|(Default) UTF8 encoding.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcExportXMLObjectType",
        "enum_ch": [
            "acExportForm",
            "acExportFunction",
            "acExportQuery",
            "acExportReport",
            "acExportServerView",
            "acExportStoredProcedure",
            "acExportTable"
        ],
        "file_name": "Access.AcExportXMLObjectType.md",
        "kind": "enumeration",
        "main": "Use with the **ExportXML** method to specify the type of object to export.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acExportForm**|2|Form|\n|**acExportFunction**|10|User-defined function (Microsoft Access project only)|\n|**acExportQuery**|1|Query|\n|**acExportReport**|3|Report|\n|**acExportServerView**|7|Server view (Microsoft Access project only)|\n|**acExportStoredProcedure**|9|Stored procedure (Microsoft Access project only)|\n|**acExportTable**|0|Table|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcExportXMLOtherFlags",
        "enum_ch": [
            "acEmbedSchema",
            "acExcludePrimaryKeyAndIndexes",
            "acExportAllTableAndFieldProperties",
            "acLiveReportSource",
            "acPersistReportML",
            "acRunFromServer"
        ],
        "file_name": "Access.AcExportXMLOtherFlags.md",
        "kind": "enumeration",
        "main": "Use with the **ExportXML** method to specify other behaviors associated with exporting to XML.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acEmbedSchema**|1|Writes schema information into the document specified by the DataTarget argument; this value takes precedence over the SchemaTarget argument.|\n|**acExcludePrimaryKeyAndIndexes**|2|Does not export primary key and index schema properties.|\n|**acExportAllTableAndFieldProperties**|32|The exported schema contains properties of the table and its fields.|\n|**acLiveReportSource**|8|Creates a live link to a remote Microsoft SQL Server 2000 database. Valid only when you are exporting reports that are bound to a Microsoft SQL Server 2000 database.|\n|**acPersistReportML**|16|Persists the exported object's ReportML information.|\n|**acRunFromServer**|4|Creates an Active Server Pages (ASP) wrapper; otherwise, default is an HTML wrapper. Applies only when you are exporting reports.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcExportXMLSchemaFormat",
        "enum_ch": [
            "acSchemaNone",
            "acSchemaXSD"
        ],
        "file_name": "Access.AcExportXMLSchemaFormat.md",
        "kind": "enumeration",
        "main": "Not supported in Access.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acSchemaNone**|0||\n|**acSchemaXSD**|1||\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFileFormat",
        "enum_ch": [
            "acFileFormatAccess2",
            "acFileFormatAccess95",
            "acFileFormatAccess97",
            "acFileFormatAccess2000",
            "acFileFormatAccess2002",
            "acFileFormatAccess2007"
        ],
        "file_name": "Access.AcFileFormat.md",
        "kind": "enumeration",
        "main": "Specifies the Microsoft Access file format to use when converting an Access file.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acFileFormatAccess2**|2|Microsoft Access 2.0 format|\n|**acFileFormatAccess95**|7|Microsoft Access 95 format|\n|**acFileFormatAccess97**|8|Microsoft Access 97 format|\n|**acFileFormatAccess2000**|9|Microsoft Access 2000 format|\n|**acFileFormatAccess2002**|10|Microsoft Access 2002 format|\n|**acFileFormatAccess2007**|12|Microsoft Access 2007 format|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFilterType",
        "enum_ch": [
            "acFilterNormal",
            "acServerFilter"
        ],
        "file_name": "Access.AcFilterType.md",
        "kind": "enumeration",
        "main": "Not supported in Access.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acFilterNormal**|0||\n|**acServerFilter**|1||\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFindField",
        "enum_ch": [
            "acAll",
            "acCurrent"
        ],
        "file_name": "Access.AcFindField.md",
        "kind": "enumeration",
        "main": "Specifies whether the search is confined to the current field in each record or includes all fields in each record. \n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAll**|0|Search in all fields in each record.|\n|**acCurrent**|-1|Confine the search to the current field.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFindMatch",
        "enum_ch": [
            "acAnywhere",
            "acEntire",
            "acStart"
        ],
        "file_name": "Access.AcFindMatch.md",
        "kind": "enumeration",
        "main": "Specifies where the data is located in the field.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAnywhere**|0|Search for data in any part of the field.|\n|**acEntire**|1|Search for data that fills the entire field.|\n|**acStart**|2|Search for data located at the beginning of the field.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFormatBarLimits",
        "enum_ch": [
            "acAutomatic",
            "acNumber",
            "acPercent"
        ],
        "file_name": "Access.AcFormatBarLimits.md",
        "kind": "enumeration",
        "main": "Specifies how the threshold values for a Data Bar is determined.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAutomatic**|0|For the shortest bar, the lowest value is used. For the highest bar, the highest value is used.|\n|**acNumber**|1|A number is used.|\n|**acPercent**|2|A percentage is used.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFormatConditionOperator",
        "enum_ch": [
            "acBetween",
            "acEqual",
            "acGreaterThan",
            "acGreaterThanOrEqual",
            "acLessThan",
            "acLessThanOrEqual",
            "acNotBetween",
            "acNotEqual"
        ],
        "file_name": "Access.AcFormatConditionOperator.md",
        "kind": "enumeration",
        "main": "Specifies the operator to apply when using the **Add** method to create a conditional format.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acBetween**|0|The value must be between the values specified by the Expression1 and Expression2 arguments. |\n|**acEqual**|2|The value must equal to the value specified by the Expression1 argument.|\n|**acGreaterThan**|4|The value must be greater than the value specified by the Expression1 argument.|\n|**acGreaterThanOrEqual**|6|The value must be greater than or equal to the value specified by the Expression1 argument.|\n|**acLessThan**|5|The value must be less than the value specified by the Expression1 argument.|\n|**acLessThanOrEqual**|7|The value must be less than or equal to the value specified by the Expression1 argument.|\n|**acNotBetween**|1|The value must not be between the values specified by the Expression1 and Expression2 arguments. |\n|**acNotEqual**|3|The value must not be equal to the value specified by the Expression1 argument.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFormatConditionType",
        "enum_ch": [
            "acDataBar",
            "acExpression",
            "acFieldHasFocus",
            "acFieldValue"
        ],
        "file_name": "Access.AcFormatConditionType.md",
        "kind": "enumeration",
        "main": "Specifies the type of conditional formatting to apply to a control.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDataBar**|3|The conditional format is displayed as a data bar.|\n|**acExpression**|1|The conditional format is based on an expression.|\n|**acFieldHasFocus**|2|The conditional format is based on the value of the control that has focus on a form.|\n|**acFieldValue**|0|The conditional format is based on values in the selected control.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFormOpenDataMode",
        "enum_ch": [
            "acFormAdd",
            "acFormEdit",
            "acFormPropertySettings",
            "acFormReadOnly"
        ],
        "file_name": "Access.AcFormOpenDataMode.md",
        "kind": "enumeration",
        "main": "Specifies the data entry mode of a form.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acFormAdd**|0|The user can add new records but can't edit existing records.|\n|**acFormEdit**|1|The user can edit existing records and add new records.|\n|**acFormPropertySettings**|-1|The user can only change the form's properties.|\n|**acFormReadOnly**|2|The user can only view records.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcFormView",
        "enum_ch": [
            "acDesign",
            "acFormDS",
            "acFormPivotChart",
            "acFormPivotTable",
            "acLayout",
            "acNormal",
            "acPreview"
        ],
        "file_name": "Access.AcFormView.md",
        "kind": "enumeration",
        "main": "Specifies the view when opeing a form.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDesign**|1|The form opens in Design view.|\n|**acFormDS**|3|The form opens in Datasheet view.|\n|**acFormPivotChart**|5|The form opens in PivotChart view.|\n|**acFormPivotTable**|4|The form opens in PivotTable view.|\n|**acLayout**|6|The form opens in Layout view.|\n|**acNormal**|0|(Default) The form opens in Form view.|\n|**acPreview**|2|The form opens in Print Preview.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcHorizontalAnchor",
        "enum_ch": [
            "acHorizontalAnchorBoth",
            "acHorizontalAnchorLeft",
            "acHorizontalAnchorRight"
        ],
        "file_name": "Access.AcHorizontalAnchor.md",
        "kind": "enumeration",
        "main": "Used with the **HorizontalAnchor** property to specify how a control is anchored horizontally within its layout.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acHorizontalAnchorBoth**|2|The control is stretched horizontally across its layout.|\n|**acHorizontalAnchorLeft**|0|The control is anchored to the left side of its layout.|\n|**acHorizontalAnchorRight**|1|The control is anchored to the right side of its layout.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcHyperlinkPart",
        "enum_ch": [
            "acAddress",
            "acDisplayedValue",
            "acDisplayText",
            "acFullAddress",
            "acScreenTip",
            "acSubAddress"
        ],
        "file_name": "Access.AcHyperlinkPart.md",
        "kind": "enumeration",
        "main": "Specifies the information you want returned by the **HyperlinkPart** method.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAddress**|2|The address part of a Hyperlink field.|\n|**acDisplayedValue**|0|The underlined text displayed in a hyperlink.|\n|**acDisplayText**|1|The displaytext part of a Hyperlink field.|\n|**acFullAddress**|5|The address and subaddress parts of a Hyperlink field, delimited by a \"#\" character.|\n|**acScreenTip**|4|The tooltip part of a Hyperlink field.|\n|**acSubAddress**|3|The subaddress part of a Hyperlink field.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcImeMode",
        "enum_ch": [
            "acImeModeAlpha",
            "acImeModeAlphaFull",
            "acImeModeDisable",
            "acImeModeHangul",
            "acImeModeHangulFull",
            "acImeModeHiragana",
            "acImeModeKatakana",
            "acImeModeKatakanaHalf",
            "acImeModeNoControl",
            "acImeModeOff",
            "acImeModeOn"
        ],
        "file_name": "Access.AcImeMode.md",
        "kind": "enumeration",
        "main": "Specifies the default startup mode for the Japanese Input Method Editor (IME). \n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acImeModeAlpha**|8|Activates the IME in half-width Latin mode.|\n|**acImeModeAlphaFull**|7|Activates the IME in full-width Latin mode.|\n|**acImeModeDisable**|3|Disables the IME.|\n|**acImeModeHangul**|10|Activates the IME in half-width Hangul mode.|\n|**acImeModeHangulFull**|9|Activates the IME in full-width Hangul mode.|\n|**acImeModeHiragana**|4|Activates the IME in full-width hiragana mode.|\n|**acImeModeKatakana**|5|Activates the IME in full-width katakana mode.|\n|**acImeModeKatakanaHalf**|6|Activates the IME in half-width katakana mode.|\n|**acImeModeNoControl**|0|Does not change the IME mode.|\n|**acImeModeOff**|2|Disables the IME and activates Latin text entry.|\n|**acImeModeOn**|1|Activates the IME.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcImeSentenceMode",
        "enum_ch": [
            "Enumeration",
            "acImeSentenceModeConversation",
            "acImeSentenceModeNone",
            "acImeSentenceModePhrasePredict",
            "acImeSentenceModePluralClause"
        ],
        "file_name": "Access.AcImeSentenceMode.md",
        "kind": "enumeration",
        "main": "Used with the [IMESentenceMode](overview/Access.md) property to specify the IME sentence mode for the IMM.\n|**Enumeration**|**Value**|\n|:-----|-----|\n|**acImeSentenceModeConversation**|2|\n|**acImeSentenceModeNone**|3|\n|**acImeSentenceModePhrasePredict**|0|\n|**acImeSentenceModePluralClause**|1|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcImportXMLOption",
        "enum_ch": [
            "acAppendData",
            "acStructureAndData",
            "acStructureOnly"
        ],
        "file_name": "Access.AcImportXMLOption.md",
        "kind": "enumeration",
        "main": "Specifies the action to take when using the [Application.ImportXML method (Access)](Access.Application.ImportXML.md) method to import data from an XML file.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAppendData**|2|Imports the data into an existing table.|\n|**acStructureAndData**|1|Imports the data into a new table based on the structure of the specified XML file.|\n|**acStructureOnly**|0|Creates a new table based on the structure of the specified XML file.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcLayoutType",
        "enum_ch": [
            "acLayoutNone",
            "acLayoutStacked",
            "acLayoutTabular"
        ],
        "file_name": "Access.AcLayoutType.md",
        "kind": "enumeration",
        "main": "Specifies the type of layout that the control is part of.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acLayoutNone**|0|The control is not part of a layout.|\n|**acLayoutStacked**|2|The control is part of a stacked layout.|\n|**acLayoutTabular**|1|The control is part of a tabular layout.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcLegendPosition",
        "enum_ch": [
            "acLegendPositionBottom",
            "acLegendPositionLeft",
            "acLegendPositionRight",
            "acLegendPositionTop"
        ],
        "file_name": "Access.AcLegendPosition.md",
        "kind": "enumeration",
        "main": "Specifies the position of a legend relative to its associated chart.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acLegendPositionBottom**|3|Bottom edge of the chart|\n|**acLegendPositionLeft**|0|Left edge of the chart|\n|**acLegendPositionRight**|2|Right edge of the chart|\n|**acLegendPositionTop**|1|Top edge of the chart|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcMarkerType",
        "enum_ch": [
            "acMarkerAsterisk",
            "acMarkerCircle",
            "acMarkerDiamond",
            "acMarkerLongDash",
            "acMarkerNone",
            "acMarkerPlus",
            "acMarkerShortDash",
            "acMarkerSquare",
            "acMarkerTriangle",
            "acMarkerX"
        ],
        "file_name": "Access.AcMarkerType.md",
        "kind": "enumeration",
        "main": "Specifies the marker shape to use for plotting a series when its effective chart type is line-based.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acMarkerAsterisk**|4|Asterisk|\n|**acMarkerCircle**|8|Circle|\n|**acMarkerDiamond**|2|Diamond|\n|**acMarkerLongDash**|7|Long Dash|\n|**acMarkerNone**|0|None|\n|**acMarkerPlus**|9|Plus|\n|**acMarkerShortDash**|6|Short Dash|\n|**acMarkerSquare**|1|Square|\n|**acMarkerTriangle**|3|Triangle|\n|**acMarkerX**|4|X|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcMissingDataPolicy",
        "enum_ch": [
            "acDoNotPlot",
            "acPlotAsInterpolated",
            "acPlotAsZero"
        ],
        "file_name": "Access.AcMissingDataPolicy.md",
        "kind": "enumeration",
        "main": "Specifies the plotting strategy of a series when its chart type is **acChartLine** and values are missing.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDoNotPlot**|1|Do not plot.|\n|**acPlotAsInterpolated**|2|Plot as interpolated.|\n|**acPlotAsZero**|0|Plot as zero.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcModuleType",
        "enum_ch": [
            "acClassModule",
            "acStandardModule"
        ],
        "file_name": "Access.AcModuleType.md",
        "kind": "enumeration",
        "main": "Returns the type of the specified Visual Basic module.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acClassModule**|1|The specified module is a class module.|\n|**acStandardModule**|0|The specified module is a standard module.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcNavigationSpan",
        "enum_ch": [
            "acHorizontal",
            "acVertical"
        ],
        "file_name": "Access.AcNavigationSpan.md",
        "kind": "enumeration",
        "main": "Specifies the orientation of navigation buttons.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acHorizontal**|0|The navigation buttons are displayed horizontally.|\n|**acVertical**|1|The navigation buttons are displayed vertically.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcNewDatabaseFormat",
        "enum_ch": [
            "acNewDatabaseFormatAccess12",
            "acNewDatabaseFormatAccess2000",
            "acNewDatabaseFormatAccess2002",
            "acNewDatabaseFormatUserDefault"
        ],
        "file_name": "Access.AcNewDatabaseFormat.md",
        "kind": "enumeration",
        "main": "Used with the [NewCurrentDatabase](Access.Application.NewCurrentDatabase.md) method to specify the database format of the newly created database.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acNewDatabaseFormatAccess12**|12|Create a database in the Access (.accdb) file format.|\n|**acNewDatabaseFormatAccess2000**|9|Create a database in the Microsoft Access 2000 (.mdb) file format.|\n|**acNewDatabaseFormatAccess2002**|10|Create a database in the Microsoft Access 2002-2003 (.mdb) file format.|\n|**acNewDatabaseFormatUserDefault**|0|Create a database in the default file format.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcObjectType",
        "enum_ch": [
            "acDatabaseProperties",
            "acDefault",
            "acDiagram",
            "acForm",
            "acFunction",
            "acMacro",
            "acModule",
            "acQuery",
            "acReport",
            "acServerView",
            "acStoredProcedure",
            "acTable",
            "acTableDataMacro"
        ],
        "file_name": "Access.AcObjectType.md",
        "kind": "enumeration",
        "main": "Specifies the type of object.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDatabaseProperties**|11|Database property|\n|**acDefault**|-1||\n|**acDiagram**|8|Database Diagram (Microsoft Access project)|\n|**acForm**|2|Form|\n|**acFunction**|10|Function|\n|**acMacro**|4|Macro|\n|**acModule**|5|Module|\n|**acQuery**|1|Query|\n|**acReport**|3|Report|\n|**acServerView**|7|Server View|\n|**acStoredProcedure**|9|Stored Procedure (Microsoft Access project)|\n|**acTable**|0|Table|\n|**acTableDataMacro**|12|Data macro|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcOpenDataMode",
        "enum_ch": [
            "acAdd",
            "acEdit",
            "acReadOnly"
        ],
        "file_name": "Access.AcOpenDataMode.md",
        "kind": "enumeration",
        "main": "Specifies the data entry mode when opening a table, query, stored procedure, view, or user-defined function.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acAdd**|0|The user can add new records but can't view or edit existing records.|\n|**acEdit**|1|The user can view or edit existing records and add new records.|\n|**acReadOnly**|2|The user can only view records.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcOutputObjectType",
        "enum_ch": [
            "acOutputForm",
            "acOutputFunction",
            "acOutputModule",
            "acOutputQuery",
            "acOutputReport",
            "acOutputServerView",
            "acOutputStoredProcedure",
            "acOutputTable"
        ],
        "file_name": "Access.AcOutputObjectType.md",
        "kind": "enumeration",
        "main": "Specifies the type of object to output when using the **OutputTo** method.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acOutputForm**|2|Form|\n|**acOutputFunction**|10|User-Defined Function|\n|**acOutputModule**|5|Module|\n|**acOutputQuery**|1|Query|\n|**acOutputReport**|3|Report|\n|**acOutputServerView**|7|Server View|\n|**acOutputStoredProcedure**|9|Stored Procedure|\n|**acOutputTable**|0|Table|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPictureCaptionArrangement",
        "enum_ch": [
            "acBottom",
            "acGeneral",
            "acLeft",
            "acNoPictureCaption",
            "acRight",
            "acTop"
        ],
        "file_name": "Access.AcPictureCaptionArrangement.md",
        "kind": "enumeration",
        "main": "Used with the **[PictureCaptionArrangement](Access.CommandButton.PictureCaptionArrangement.md)** property to determine how a button's caption is arranged in relation to its picture.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acBottom**|3|The caption appears below the picture.|\n|**acGeneral**|1|The caption uses the General alignment setting.|\n|**acLeft**|4|The caption appears to the left of the picture.|\n|**acNoPictureCaption**|0|The caption is not displayed.|\n|**acRight**|5|The caption appears to the right of the picture.|\n|**acTop**|2|The caption appears above the picture.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintColor",
        "enum_ch": [
            "acPRCMColor",
            "acPRCMMonochrome"
        ],
        "file_name": "Access.AcPrintColor.md",
        "kind": "enumeration",
        "main": "Used with the **ColorMode** property to specify whether the printer should print output in color or monochrome.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPRCMColor**|2|The printer should print in color. |\n|**acPRCMMonochrome**|1|The printer should print in monochrome. |\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintDuplex",
        "enum_ch": [
            "acPRDPHorizontal",
            "acPRDPSimplex",
            "acPRDPVertical"
        ],
        "file_name": "Access.AcPrintDuplex.md",
        "kind": "enumeration",
        "main": "Used with the **Duplex** property to specify how the printer handles duplex printing.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPRDPHorizontal**|2|Double-sided printing using a horizontal page turn.|\n|**acPRDPSimplex**|1|Single-sided printing with the current orientation setting.|\n|**acPRDPVertical**|3|Double-sided printing using a vertical page turn.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintItemLayout",
        "enum_ch": [
            "acPRHorizontalColumnLayout",
            "acPRVerticalColumnLayout"
        ],
        "file_name": "Access.AcPrintItemLayout.md",
        "kind": "enumeration",
        "main": "Used with the **ItemLayout** property to specify how columns are laid out when printing.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPRHorizontalColumnLayout**|1953|Columns are laid across, then down.|\n|**acPRVerticalColumnLayout**|1954|Columns are laid down, then across.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintObjQuality",
        "enum_ch": [
            "acPRPQDraft",
            "acPRPQHigh",
            "acPRPQLow",
            "acPRPQMedium"
        ],
        "file_name": "Access.AcPrintObjQuality.md",
        "kind": "enumeration",
        "main": "Used with the **PrintQuality** property to specify the resolution at which the specified printer should print jobs.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPRPQDraft**|-1|The printer prints in draft quality.|\n|**acPRPQHigh**|-4|The printer prints in high quality.|\n|**acPRPQLow**|-2|The printer prints in low quality.|\n|**acPRPQMedium**|-3|The printer prints in medium quality.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintOrientation",
        "enum_ch": [
            "acPRORLandscape",
            "acPRORPortrait"
        ],
        "file_name": "Access.AcPrintOrientation.md",
        "kind": "enumeration",
        "main": "Used with the **Orientation** property to specify a printer's print orientation.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPRORLandscape**|2|Landscape orientation|\n|**acPRORPortrait**|1|Portrait orientation|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintPaperBin",
        "enum_ch": [
            "acPRBNAuto",
            "acPRBNCassette",
            "acPRBNEnvelope",
            "acPRBNEnvManual",
            "acPRBNFormSource",
            "acPRBNLargeCapacity",
            "acPRBNLargeFmt",
            "acPRBNLower",
            "acPRBNManual",
            "acPRBNMiddle",
            "acPRBNSmallFmt",
            "acPRBNTractor",
            "acPRBNUpper"
        ],
        "file_name": "Access.AcPrintPaperBin.md",
        "kind": "enumeration",
        "main": "Used with the **PaperBin** property to indicate which paper bin the specified printer should use.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPRBNAuto**|7|(Default) Use paper from the current default bin. |\n|**acPRBNCassette**|14|Use paper from the attached cassette cartridge. |\n|**acPRBNEnvelope**|5|Use envelopes from the envelope feeder. |\n|**acPRBNEnvManual**|6|Use envelopes from the envelope feeder, but wait for manual insertion. |\n|**acPRBNFormSource**|15|Use paper from the forms bin. |\n|**acPRBNLargeCapacity**|11|Use paper from the large capacity feeder. |\n|**acPRBNLargeFmt**|10|Use paper from the large paper bin. |\n|**acPRBNLower**|2|Use paper from the lower bin. |\n|**acPRBNManual**|4|Wait for manual insertion of each sheet of paper. |\n|**acPRBNMiddle**|3|Use paper from the middle bin. |\n|**acPRBNSmallFmt**|9|Use paper from the small paper feeder. |\n|**acPRBNTractor**|8|Use paper from the tractor feeder. |\n|**acPRBNUpper**|1|Use paper from the upper bin. |\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintPaperSize",
        "enum_ch": [
            "acPRPS10x14",
            "acPRPS11x17",
            "acPRPSA3",
            "acPRPSA4",
            "acPRPSA4Small",
            "acPRPSA5",
            "acPRPSB4",
            "acPRPSB5",
            "acPRPSCSheet",
            "acPRPSDSheet",
            "acPRPSEnv10",
            "acPRPSEnv11",
            "acPRPSEnv12",
            "acPRPSEnv14",
            "acPRPSEnv9",
            "acPRPSEnvB4",
            "acPRPSEnvB5",
            "acPRPSEnvB6",
            "acPRPSEnvC3",
            "acPRPSEnvC4",
            "acPRPSEnvC5",
            "acPRPSEnvC6",
            "acPRPSEnvC65",
            "acPRPSEnvDL",
            "acPRPSEnvItaly",
            "acPRPSEnvMonarch",
            "acPRPSEnvPersonal",
            "acPRPSESheet",
            "acPRPSExecutive",
            "acPRPSFanfoldLglGerman",
            "acPRPSFanfoldStdGerman",
            "acPRPSFanfoldUS",
            "acPRPSFolio",
            "acPRPSLedger",
            "acPRPSLegal",
            "acPRPSLetter",
            "acPRPSLetterSmall",
            "acPRPSNote",
            "acPRPSQuarto",
            "acPRPSStatement",
            "acPRPSTabloid",
            "acPRPSUser"
        ],
        "file_name": "Access.AcPrintPaperSize.md",
        "kind": "enumeration",
        "main": "Used with the **PaperSize** property to indicate the paper size to use when printing.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPRPS10x14**|16|10 x 14 in.|\n|**acPRPS11x17**|17|11 x 17 in. |\n|**acPRPSA3**|8|A3 (297 mm x 420 mm)|\n|**acPRPSA4**|9|A4 (210 mm x 297 mm)|\n|**acPRPSA4Small**|10|A4 Small (210 mm x 297 mm)|\n|**acPRPSA5**|11|A5 (148 mm x 210 mm)|\n|**acPRPSB4**|12|B4 (250 mm x 354 mm)|\n|**acPRPSB5**|13|B5 (148 mm x 210 mm)|\n|**acPRPSCSheet**|24|C size sheet|\n|**acPRPSDSheet**|25|D size sheet|\n|**acPRPSEnv10**|20|Envelope #10 (4-1/8 in. x 9-1/2 in.)|\n|**acPRPSEnv11**|21|Envelope #11 (4-1/2 in. x 10-3/8 in.)|\n|**acPRPSEnv12**|22|Envelope #12 (4-1/2 in. x 11 in.)|\n|**acPRPSEnv14**|23|Envelope #14 (5 in. x 11-1/2 in.)|\n|**acPRPSEnv9**|19|Envelope #9 (3-7/8 in. x 8-7/8 in.)|\n|**acPRPSEnvB4**|33|Envelope B4 (250 mm x 353 mm)|\n|**acPRPSEnvB5**|34|Envelope B5 (176 mm x 250 mm)|\n|**acPRPSEnvB6**|35|Envelope B6 (176 mm x 125 mm)|\n|**acPRPSEnvC3**|29|Envelope C3 (324 mm x 458 mm)|\n|**acPRPSEnvC4**|30|Envelope C4 (229 mm x 324 mm)|\n|**acPRPSEnvC5**|28|Envelope C5 (162 mm x 229 mm)|\n|**acPRPSEnvC6**|31|Envelope C6 (114 mm x 162 mm)|\n|**acPRPSEnvC65**|32|Envelope C65 (114 mm x 229 mm)|\n|**acPRPSEnvDL**|27|Envelope DL (110 mm x 220 mm)|\n|**acPRPSEnvItaly**|36|Italian envelope (110 mm x 230 mm)|\n|**acPRPSEnvMonarch**|37|Monarch envelope (3-7/8 in. x 7-1/2 in.)|\n|**acPRPSEnvPersonal**|38|Envelope (3-5/8 in. x 6-1/2 in.)|\n|**acPRPSESheet**|26|E size sheet|\n|**acPRPSExecutive**|7|Executive (7-1/2 in. x 10-1/2 in.)|\n|**acPRPSFanfoldLglGerman**|41|German Legal Fanfold (8-1/2 in. x 13 in.)|\n|**acPRPSFanfoldStdGerman**|40|German Standard Fanfold (8-1/2 in. x 12 in.)|\n|**acPRPSFanfoldUS**|39|U.S. Standard Fanfold (14-7/8 in. x 11 in.)|\n|**acPRPSFolio**|14|Folio (8-1/2 in. x 13 in.)|\n|**acPRPSLedger**|4|Ledger (17 in. x 11 in.)|\n|**acPRPSLegal**|5|Legal (8-1/2 in. x 14 in.)|\n|**acPRPSLetter**|1|Letter (8-1/2 in. x 11 in.)|\n|**acPRPSLetterSmall**|2|Letter Small (8-1/2 in. x 11 in.)|\n|**acPRPSNote**|18|Note (8-1/2 in. x 11 in.)|\n|**acPRPSQuarto**|15|Quarto (215 mm x 275 mm)|\n|**acPRPSStatement**|6|Statement (5-1/2 in. x 8-1/2 in.)|\n|**acPRPSTabloid**|3|Tabloid (11 in. x 17 in.)|\n|**acPRPSUser**|256|User-defined|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintQuality",
        "enum_ch": [
            "acDraft",
            "acHigh",
            "acLow",
            "acMedium"
        ],
        "file_name": "Access.AcPrintQuality.md",
        "kind": "enumeration",
        "main": "Used with the **PrintOut** method to specify the print quality of a particular print job.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDraft**|3|Draft quality|\n|**acHigh**|0|(Default) High quality|\n|**acLow**|2|Low quality|\n|**acMedium**|1|Medium quality|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcPrintRange",
        "enum_ch": [
            "acPages",
            "acPrintAll",
            "acSelection"
        ],
        "file_name": "Access.AcPrintRange.md",
        "kind": "enumeration",
        "main": "Used with the **PrintOut** method to specify the range to print.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPages**|2|A specific range of pages will be printed. Use the PageFrom and PageTo arguments to specify the range of pages to print.|\n|**acPrintAll**|0|Prints all of the object.|\n|**acSelection**|1|Prints the selected part of the object.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcProjectType",
        "enum_ch": [
            "acADP",
            "acMDB",
            "acNull"
        ],
        "file_name": "Access.AcProjectType.md",
        "kind": "enumeration",
        "main": "Used with the **ProjectType** property to determine the type of project that is currently open.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acADP**|1|The current project is a Microsoft Access project.|\n|**acMDB**|2|The current project is a Microsoft Access database.|\n|**acNull**|0||\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcProperty",
        "enum_ch": [
            "acPropertyBackColor",
            "acPropertyCaption",
            "acPropertyEnabled",
            "acPropertyForeColor",
            "acPropertyHeight",
            "acPropertyLeft",
            "acPropertyLocked",
            "acPropertyTop",
            "acPropertyValue",
            "acPropertyVisible",
            "acPropertyWidth"
        ],
        "file_name": "Access.AcProperty.md",
        "kind": "enumeration",
        "main": "Used with the [SetProperty](Access.DoCmd.SetProperty.md) method to specify which property to set for a control.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPropertyBackColor**|8|Set the **BackColor** property.|\n|**acPropertyCaption**|9|Set the **Caption** property.|\n|**acPropertyEnabled**|0|Set the **Enabled** property.|\n|**acPropertyForeColor**|7|Set the **ForeColor** property.|\n|**acPropertyHeight**|6|Set the **Height** property.|\n|**acPropertyLeft**|3|Set the **Left** property.|\n|**acPropertyLocked**|2|Set the **Locked** property.|\n|**acPropertyTop**|4|Set the **Top** property.|\n|**acPropertyValue**|10|Set the **Value** property.|\n|**acPropertyVisible**|1|Set the **Visible** property.|\n|**acPropertyWidth**|5|Set the **Width** property.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcQuitOption",
        "enum_ch": [
            "acQuitPrompt",
            "acQuitSaveAll",
            "acQuitSaveNone"
        ],
        "file_name": "Access.AcQuitOption.md",
        "kind": "enumeration",
        "main": "Used with the [Quit](Access.Application.Quit.md) method to specify whether or not to save changes to the database when quitting Microsoft Access.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acQuitPrompt**|0|Displays a dialog box that asks whether you want to save any database objects that have been changed but not saved. |\n|**acQuitSaveAll**|1|(Default) Saves all objects without displaying a dialog box.|\n|**acQuitSaveNone**|2|Quits Microsoft Access without saving any objects.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcRecord",
        "enum_ch": [
            "acFirst",
            "acGoTo",
            "acLast",
            "acNewRec",
            "acNext",
            "acPrevious"
        ],
        "file_name": "Access.AcRecord.md",
        "kind": "enumeration",
        "main": "Used with the [GoToRecord](Access.DoCmd.GoToRecord.md) method to specify which record to make the current record.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acFirst**|2|Make the first record the current record.|\n|**acGoTo**|4|Make the specified record the current record.|\n|**acLast**|3|Make the last record the current record.|\n|**acNewRec**|5|Make a new record the current record.|\n|**acNext**|1|Make the next record the current record.|\n|**acPrevious**|0|Make the previous record the current record.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcResourceType",
        "enum_ch": [
            "acResourceImage",
            "acResourceTheme"
        ],
        "file_name": "Access.AcResourceType.md",
        "kind": "enumeration",
        "main": "Specifies the type of a [SharedResource](Access.SharedResource.md) object.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acResourceImage**|1|Image.|\n|**acResourceTheme**|0|Office theme.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSearchDirection",
        "enum_ch": [
            "acDown",
            "acSearchAll",
            "acUp"
        ],
        "file_name": "Access.AcSearchDirection.md",
        "kind": "enumeration",
        "main": "Used with the [DoCmd.FindRecord method (Access)](Access.DoCmd.FindRecord.md) method to specify the direction to search.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDown**|1|Search all records below the current record.|\n|**acSearchAll**|2|Search all records.|\n|**acUp**|0|Search all records above the current record.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSection",
        "enum_ch": [
            "acDetail",
            "acFooter",
            "acGroupLevel1Footer",
            "acGroupLevel1Header",
            "acGroupLevel2Footer",
            "acGroupLevel2Header",
            "acHeader",
            "acPageFooter",
            "acPageHeader"
        ],
        "file_name": "Access.AcSection.md",
        "kind": "enumeration",
        "main": "Specifies the section that will contain the new control.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDetail**|0|(Default) Detail section|\n|**acFooter**|2|Form or report footer|\n|**acGroupLevel1Footer**|6|Group-level 1 footer (reports only)|\n|**acGroupLevel1Header**|5|Group-level 1 header (reports only)|\n|**acGroupLevel2Footer**|8|Group-level 2 footer (reports only)|\n|**acGroupLevel2Header**|7|Group-level 2 header (reports only)|\n|**acHeader**|1|Form or report header|\n|**acPageFooter**|4|Page footer|\n|**acPageHeader**|3|Page header|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSendObjectType",
        "enum_ch": [
            "acSendForm",
            "acSendModule",
            "acSendNoObject",
            "acSendQuery",
            "acSendReport",
            "acSendTable"
        ],
        "file_name": "Access.AcSendObjectType.md",
        "kind": "enumeration",
        "main": "Used with the [DoCmd.SendObject method (Access)](Access.DoCmd.SendObject.md) method to specify the type of object to send.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acSendForm**|2|Send a Form.|\n|**acSendModule**|5|Send a Module.|\n|**acSendNoObject**|-1|(Default) Don't send a database object.|\n|**acSendQuery**|1|Send a Query.|\n|**acSendReport**|3|Send a Report.|\n|**acSendTable**|0|Send a Table.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSeparatorCharacters",
        "enum_ch": [
            "acSeparatorCharactersComma",
            "acSeparatorCharactersNewLine",
            "acSeparatorCharactersSemiColon",
            "acSeparatorCharactersSystemSeparator"
        ],
        "file_name": "Access.AcSeparatorCharacters.md",
        "kind": "enumeration",
        "main": "Used with the [ComboBox.SeparatorCharacters property (Access)](Access.ComboBox.SeparatorCharacters.md) property to specify the separator displayed between values in combo boxes that are linked to multi-valued fields.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acSeparatorCharactersComma**|3|A comma (,) is used as the separator character.|\n|**acSeparatorCharactersNewLine**|1|Each value appears on its own line.|\n|**acSeparatorCharactersSemiColon**|2|A semicolon (;) is used as the separator character.|\n|**acSeparatorCharactersSystemSeparator**|0|The **List separator** setting in the **Regional and Language Options** in the Windows Control Panel is used as the separator character.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSharePointListTransferType",
        "enum_ch": [
            "acImportSharePointList",
            "acLinkSharePointList"
        ],
        "file_name": "Access.AcSharePointListTransferType.md",
        "kind": "enumeration",
        "main": "Used with the [DoCmd.TransferSharePointList method (Access)](Access.DoCmd.TransferSharePointList.md) method to specify whether to import or link to a SharePoint list.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acImportSharePointList**|0|Import the SharePoint list.|\n|**acLinkSharePointList**|1|Link to the SharePoint list.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcShowToolbar",
        "enum_ch": [
            "acToolbarNo",
            "acToolbarWhereApprop",
            "acToolbarYes"
        ],
        "file_name": "Access.AcShowToolbar.md",
        "kind": "enumeration",
        "main": "Used with the [DoCmd.ShowToolbar method (Access)](Access.DoCmd.ShowToolbar.md) method to specify whether to display a particular custom toolbar.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acToolbarNo**|2|Hide the toolbar.|\n|**acToolbarWhereApprop**|1|Display the toolbar while in the appropriate view.|\n|**acToolbarYes**|0|Display the toolbar.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSplitFormDatasheet",
        "enum_ch": [
            "acDatasheetAllowEdits",
            "acDatasheetReadOnly"
        ],
        "file_name": "Access.AcSplitFormDatasheet.md",
        "kind": "enumeration",
        "main": "Used with the [Form.SplitFormDatasheet property (Access)](Access.Form.SplitFormDatasheet.md) property to specify whether the user can edit contents of the datasheet while a form is displayed in Split Form view.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDatasheetAllowEdits**|0|The user can edit the contents of the datasheet.|\n|**acDatasheetReadOnly**|1|The user cannot edit the contents of the datasheet.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSplitFormOrientation",
        "enum_ch": [
            "acDatasheetOnBottom",
            "acDatasheetOnLeft",
            "acDatasheetOnRight",
            "acDatasheetOnTop"
        ],
        "file_name": "Access.AcSplitFormOrientation.md",
        "kind": "enumeration",
        "main": "Used with the [SplitFormOrientation](Access.Form.SplitFormOrientation.md) property to specify the orientation of the datasheet in relation to the form while in Split Form view.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDatasheetOnBottom**|1|The datasheet is displayed below the form.|\n|**acDatasheetOnLeft**|2|The datasheet is displayed to the left of the form.|\n|**acDatasheetOnRight**|3|The datasheet is displayed to the right of the form.|\n|**acDatasheetOnTop**|0|The datasheet is displayed above the form. |\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSplitFormPrinting",
        "enum_ch": [
            "acFormOnly",
            "acGridOnly"
        ],
        "file_name": "Access.AcSplitFormPrinting.md",
        "kind": "enumeration",
        "main": "Used with the [SplitFormPrinting](Access.Form.SplitFormPrinting.md) property to specify what to print when a form is in Split Form view.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acFormOnly**|0|The contents of the form are printed.|\n|**acGridOnly**|1|The contents of the datasheet are printed. |\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSpreadSheetType",
        "enum_ch": [
            "acSpreadsheetTypeExcel3",
            "acSpreadsheetTypeExcel4",
            "acSpreadsheetTypeExcel5",
            "acSpreadsheetTypeExcel7",
            "acSpreadsheetTypeExcel8",
            "acSpreadsheetTypeExcel9",
            "acSpreadsheetTypeExcel12",
            "acSpreadsheetTypeExcel12Xml"
        ],
        "file_name": "Access.AcSpreadSheetType.md",
        "kind": "enumeration",
        "main": "Used with the [TransferSpreadsheet](Access.DoCmd.TransferSpreadsheet.md) method to specify the type of spreadsheet to import from, export to, or link to.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acSpreadsheetTypeExcel3**|0|Microsoft Excel 3.0 format|\n|**acSpreadsheetTypeExcel4**|6|Microsoft Excel 4.0 format|\n|**acSpreadsheetTypeExcel5**|5|Microsoft Excel 5.0 format|\n|**acSpreadsheetTypeExcel7**|5|Microsoft Excel 95 format|\n|**acSpreadsheetTypeExcel8**|8|Microsoft Excel 97 format|\n|**acSpreadsheetTypeExcel9**|8|Microsoft Excel 2000 format|\n|**acSpreadsheetTypeExcel12**|9|Microsoft Excel 2010 format|\n|**acSpreadsheetTypeExcel12Xml**|10|Microsoft Excel 2010/2013/2016 XML format (.xlsx, .xlsm, .xlsb)|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcSysCmdAction",
        "enum_ch": [
            "acSysCmdAccessDir",
            "acSysCmdAccessVer",
            "acSysCmdClearHelpTopic",
            "acSysCmdClearStatus",
            "acSysCmdGetObjectState",
            "acSysCmdGetWorkgroupFile",
            "acSysCmdIniFile",
            "acSysCmdInitMeter",
            "acSysCmdProfile",
            "acSysCmdRemoveMeter",
            "acSysCmdRuntime",
            "acSysCmdSetStatus",
            "acSysCmdUpdateMeter"
        ],
        "file_name": "Access.AcSysCmdAction.md",
        "kind": "enumeration",
        "main": "Used with the **SysCmd** method to specify an action to take.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acSysCmdAccessDir**|9|Returns the name of the directory where Msaccess.exe is located.|\n|**acSysCmdAccessVer**|7|Returns the version number of Microsoft Access.|\n|**acSysCmdClearHelpTopic**|11||\n|**acSysCmdClearStatus**|5|Provides information on the state of a database object.|\n|**acSysCmdGetObjectState**|10|Returns the state of the specified database object. You must specify argument1 and argument2 when you use this action value.|\n|**acSysCmdGetWorkgroupFile**|13|Returns the path to the workgroup file (System.mdw).|\n|**acSysCmdIniFile**|8|Returns the name of the .ini file associated with Microsoft Access.|\n|**acSysCmdInitMeter**|1|Initializes the progress meter. You must specify the argument1 and argument2 arguments when you use this action.|\n|**acSysCmdProfile**|12|Returns the **\\/profile** setting specified by the user when starting Microsoft Access from the command line.|\n|**acSysCmdRemoveMeter**|3|Removes the progress meter.|\n|**acSysCmdRuntime**|6|Returns **True** (1) if a run-time version of Microsoft Access is running.|\n|**acSysCmdSetStatus**|4|Sets the status bar text to the text argument.|\n|**acSysCmdUpdateMeter**|2|Updates the progress meter with the specified value. You must specify the text argument when you use this action.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcTextFormat",
        "enum_ch": [
            "acTextFormatHTMLRichText",
            "acTextFormatPlain"
        ],
        "file_name": "Access.AcTextFormat.md",
        "kind": "enumeration",
        "main": "Used with the [TextFormat](Access.TextBox.TextFormat.md) property to specify whether or not rich text is displayed in a Text Box.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acTextFormatHTMLRichText**|1|Rich text can be displayed.|\n|**acTextFormatPlain**|0| (Default) Plain text is displayed.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcTextTransferType",
        "enum_ch": [
            "acExportDelim",
            "acExportFixed",
            "acExportHTML",
            "acExportMerge",
            "acImportDelim",
            "acImportFixed",
            "acImportHTML",
            "acLinkDelim",
            "acLinkFixed",
            "acLinkHTML"
        ],
        "file_name": "Access.AcTextTransferType.md",
        "kind": "enumeration",
        "main": "Used with the [DoCmd.TransferText method (Access)](Access.DoCmd.TransferText.md) method to specify the type of transfer you want to make.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acExportDelim**|2|Export Delimited|\n|**acExportFixed**|3|Export Fixed Width|\n|**acExportHTML**|8|Export HTML|\n|**acExportMerge**|4|Export Microsoft Word Merge|\n|**acImportDelim**|0|Import Delimited|\n|**acImportFixed**|1|Import Fixed Width|\n|**acImportHTML**|7|Import HTML|\n|**acLinkDelim**|5|Link Delimited|\n|**acLinkFixed**|6|Link Fixed Width|\n|**acLinkHTML**|9|Link HTML|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcTransformXMLScriptOption",
        "enum_ch": [
            "acDisableScript",
            "acEnableScript",
            "acPromptScript"
        ],
        "file_name": "Access.AcTransformXMLScriptOption.md",
        "kind": "enumeration",
        "main": "Used with the [TransformXML](Access.Application.TransformXML.md) method to specify the action taken if the XSL file contains scripting code.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDisableScript**|2|The script is disabled.|\n|**acEnableScript**|0|The script is enabled.|\n|**acPromptScript**|1|The user is prompted to disable or enable the script.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcTrendlineOptions",
        "enum_ch": [
            "acTrendlineExponential",
            "acTrendlineLinear",
            "acTrendlineLogarithmic",
            "acTrendlineMovingAverage",
            "acTrendlineNone",
            "acTrendlinePolynomial",
            "acTrendlinePower"
        ],
        "file_name": "Access.AcTrendlineOptions.md",
        "kind": "enumeration",
        "main": "Specifies the type of trendline to render for a chart series.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acTrendlineExponential**|2|Exponential|\n|**acTrendlineLinear**|1|Linear|\n|**acTrendlineLogarithmic**|3|Logarithmic|\n|**acTrendlineMovingAverage**|6|Moving Average|\n|**acTrendlineNone**|0|None|\n|**acTrendlinePolynomial**|4|Polynomial|\n|**acTrendlinePower**|5|Power|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcValueAxis",
        "enum_ch": [
            "acPrimaryAxis",
            "acSecondaryAxis"
        ],
        "file_name": "Access.AcValueAxis.md",
        "kind": "enumeration",
        "main": "A list of value axes in a chart.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acPrimaryAxis**|0|Primary axis|\n|**acSecondaryAxis**|1|Secondary axis|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcVerticalAnchor",
        "enum_ch": [
            "acVerticalAnchorBoth",
            "acVerticalAnchorBottom",
            "acVerticalAnchorTop"
        ],
        "file_name": "Access.AcVerticalAnchor.md",
        "kind": "enumeration",
        "main": "Used with the **VerticalAnchor** property to specify how a control is anchored vertically within its layout.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acVerticalAnchorBoth**|2|The control is stretched vertically across its layout.|\n|**acVerticalAnchorBottom**|1|The control is anchored at the bottom of its layout.|\n|**acVerticalAnchorTop**|0|The control is anchored at the top of its layout.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcView",
        "enum_ch": [
            "acViewDesign",
            "acViewLayout",
            "acViewNormal",
            "acViewPivotChart",
            "acViewPivotTable",
            "acViewPreview",
            "acViewReport"
        ],
        "file_name": "Access.AcView.md",
        "kind": "enumeration",
        "main": "Specifies an object's view.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acViewDesign**|1|Design view|\n|**acViewLayout**|6|Layout view|\n|**acViewNormal**|0|(Default) Normal view|\n|**acViewPivotChart**|4|PivotChart view|\n|**acViewPivotTable**|3|PivotTable view|\n|**acViewPreview**|2|Print Preview|\n|**acViewReport**|5|Report view|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcWebBrowserScrollBars",
        "enum_ch": [
            "acScrollAuto",
            "acScrollNo",
            "acScrollYes"
        ],
        "file_name": "Access.AcWebBrowserScrollBars.md",
        "kind": "enumeration",
        "main": "Used by the [ScrollBars](Access.WebBrowserControl.ScrollBars.md) property to specify whether scroll bars are displayed.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acScrollAuto**|0|Scroll bars are displayed if the current page in the control is too large to be displayed in its entirely.|\n|**acScrollNo**|2|Scroll bars are not displayed.|\n|**acScrollYes**|1|Scroll bars are displayed.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcWebBrowserState",
        "enum_ch": [
            "acComplete",
            "acInteractive",
            "acLoaded",
            "acLoading",
            "acUninitialized"
        ],
        "file_name": "Access.AcWebBrowserState.md",
        "kind": "enumeration",
        "main": "Used by the **[ReadyState](Access.WebBrowserControl.ReadyState.md)** property to determine the state of the web browser control.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acComplete**|4|The web browser control has finished loading the new document and all its contents.|\n|**acInteractive**|3|The web browser control has loaded enough of the document to allow limited user interaction, such as choosing hyperlinks that have been displayed.|\n|**acLoaded**|2|The web browser control has loaded and initialized the new document, but has not yet received all the document data.|\n|**acLoading**|1|The web browser control is loading a new document.|\n|**acUninitialized**|0|No document is currently loaded.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcWebUserDisplay",
        "enum_ch": [
            "acWebUserEmail",
            "acWebUserID",
            "acWebUserLoginName",
            "acWebUserName"
        ],
        "file_name": "Access.AcWebUserDisplay.md",
        "kind": "enumeration",
        "main": "Specifies information about the current user of a Web database.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acWebUserEmail**|3|The current user's email address.|\n|**acWebUserID**|0|The current user's member ID.|\n|**acWebUserLoginName**|2|The current user's login name.|\n|**acWebUserName**|1|The current user's display name.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcWebUserGroupsDisplay",
        "enum_ch": [
            "acWebUserGroupID",
            "acWebUserGroupName"
        ],
        "file_name": "Access.AcWebUserGroupsDisplay.md",
        "kind": "enumeration",
        "main": "Specifies the type of information to return about the group membership of the current user of a Web database.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acWebUserGroupID**|0|The identifiers of the groups.|\n|**acWebUserGroupName**|1|The names of the groups.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AcWindowMode",
        "enum_ch": [
            "acDialog",
            "acHidden",
            "acIcon",
            "acWindowNormal"
        ],
        "file_name": "Access.AcWindowMode.md",
        "kind": "enumeration",
        "main": "Specifies the mode in which a form or report is opened.\n|Name|Value|Description|\n|:-----|:-----|:-----|\n|**acDialog**|3|The form or report's **Modal** and **PopUp** properties are set to **Yes**.|\n|**acHidden**|1|The form or report is hidden.|\n|**acIcon**|2|The form or report opens minimized in the Windows taskbar.|\n|**acWindowNormal**|0| (Default) The form or report opens in the mode set by its properties.|\n[!include[Support and feedback](~/includes/feedback-boilerplate.md)]\n"
    },
    {
        "api_name": "Access.AdditionalData.Add",
        "file_name": "Access.AdditionalData.Add.md",
        "kind": "method",
        "main": "Adds an add table or query that will be included when the **[ExportXML](Access.Application.ExportXML.md)** method is called.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Access.Application.ExportXML.md"
        ]
    },
    {
        "api_name": "Access.AdditionalData.Count",
        "file_name": "Access.AdditionalData.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AdditionalData.Item",
        "file_name": "Access.AdditionalData.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AdditionalData**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "AdditionalData"
        ]
    },
    {
        "api_name": "Access.AdditionalData",
        "Events": [],
        "file_name": "Access.AdditionalData.md",
        "kind": "object",
        "main": "Represents the collection of tables and queries that will be included with the parent table that is exported by the **[ExportXML](Access.Application.ExportXML.md)** method.\n",
        "Methods": [
            "Add"
        ],
        "Properties": [
            "Count",
            "Item",
            "Name"
        ]
    },
    {
        "api_name": "Access.AdditionalData.Name",
        "file_name": "Access.AdditionalData.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.AllDatabaseDiagrams.Application",
        "file_name": "Access.AllDatabaseDiagrams.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllDatabaseDiagrams.Count",
        "file_name": "Access.AllDatabaseDiagrams.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllDatabaseDiagrams.Item",
        "file_name": "Access.AllDatabaseDiagrams.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllDatabaseDiagrams",
        "Events": [],
        "file_name": "Access.AllDatabaseDiagrams.md",
        "kind": "object",
        "main": "The **AllDatabaseDiagrams** collection contains an **[AccessObject](Access.AccessObject.md)** for each database diagram in the **[CurrentData](Access.CurrentData.md)** or **[CodeData](Access.CodeData.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllDatabaseDiagrams.Parent",
        "file_name": "Access.AllDatabaseDiagrams.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllForms.Application",
        "file_name": "Access.AllForms.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllForms.Count",
        "file_name": "Access.AllForms.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllForms.Item",
        "file_name": "Access.AllForms.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllForms",
        "Events": [],
        "file_name": "Access.AllForms.md",
        "kind": "object",
        "main": "The **AllForms** collection contains an **[AccessObject](Access.AccessObject.md)** object for each form in the **[CurrentProject](Access.CurrentProject.md)** or **[CodeProject](Access.CodeProject.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllForms.Parent",
        "file_name": "Access.AllForms.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllFunctions.Application",
        "file_name": "Access.AllFunctions.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllFunctions.Count",
        "file_name": "Access.AllFunctions.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllFunctions.Item",
        "file_name": "Access.AllFunctions.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllFunctions",
        "Events": [],
        "file_name": "Access.AllFunctions.md",
        "kind": "object",
        "main": "The **AllFunctions** collection contains an **[AccessObject](Access.AccessObject.md)** object for each function in the **[CurrentData](Access.CurrentData.md)** or **[CodeData](Access.CodeData.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllFunctions.Parent",
        "file_name": "Access.AllFunctions.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllMacros.Application",
        "file_name": "Access.AllMacros.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllMacros.Count",
        "file_name": "Access.AllMacros.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllMacros.Item",
        "file_name": "Access.AllMacros.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllMacros.Parent",
        "file_name": "Access.AllMacros.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllModules.Application",
        "file_name": "Access.AllModules.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllModules.Count",
        "file_name": "Access.AllModules.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllModules.Item",
        "file_name": "Access.AllModules.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllModules",
        "Events": [],
        "file_name": "Access.AllModules.md",
        "kind": "object",
        "main": "The **AllModules** collection contains an **[AccessObject](Access.AccessObject.md)** of each module in the **[CurrentProject](Access.CurrentProject.md)** or **[CodeProject](Access.CodeProject.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllModules.Parent",
        "file_name": "Access.AllModules.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllQueries.Application",
        "file_name": "Access.AllQueries.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllQueries.Count",
        "file_name": "Access.AllQueries.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllQueries.Item",
        "file_name": "Access.AllQueries.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**,.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllQueries",
        "Events": [],
        "file_name": "Access.AllQueries.md",
        "kind": "object",
        "main": "The **AllQueries** collection contains an **[AccessObject](Access.AccessObject.md)** for each query in the **[CurrentData](Access.CurrentData.md)** or **[CodeData](Access.CodeData.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllQueries.Parent",
        "file_name": "Access.AllQueries.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllReports.Application",
        "file_name": "Access.AllReports.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllReports.Count",
        "file_name": "Access.AllReports.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllReports.Item",
        "file_name": "Access.AllReports.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllReports",
        "Events": [],
        "file_name": "Access.AllReports.md",
        "kind": "object",
        "main": "The **AllReports** collection contains an **[AccessObject](Access.AccessObject.md)** for each report in the **[CurrentProject](Access.CurrentProject.md)** or **[CodeProject](Access.CodeProject.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllReports.Parent",
        "file_name": "Access.AllReports.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllStoredProcedures.Application",
        "file_name": "Access.AllStoredProcedures.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllStoredProcedures.Count",
        "file_name": "Access.AllStoredProcedures.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllStoredProcedures.Item",
        "file_name": "Access.AllStoredProcedures.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllStoredProcedures",
        "Events": [],
        "file_name": "Access.AllStoredProcedures.md",
        "kind": "object",
        "main": "The **AllStoredProcedures** collection contains an **[AccessObject](Access.AccessObject.md)** for each stored procedure in the **[CurrentData](Access.CurrentData.md)** or **[CodeData](Access.CodeData.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllStoredProcedures.Parent",
        "file_name": "Access.AllStoredProcedures.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllTables.Application",
        "file_name": "Access.AllTables.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllTables.Count",
        "file_name": "Access.AllTables.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllTables.Item",
        "file_name": "Access.AllTables.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllTables",
        "Events": [],
        "file_name": "Access.AllTables.md",
        "kind": "object",
        "main": "The **AllTables** collection contains an **[AccessObject](Access.AccessObject.md)** for each table in the **[CurrentData](Access.CurrentData.md)** or **[CodeData](Access.CodeData.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllTables.Parent",
        "file_name": "Access.AllTables.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.AllViews.Application",
        "file_name": "Access.AllViews.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.AllViews.Count",
        "file_name": "Access.AllViews.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.AllViews.Item",
        "file_name": "Access.AllViews.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.AllViews",
        "Events": [],
        "file_name": "Access.AllViews.md",
        "kind": "object",
        "main": "The **AllViews** collection contains an **[AccessObject](Access.AccessObject.md)** for each view in the **[CurrentData](Access.CurrentData.md)** or **[CodeData](Access.CodeData.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.AllViews.Parent",
        "file_name": "Access.AllViews.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.AccessError",
        "file_name": "Access.Application.AccessError.md",
        "kind": "method",
        "main": "Use the **AccessError** method to return the descriptive string associated with a Microsoft Access or Data Access Objects (DAO) error.\n",
        "Parameters": [
            "ErrorNumber"
        ],
        "Return_value": [
            "AccessError"
        ]
    },
    {
        "api_name": "Access.Application.AddToFavorites",
        "file_name": "Access.Application.AddToFavorites.md",
        "kind": "method",
        "main": "The **AddToFavorites** method adds a hyperlink address to the Favorites folder.\n",
        "Parameters": [],
        "Return_value": [
            "AddToFavorites"
        ]
    },
    {
        "api_name": "Access.Application.AppIcon",
        "file_name": "Access.Application.AppIcon.md",
        "kind": "property",
        "main": "Use the **AppIcon** property to specify the name of the bitmap (.bmp) or icon (.ico) file that contains the application's icon. For example, you can use the **AppIcon** property to specify a .bmp file that contains a picture of an automobile to represent an automotive parts application.\n",
        "Parameters": [],
        "Return_value": [
            "AppIcon"
        ]
    },
    {
        "api_name": "Access.Application.Application",
        "file_name": "Access.Application.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **Application** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application"
        ]
    },
    {
        "api_name": "Access.Application. AppTitle",
        "file_name": "Access.Application.AppTitle.md",
        "kind": "property",
        "main": "Use the **AppTitle** property to specify the text that appears in the application database's title bar. For example, you can use the **AppTitle** property to specify that the string \"Inventory Control\" appear in the title bar of your Inventory Control database application.\n",
        "Parameters": [],
        "Return_value": [
            "AppTitle"
        ]
    },
    {
        "api_name": "Access.Application.Assistance",
        "file_name": "Access.Application.Assistance.md",
        "kind": "property",
        "main": "Returns an **[IAssistance](Office.IAssistance.md)** object that represents the Microsoft Office Help Viewer. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Office.IAssistance.md"
        ]
    },
    {
        "api_name": "Access.Application.AutoCorrect",
        "file_name": "Access.Application.AutoCorrect.md",
        "kind": "property",
        "main": "Returns an **[AutoCorrect](Access.AutoCorrect.md)** object that represents the AutoCorrect settings for Microsoft Access. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AutoCorrect.md"
        ]
    },
    {
        "api_name": "Access.Application.AutomationSecurity",
        "file_name": "Access.Application.AutomationSecurity.md",
        "kind": "property",
        "main": "Returns or sets an **[MsoAutomationSecurity](office.msoautomationsecurity.md)** constant that represents the security mode that Microsoft Access uses when it is programmatically opening files. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "office.msoautomationsecurity.md"
        ]
    },
    {
        "api_name": "Access.Application.BrokenReference",
        "file_name": "Access.Application.BrokenReference.md",
        "kind": "property",
        "main": "Returns a **Boolean** indicating whether the current database has any broken references to databases or type libraries. **True** if there are any broken references. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Application.Build",
        "file_name": "Access.Application.Build.md",
        "kind": "property",
        "main": "Returns as a **Long** representing the build number of the currently installed copy of Microsoft Access. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Application.BuildCriteria",
        "file_name": "Access.Application.BuildCriteria.md",
        "kind": "method",
        "main": "The **BuildCriteria** method returns a parsed criteria string as it would appear in the query design grid, in **Filter By Form** or **Server Filter By Form** mode. For example, you may want to set a form's **Filter** or **[ServerFilter](Access.Form.ServerFilter.md)** property based on varying criteria from the user. Use the **BuildCriteria** method to construct the string expression argument for the **Filter** or **ServerFilter** property. **String**.\n",
        "Parameters": [
            "Field",
            "FieldType",
            "Expression"
        ],
        "Return_value": [
            "BuildCriteria",
            "Filter",
            "Access.Form.ServerFilter.md",
            "String"
        ]
    },
    {
        "api_name": "Access.Application.CloseCurrentDatabase",
        "file_name": "Access.Application.CloseCurrentDatabase.md",
        "kind": "method",
        "main": "Use the **CloseCurrentDatabase** method to close the current database, either a Microsoft Access database or an Access project (.adp) from another application that has opened a database through Automation.\n",
        "Parameters": [],
        "Return_value": [
            "CloseCurrentDatabase"
        ]
    },
    {
        "api_name": "Access.Application.CodeContextObject",
        "file_name": "Access.Application.CodeContextObject.md",
        "kind": "property",
        "main": "Use the **CodeContextObject** property to determine the object in which a macro or Visual Basic code is executing. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "CodeContextObject"
        ]
    },
    {
        "api_name": "Access.Application.CodeData",
        "file_name": "Access.Application.CodeData.md",
        "kind": "property",
        "main": "Use the **CodeData** property to access the **[CodeData](Access.CodeData.md)** object and its related collections. Read-only **CodeData** object.\n",
        "Parameters": [],
        "Return_value": [
            "CodeData",
            "Access.CodeData.md"
        ]
    },
    {
        "api_name": "Access.Application.CodeDb",
        "file_name": "Access.Application.CodeDb.md",
        "kind": "method",
        "main": "Use the **CodeDb** method in a code module to determine the name of the **Database** object that refers to the database in which code is currently running. Use the **CodeDb** method to access Data Access Objects (DAO) that are part of a library database.\n",
        "Parameters": [],
        "Return_value": [
            "CodeDb",
            "Database"
        ]
    },
    {
        "api_name": "Access.Application.CodeProject",
        "file_name": "Access.Application.CodeProject.md",
        "kind": "property",
        "main": "Use the **CodeProject** property to access the **[CodeProject](Access.CodeProject.md)** object and its related collections, properties, and methods. Read-only **CodeProject** object.\n",
        "Parameters": [],
        "Return_value": [
            "CodeProject",
            "Access.CodeProject.md"
        ]
    },
    {
        "api_name": "Access.Application.ColumnHistory",
        "file_name": "Access.Application.ColumnHistory.md",
        "kind": "method",
        "main": "Gets the history of values that have been stored in a **Memo** field.\n",
        "Parameters": [
            "TableName",
            "ColumnName",
            "queryString"
        ],
        "Return_value": [
            "Memo"
        ]
    },
    {
        "api_name": "Access.Application.COMAddIns",
        "file_name": "Access.Application.COMAddIns.md",
        "kind": "property",
        "main": "Use the **COMAddIns** property to return a reference to the current **COMAddIns** collection object and its related properties. Read-only **COMAddIns** object.\n",
        "Parameters": [],
        "Return_value": [
            "COMAddIns"
        ]
    },
    {
        "api_name": "Access.Application.CommandBars",
        "file_name": "Access.Application.CommandBars.md",
        "kind": "property",
        "main": "Use the **CommandBars** property to return a reference to the **CommandBars** collection object. Read-only **CommandBars** object.\n",
        "Parameters": [],
        "Return_value": [
            "CommandBars"
        ]
    },
    {
        "api_name": "Access.Application.ConvertAccessProject",
        "file_name": "Access.Application.ConvertAccessProject.md",
        "kind": "method",
        "main": "Converts the specified Microsoft Access file from one version to another.\n",
        "Parameters": [
            "SourceFilename",
            "DestinationFilename",
            "DestinationFileFormat"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.CreateAccessProject",
        "file_name": "Access.Application.CreateAccessProject.md",
        "kind": "method",
        "main": "Use the **CreateAccessProject** method to create a new Microsoft Access project (.adp) on disk.\n",
        "Parameters": [
            "filepath",
            "Connect"
        ],
        "Return_value": [
            "CreateAccessProject"
        ]
    },
    {
        "api_name": "Access.Application.CreateAdditionalData",
        "file_name": "Access.Application.CreateAdditionalData.md",
        "kind": "method",
        "main": "Creates an **[AdditionalData](Access.AdditionalData.md)** object that can be used to add additional tables and queries to the parent table that is being exported by the **[ExportXML](Access.Application.ExportXML.md)** method.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AdditionalData.md",
            "Access.Application.ExportXML.md"
        ]
    },
    {
        "api_name": "Access.Application.CreateControl",
        "file_name": "Access.Application.CreateControl.md",
        "kind": "method",
        "main": "The **CreateControl** method creates a control on a specified open form. For example, suppose you are building a custom wizard that allows users to easily construct a particular form. Use the **CreateControl** method in your wizard to add the appropriate controls to the form.\n",
        "Parameters": [
            "FormName",
            "ControlType",
            "Section",
            "Parent",
            "ColumnName"
        ],
        "Return_value": [
            "CreateControl"
        ]
    },
    {
        "api_name": "Access.Application.CreateForm",
        "file_name": "Access.Application.CreateForm.md",
        "kind": "method",
        "main": "The **CreateForm** method creates a form and returns a **[Form](Access.Form.md)** object.\n",
        "Parameters": [
            "Database",
            "FormTemplate"
        ],
        "Return_value": [
            "CreateForm",
            "Access.Form.md"
        ]
    },
    {
        "api_name": "Access.Application.CreateGroupLevel",
        "file_name": "Access.Application.CreateGroupLevel.md",
        "kind": "method",
        "main": "Use the **CreateGroupLevel** method to specify a field or expression on which to group or sort data in a report.\n",
        "Parameters": [
            "ReportName",
            "Expression",
            "Header",
            "Footer"
        ],
        "Return_value": [
            "CreateGroupLevel"
        ]
    },
    {
        "api_name": "Access.Application.CreateReport",
        "file_name": "Access.Application.CreateReport.md",
        "kind": "method",
        "main": "The **CreateReport** method creates a report and returns a **[Report](Access.Report.md)** object. For example, suppose you are building a custom wizard to create a sales report. Use the **CreateReport** method in your wizard to create a new report based on a specified report template.\n",
        "Parameters": [
            "Database",
            "ReportTemplate"
        ],
        "Return_value": [
            "CreateReport",
            "Access.Report.md"
        ]
    },
    {
        "api_name": "Access.Application.CreateReportControl",
        "file_name": "Access.Application.CreateReportControl.md",
        "kind": "method",
        "main": "The **CreateReportControl** method creates a control on a specified open report. For more information, see the **[CreateControl](Access.Application.CreateControl.md)** method.\n",
        "Parameters": [
            "ReportName",
            "ControlType",
            "Section",
            "Parent",
            "ColumnName"
        ],
        "Return_value": [
            "CreateReportControl",
            "Access.Application.CreateControl.md"
        ]
    },
    {
        "api_name": "Access.Application.CurrentData",
        "file_name": "Access.Application.CurrentData.md",
        "kind": "property",
        "main": "Use the **CurrentData** property to access the **[CurrentData](Access.CurrentData.md)** object and its related collections. Read-only **CurrentData** object.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentData",
            "Access.CurrentData.md"
        ]
    },
    {
        "api_name": "Access.Application.CurrentDb",
        "file_name": "Access.Application.CurrentDb.md",
        "kind": "method",
        "main": "The **CurrentDb** method returns an object variable of type **Database** that represents the database currently open in the Microsoft Access window.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentDb",
            "Database"
        ]
    },
    {
        "api_name": "Access.Application.CurrentObjectName",
        "file_name": "Access.Application.CurrentObjectName.md",
        "kind": "property",
        "main": "Use the **CurrentObjectName** property with the **Application** object to determine the name of the active database object. The active database object is the object that has the focus or in which code is running. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentObjectName",
            "Application",
            "String"
        ]
    },
    {
        "api_name": "Access.Application.CurrentObjectType",
        "file_name": "Access.Application.CurrentObjectType.md",
        "kind": "property",
        "main": "Use the **CurrentObjectType** property together with the **[Application](Access.Application.md)** object to determine the type of the active database object (table, query, form, report, macro, module, server view, database diagram, or stored procedure). The active database object is the object that has the focus or in which code is running. Read-only **[AcObjectType](Access.AcObjectType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentObjectType",
            "Access.Application.md",
            "Access.AcObjectType.md"
        ]
    },
    {
        "api_name": "Access.Application.CurrentProject",
        "file_name": "Access.Application.CurrentProject.md",
        "kind": "property",
        "main": "Use the **CurrentProject** property to access the **[CurrentProject](Access.CurrentProject.md)** object and its related collections, properties, and methods. Read-only **CurrentProject** object.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentProject",
            "Access.CurrentProject.md"
        ]
    },
    {
        "api_name": "Access.Application.CurrentUser",
        "file_name": "Access.Application.CurrentUser.md",
        "kind": "method",
        "main": "Use the **CurrentUser** method to return the name of the current user of the database.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentUser"
        ]
    },
    {
        "api_name": "Access.Application.CurrentWebUser",
        "file_name": "Access.Application.CurrentWebUser.md",
        "kind": "method",
        "main": "Gets information about the current user of a web database on Microsoft SharePoint Foundation 2010 and later.\n",
        "Parameters": [
            "DisplayOption"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.CurrentWebUserGroups",
        "file_name": "Access.Application.CurrentWebUserGroups.md",
        "kind": "method",
        "main": "Gets the collection of Microsoft SharePoint Foundation groups of which the user is a member. \n",
        "Parameters": [
            "DisplayOption"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.DBEngine",
        "file_name": "Access.Application.DBEngine.md",
        "kind": "property",
        "main": "Use the **DBEngine** property in [Visual Basic](../access/Concepts/Settings/set-properties-by-using-visual-basic.md) to access the current **DBEngine** object and its related properties. Read-only **DBEngine**.\n",
        "Parameters": [],
        "Return_value": [
            "DBEngine"
        ]
    },
    {
        "api_name": "Access.Application.DCount",
        "file_name": "Access.Application.DCount.md",
        "kind": "method",
        "main": "Use the **DCount** function to determine the number of records that are in a specified set of records (a domain).\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": [
            "DCount"
        ]
    },
    {
        "api_name": "Access.Application.DDEExecute",
        "file_name": "Access.Application.DDEExecute.md",
        "kind": "method",
        "main": "Use the **DDEExecute** statement to send a command from a client application to a server application over an open dynamic data exchange (DDE) channel.\n",
        "Parameters": [
            "ChanNum",
            "Command"
        ],
        "Return_value": [
            "DDEExecute"
        ]
    },
    {
        "api_name": "Access.Application.DDEInitiate",
        "file_name": "Access.Application.DDEInitiate.md",
        "kind": "method",
        "main": "Use the **DDEInitiate** function to begin a dynamic data exchange (DDE) conversation with another application. The **DDEInitiate** function opens a DDE channel for transfer of data between a DDE server and a client application.\n",
        "Parameters": [
            "Application",
            "Topic"
        ],
        "Return_value": [
            "DDEInitiate"
        ]
    },
    {
        "api_name": "Access.Application.DDEPoke",
        "file_name": "Access.Application.DDEPoke.md",
        "kind": "method",
        "main": "Use the **DDEPoke** statement to supply text data from a client application to a server application over an open dynamic data exchange (DDE) channel.\n",
        "Parameters": [
            "ChanNum",
            "Item",
            "Data"
        ],
        "Return_value": [
            "DDEPoke"
        ]
    },
    {
        "api_name": "Access.Application.DDERequest",
        "file_name": "Access.Application.DDERequest.md",
        "kind": "method",
        "main": "Use the **DDERequest** function over an open dynamic data exchange (DDE) channel to request an item of information from a DDE server application.\n",
        "Parameters": [
            "ChanNum",
            "Item"
        ],
        "Return_value": [
            "DDERequest"
        ]
    },
    {
        "api_name": "Access.Application.DDETerminate",
        "file_name": "Access.Application.DDETerminate.md",
        "kind": "method",
        "main": "Use the **DDETerminate** statement to close a specified dynamic data exchange (DDE) channel.\n",
        "Parameters": [
            "ChanNum"
        ],
        "Return_value": [
            "DDETerminate"
        ]
    },
    {
        "api_name": "Access.Application.DDETerminateAll",
        "file_name": "Access.Application.DDETerminateAll.md",
        "kind": "method",
        "main": "Use the **DDETerminateAll** statement to close all open dynamic data exchange (DDE) channels.\n",
        "Parameters": [],
        "Return_value": [
            "DDETerminateAll"
        ]
    },
    {
        "api_name": "Access.Application.DefaultWorkspaceClone",
        "file_name": "Access.Application.DefaultWorkspaceClone.md",
        "kind": "method",
        "main": "Use the **DefaultWorkspaceClone** method to create a new **Workspace** object without requiring the user to sign in again. For example, if you need to conduct two sets of transactions simultaneously in separate workspaces, you can use the **DefaultWorkspaceClone** method to create a second **Workspace** object with the same user name and password without prompting the user for this information again.\n",
        "Parameters": [],
        "Return_value": [
            "DefaultWorkspaceClone"
        ]
    },
    {
        "api_name": "Access.Application.DeleteControl",
        "file_name": "Access.Application.DeleteControl.md",
        "kind": "method",
        "main": "The **DeleteControl** method deletes a specified control from a form.\n",
        "Parameters": [
            "FormName",
            "ControlName"
        ],
        "Return_value": [
            "DeleteControl"
        ]
    },
    {
        "api_name": "Access.Application.DeleteReportControl",
        "file_name": "Access.Application.DeleteReportControl.md",
        "kind": "method",
        "main": "The **DeleteReportControl** method deletes a specified control from a report.\n",
        "Parameters": [
            "ReportName",
            "ControlName"
        ],
        "Return_value": [
            "DeleteReportControl"
        ]
    },
    {
        "api_name": "Access.Application.DFirst",
        "file_name": "Access.Application.DFirst.md",
        "kind": "method",
        "main": "Use the **DFirst** function to return a random record from a particular field in a table or query when you need any value from that field.\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": [
            "DFirst"
        ]
    },
    {
        "api_name": "Access.Application.DirtyObject",
        "file_name": "Access.Application.DirtyObject.md",
        "kind": "method",
        "main": "Marks a form or report as dirty.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.DLast",
        "file_name": "Access.Application.DLast.md",
        "kind": "method",
        "main": "Use the **DLast** function to return a random record from a particular field in a table or query when you need any value from that field.\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": [
            "DLast"
        ]
    },
    {
        "api_name": "Access.Application.DLookup",
        "file_name": "Access.Application.DLookup.md",
        "kind": "method",
        "main": "Use the **DLookup** function to get the value of a particular field from a specified set of records (a domain).\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": [
            "DLookup"
        ]
    },
    {
        "api_name": "Access.Application.DMax",
        "file_name": "Access.Application.DMax.md",
        "kind": "method",
        "main": "Use the **DMax** function to determine the maximum value in a specified set of records (a domain).\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": [
            "DMax"
        ]
    },
    {
        "api_name": "Access.Application.DMin",
        "file_name": "Access.Application.DMin.md",
        "kind": "method",
        "main": "Use the **DMin** function to determine the minimum value in a specified set of records (a domain).\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": [
            "DMin"
        ]
    },
    {
        "api_name": "Access.Application.DoCmd",
        "file_name": "Access.Application.DoCmd.md",
        "kind": "property",
        "main": "Use the **DoCmd** property to access the read-only **[DoCmd](Access.DoCmd.md)** object and its related methods. Read-only **DoCmd**.\n",
        "Parameters": [],
        "Return_value": [
            "DoCmd",
            "Access.DoCmd.md"
        ]
    },
    {
        "api_name": "Access.Application.DStDev",
        "file_name": "Access.Application.DStDev.md",
        "kind": "method",
        "main": "Estimates the standard deviation across a population sample in a specified set of records (a domain).\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.DStDevP",
        "file_name": "Access.Application.DStDevP.md",
        "kind": "method",
        "main": "Estimates the standard deviation across a population in a specified set of records (a domain).\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.DSum",
        "file_name": "Access.Application.DSum.md",
        "kind": "method",
        "main": "Use the **DSum** function to calculate the sum of a set of values in a specified set of records (a domain). \n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": [
            "DSum"
        ]
    },
    {
        "api_name": "Access.Application.DVar",
        "file_name": "Access.Application.DVar.md",
        "kind": "method",
        "main": "Estimates the variance across a sample in a specified set of records (a domain).\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.DVarP",
        "file_name": "Access.Application.DVarP.md",
        "kind": "method",
        "main": "Calculates the variance of a population in a specified set of records (a domain).\n",
        "Parameters": [
            "Expr",
            "Domain",
            "Criteria"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.Echo",
        "file_name": "Access.Application.Echo.md",
        "kind": "method",
        "main": "The **Echo** method specifies whether Microsoft Access repaints the display screen.\n",
        "Parameters": [
            "EchoOn",
            "bstrStatusBarText"
        ],
        "Return_value": [
            "Echo"
        ]
    },
    {
        "api_name": "Access.Application.EuroConvert",
        "file_name": "Access.Application.EuroConvert.md",
        "kind": "method",
        "main": "Use the **EuroConvert** function to convert a number to euro, or from euro to a participating currency. You can also use it to convert a number from one participating currency to another by using the euro as an intermediary (triangulation). The **EuroConvert** function uses fixed conversion rates established by the European Union.\n",
        "Parameters": [
            "Number",
            "SourceCurrency",
            "TargetCurrency",
            "FullPrecision",
            "TriangulationPrecision"
        ],
        "Return_value": [
            "EuroConvert"
        ]
    },
    {
        "api_name": "Access.Application.Eval",
        "file_name": "Access.Application.Eval.md",
        "kind": "method",
        "main": "Use the **Eval** function to evaluate an expression that results in a text string or a numeric value.\n",
        "Parameters": [
            "StringExpr"
        ],
        "Return_value": [
            "Eval"
        ]
    },
    {
        "api_name": "Access.Application.ExportNavigationPane",
        "file_name": "Access.Application.ExportNavigationPane.md",
        "kind": "method",
        "main": "Saves the current configuration of the navigation pane to an XML file.\n",
        "Parameters": [
            "Path"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.ExportXML",
        "file_name": "Access.Application.ExportXML.md",
        "kind": "method",
        "main": "The **ExportXML** method allows developers to export XML data, schemas, and presentation information from Microsoft SQL Server 2000 Desktop Engine (MSDE 2000), Microsoft SQL Server 6.5 or later, or the Microsoft Access database engine.\n",
        "Parameters": [
            "ObjectType",
            "DataSource",
            "DataTarget",
            "SchemaTarget",
            "PresentationTarget",
            "ImageTarget",
            "Encoding",
            "OtherFlags",
            "WhereCondition",
            "AdditionalData"
        ],
        "Return_value": [
            "ExportXML"
        ]
    },
    {
        "api_name": "Access.Application.FeatureInstall",
        "file_name": "Access.Application.FeatureInstall.md",
        "kind": "property",
        "main": "Use the **FeatureInstall** property to specify or determine how Microsoft Access handles calls to methods and properties that require features not yet installed. Read/write **[MsoFeatureInstall](Office.MsoFeatureInstall.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "FeatureInstall",
            "Office.MsoFeatureInstall.md"
        ]
    },
    {
        "api_name": "Access.Application.FileDialog",
        "file_name": "Access.Application.FileDialog.md",
        "kind": "property",
        "main": "Returns a **FileDialog** object that represents a single instance of a file dialog box. Read-only.\n",
        "Parameters": [
            "dialogType"
        ],
        "Return_value": [
            "FileDialog"
        ]
    },
    {
        "api_name": "Access.Application.FollowHyperlink",
        "file_name": "Access.Application.FollowHyperlink.md",
        "kind": "method",
        "main": "The **FollowHyperlink** method opens the document or webpage specified by a hyperlink address.\n",
        "Parameters": [
            "Address",
            "SubAddress",
            "NewWindow",
            "AddHistory",
            "ExtraInfo",
            "Method",
            "HeaderInfo"
        ],
        "Return_value": [
            "FollowHyperlink"
        ]
    },
    {
        "api_name": "Access.Application.Forms",
        "file_name": "Access.Application.Forms.md",
        "kind": "property",
        "main": "Use the **Forms** property to return a read-only reference to the **[Forms](Access.Forms.md)** collection and its related properties.\n",
        "Parameters": [],
        "Return_value": [
            "Forms",
            "Access.Forms.md"
        ]
    },
    {
        "api_name": "Access.Application.GetHiddenAttribute",
        "file_name": "Access.Application.GetHiddenAttribute.md",
        "kind": "method",
        "main": "The **GetHiddenAttribute** method returns the value of a hidden attribute of a Microsoft Access object in the object's **Properties** dialog box, available by selecting the object in the Database window and choosing **Properties** on the **View** menu.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName"
        ],
        "Return_value": [
            "GetHiddenAttribute",
            "Properties",
            "View"
        ]
    },
    {
        "api_name": "Access.Application.GetOption",
        "file_name": "Access.Application.GetOption.md",
        "kind": "method",
        "main": "The **GetOption** method returns the current value of an option in the **Access Options** dialog box, available by choosing the Microsoft Office button, and then choosing **Access Options**. **Variant**.\n",
        "Parameters": [
            "OptionName"
        ],
        "Return_value": [
            "GetOption",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Application.GUIDFromString",
        "file_name": "Access.Application.GUIDFromString.md",
        "kind": "method",
        "main": "The **GUIDFromString** function converts a string to a GUID, which is an array of type **Byte**.\n",
        "Parameters": [
            "String"
        ],
        "Return_value": [
            "GUIDFromString",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Application.HtmlEncode",
        "file_name": "Access.Application.HtmlEncode.md",
        "kind": "method",
        "main": "Converts a string to an HTML-encoded string.\n",
        "Parameters": [
            "PlainText",
            "Length"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.hWndAccessApp",
        "file_name": "Access.Application.hWndAccessApp.md",
        "kind": "method",
        "main": "Use the **hWndAccessApp** method to determine the handle assigned by Windows to the main Microsoft Access window.\n",
        "Parameters": [],
        "Return_value": [
            "hWndAccessApp"
        ]
    },
    {
        "api_name": "Access.Application.HyperlinkPart",
        "file_name": "Access.Application.HyperlinkPart.md",
        "kind": "method",
        "main": "The **HyperlinkPart** method returns information about data stored as a Hyperlink data type.\n",
        "Parameters": [
            "Hyperlink",
            "Part"
        ],
        "Return_value": [
            "HyperlinkPart"
        ]
    },
    {
        "api_name": "Access.Application.ImportNavigationPane",
        "file_name": "Access.Application.ImportNavigationPane.md",
        "kind": "method",
        "main": "Loads a saved navigation pane configuration from disk.\n",
        "Parameters": [
            "Path",
            "fAppendOnly"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.ImportXML",
        "file_name": "Access.Application.ImportXML.md",
        "kind": "method",
        "main": "The **ImportXML** method allows developers to import XML data and/or schema information into Microsoft SQL Server 2000 Desktop Engine (MSDE 2000), Microsoft SQL Server 7.0 or later, or the Microsoft Access database engine.\n",
        "Parameters": [
            "DataSource",
            "ImportOptions"
        ],
        "Return_value": [
            "ImportXML"
        ]
    },
    {
        "api_name": "Access.Application.InstantiateTemplate",
        "file_name": "Access.Application.InstantiateTemplate.md",
        "kind": "method",
        "main": "Opens a new database and applies the specified template.\n",
        "Parameters": [
            "Path"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.IsCompiled",
        "file_name": "Access.Application.IsCompiled.md",
        "kind": "property",
        "main": "The **IsCompiled** property returns a **Boolean** value indicating whether the Visual Basic project is in a compiled state. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsCompiled",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Application.IsCurrentWebUserInGroup",
        "file_name": "Access.Application.IsCurrentWebUserInGroup.md",
        "kind": "method",
        "main": "Gets whether or not the current user of a web database is a member of the specified Microsoft SharePoint Foundation 2010 group.\n",
        "Parameters": [
            "GroupNameOrID"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.LanguageSettings",
        "file_name": "Access.Application.LanguageSettings.md",
        "kind": "property",
        "main": "Use the **LanguageSettings** property to return a read-only reference to the current **LanguageSettings** object and its related properties.\n",
        "Parameters": [],
        "Return_value": [
            "LanguageSettings"
        ]
    },
    {
        "api_name": "Access.Application.LoadCustomUI",
        "file_name": "Access.Application.LoadCustomUI.md",
        "kind": "method",
        "main": "Loads XML markup that represents a customized ribbon.\n",
        "Parameters": [
            "CustomUIName",
            "CustomUIXML"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.LoadFromAXL",
        "file_name": "Access.Application.LoadFromAXL.md",
        "kind": "method",
        "main": "Imports the object defined in an Application XML (AXL) file into the database. \n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "FileName"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.LoadPicture",
        "file_name": "Access.Application.LoadPicture.md",
        "kind": "method",
        "main": "The **LoadPicture** method loads a graphic into an ActiveX control.\n",
        "Parameters": [
            "FileName"
        ],
        "Return_value": [
            "LoadPicture"
        ]
    },
    {
        "api_name": "Access.Application.MacroError",
        "file_name": "Access.Application.MacroError.md",
        "kind": "property",
        "main": "Returns a **[MacroError](Access.MacroError.md)** object that contains information about the latest error to occur in a macro. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.MacroError.md"
        ]
    },
    {
        "api_name": "Access.Application",
        "Events": [],
        "file_name": "Access.Application.md",
        "kind": "object",
        "main": "The **Application** object refers to the active Microsoft Access application.\n",
        "Methods": [
            "AccessError",
            "AddToFavorites",
            "BuildCriteria",
            "CloseCurrentDatabase",
            "CodeDb",
            "ColumnHistory",
            "ConvertAccessProject",
            "CreateAccessProject",
            "CreateAdditionalData",
            "CreateControl",
            "CreateForm",
            "CreateGroupLevel",
            "CreateReport",
            "CreateReportControl",
            "CurrentDb",
            "CurrentUser",
            "CurrentWebUser",
            "CurrentWebUserGroups",
            "DAvg",
            "DCount",
            "DDEExecute",
            "DDEInitiate",
            "DDEPoke",
            "DDERequest",
            "DDETerminate",
            "DDETerminateAll",
            "DefaultWorkspaceClone",
            "DeleteControl",
            "DeleteReportControl",
            "DFirst",
            "DirtyObject",
            "DLast",
            "DLookup",
            "DMax",
            "DMin",
            "DStDev",
            "DStDevP",
            "DSum",
            "DVar",
            "DVarP",
            "Echo",
            "EuroConvert",
            "Eval",
            "ExportNavigationPane",
            "ExportXML",
            "FollowHyperlink",
            "GetHiddenAttribute",
            "GetOption",
            "GUIDFromString",
            "HtmlEncode",
            "hWndAccessApp",
            "HyperlinkPart",
            "ImportNavigationPane",
            "ImportXML",
            "InstantiateTemplate",
            "IsCurrentWebUserInGroup",
            "LoadCustomUI",
            "LoadFromAXL",
            "LoadPicture",
            "NewAccessProject",
            "NewCurrentDatabase",
            "Nz",
            "OpenAccessProject",
            "OpenCurrentDatabase",
            "PlainText",
            "Quit",
            "RefreshDatabaseWindow",
            "RefreshTitleBar",
            "Run",
            "RunCommand",
            "SaveAsAXL",
            "SaveAsTemplate",
            "SetDefaultWorkgroupFile",
            "SetHiddenAttribute",
            "SetOption",
            "StringFromGUID",
            "SysCmd",
            "TransformXML"
        ],
        "Properties": [
            "AppIcon",
            "Application",
            "AppTitle",
            "Assistance",
            "AutoCorrect",
            "AutomationSecurity",
            "BrokenReference",
            "Build",
            "CodeContextObject",
            "CodeData",
            "CodeProject",
            "COMAddIns",
            "CommandBars",
            "CurrentData",
            "CurrentObjectName",
            "CurrentObjectType",
            "CurrentProject",
            "DBEngine",
            "DoCmd",
            "FeatureInstall",
            "FileDialog",
            "Forms",
            "IsCompiled",
            "LanguageSettings",
            "MacroError",
            "MenuBar",
            "Modules",
            "Name",
            "NewFileTaskPane",
            "Parent",
            "Printer",
            "Printers",
            "ProductCode",
            "References",
            "Reports",
            "ReturnVars",
            "Screen",
            "ShortcutMenuBar",
            "TempVars",
            "UserControl",
            "VBE",
            "Version",
            "Visible",
            "WebServices"
        ]
    },
    {
        "api_name": "Access.Application.MenuBar",
        "file_name": "Access.Application.MenuBar.md",
        "kind": "property",
        "main": "Specifies a custom menu to display for a Microsoft Access database. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Application.Modules",
        "file_name": "Access.Application.Modules.md",
        "kind": "property",
        "main": "Use the **Modules** property to access the **[Modules](Access.Modules.md)** collection and its related properties. Read-only **Modules** object.\n",
        "Parameters": [],
        "Return_value": [
            "Modules",
            "Access.Modules.md"
        ]
    },
    {
        "api_name": "Access.Application.Name",
        "file_name": "Access.Application.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Application.NewAccessProject",
        "file_name": "Access.Application.NewAccessProject.md",
        "kind": "method",
        "main": "Use the **NewAccessProject** method to create and open a new Microsoft Access project (.adp) as the current Access project in the Access window.\n",
        "Parameters": [
            "filepath",
            "Connect"
        ],
        "Return_value": [
            "NewAccessProject"
        ]
    },
    {
        "api_name": "Access.Application.NewCurrentDatabase",
        "file_name": "Access.Application.NewCurrentDatabase.md",
        "kind": "method",
        "main": "Creates a new Microsoft Access database.\n",
        "Parameters": [
            "filepath",
            "FileFormat",
            "Template",
            "SiteAddress",
            "ListID"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.NewFileTaskPane",
        "file_name": "Access.Application.NewFileTaskPane.md",
        "kind": "property",
        "main": "Returns a **NewFile** object that represents a document listed on the **New File** task pane. Read-only **NewFile** object.\n",
        "Parameters": [],
        "Return_value": [
            "NewFile"
        ]
    },
    {
        "api_name": "Access.Application.Nz",
        "file_name": "Access.Application.Nz.md",
        "kind": "method",
        "main": "Use the **Nz** function to return zero (0), a zero-length string (\"\"), or another specified value when a **Variant** is **Null**. For example, you can use this function to convert a **Null** value to another value and prevent it from propagating through an expression.\n",
        "Parameters": [
            "Value",
            "ValueIfNull"
        ],
        "Return_value": [
            "Nz",
            "Variant",
            "Null"
        ]
    },
    {
        "api_name": "Access.Application.OpenAccessProject",
        "file_name": "Access.Application.OpenAccessProject.md",
        "kind": "method",
        "main": "Use the **OpenAccessProject** method to open an existing Microsoft Access project (.adp) as the current Access project in the Access window.\n",
        "Parameters": [
            "filepath",
            "Exclusive"
        ],
        "Return_value": [
            "OpenAccessProject"
        ]
    },
    {
        "api_name": "Access.Application.OpenCurrentDatabase",
        "file_name": "Access.Application.OpenCurrentDatabase.md",
        "kind": "method",
        "main": "Use the **OpenCurrentDatabase** method to open an existing Microsoft Access database as the current database.\n",
        "Parameters": [
            "filepath",
            "Exclusive",
            "bstrPassword"
        ],
        "Return_value": [
            "OpenCurrentDatabase"
        ]
    },
    {
        "api_name": "Access.Application.Parent",
        "file_name": "Access.Application.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.PlainText",
        "file_name": "Access.Application.PlainText.md",
        "kind": "method",
        "main": "Strips the rich text formatting from a string and returns an unformatted text string.\n",
        "Parameters": [
            "RichText",
            "Length"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.Printer",
        "file_name": "Access.Application.Printer.md",
        "kind": "property",
        "main": "Returns or sets a **[Printer](Access.Printer.md)** object representing the default printer on the current system. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Printer.md"
        ]
    },
    {
        "api_name": "Access.Application.Printers",
        "file_name": "Access.Application.Printers.md",
        "kind": "property",
        "main": "Returns the **[Printers](Access.Printers.md)** collection representing all the available printers on the current system. Read-only **Printers** collection.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Printers.md"
        ]
    },
    {
        "api_name": "Access.Application.ProductCode",
        "file_name": "Access.Application.ProductCode.md",
        "kind": "property",
        "main": "Use the **ProductCode** property to determine the Microsoft Access globally unique identifier (GUID). Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ProductCode",
            "String"
        ]
    },
    {
        "api_name": "Access.Application.Quit",
        "file_name": "Access.Application.Quit.md",
        "kind": "method",
        "main": "The **[Quit](Access.Application.Quit.md)** method quits Microsoft Access. You can select one of several options for saving a database object before quitting.\n",
        "Parameters": [
            "Options"
        ],
        "Return_value": [
            "Access.Application.Quit.md"
        ]
    },
    {
        "api_name": "Access.Application.References",
        "file_name": "Access.Application.References.md",
        "kind": "property",
        "main": "Use the **References** property to access the **[References](Access.References.md)** collection and its related properties, methods, and events. Read-only **References** collection.\n",
        "Parameters": [],
        "Return_value": [
            "References",
            "Access.References.md"
        ]
    },
    {
        "api_name": "Access.Application.RefreshDatabaseWindow",
        "file_name": "Access.Application.RefreshDatabaseWindow.md",
        "kind": "method",
        "main": "The **RefreshDatabaseWindow** method updates the Database window after a database object has been created, deleted, or renamed.\n",
        "Parameters": [],
        "Return_value": [
            "RefreshDatabaseWindow"
        ]
    },
    {
        "api_name": "Access.Application.RefreshTitleBar",
        "file_name": "Access.Application.RefreshTitleBar.md",
        "kind": "method",
        "main": "The **RefreshTitleBar** method refreshes the Microsoft Access title bar after the **[AppTitle](Access.Application.AppTitle.md)** or **[AppIcon](Access.Application.AppIcon.md)** property has been set in Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "RefreshTitleBar",
            "Access.Application.AppTitle.md",
            "Access.Application.AppIcon.md"
        ]
    },
    {
        "api_name": "Access.Application.Reports",
        "file_name": "Access.Application.Reports.md",
        "kind": "property",
        "main": "Use the **Reports** property to access the read-only **[Reports](Access.Reports.md)** collection and its related properties.\n",
        "Parameters": [],
        "Return_value": [
            "Reports",
            "Access.Reports.md"
        ]
    },
    {
        "api_name": "Access.Application.Run",
        "file_name": "Access.Application.Run.md",
        "kind": "method",
        "main": "Use the **Run** method to carry out a specified Microsoft Access or user-defined **Function** or **Sub** procedure. **Variant**.\n",
        "Parameters": [
            "Procedure"
        ],
        "Return_value": [
            "Run",
            "Function",
            "Sub",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Application.RunCommand",
        "file_name": "Access.Application.RunCommand.md",
        "kind": "method",
        "main": "The **RunCommand** method runs a built-in command.\n",
        "Parameters": [
            "Command"
        ],
        "Return_value": [
            "RunCommand"
        ]
    },
    {
        "api_name": "Access.Application.SaveAsAXL",
        "file_name": "Access.Application.SaveAsAXL.md",
        "kind": "method",
        "main": "Exports the specified object to an Application XML (AXL) file.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "FileName"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.SaveAsTemplate",
        "file_name": "Access.Application.SaveAsTemplate.md",
        "kind": "method",
        "main": "Converts an existing Microsoft Access database file to a database template (*.accdt) format file.\n",
        "Parameters": [
            "Path",
            "Title",
            "IconPath",
            "CoreTable",
            "Category",
            "PreviewPath",
            "Description",
            "InstantiationForm",
            "ApplicationPart",
            "IncludeData"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.Screen",
        "file_name": "Access.Application.Screen.md",
        "kind": "property",
        "main": "Use the **Screen** property to return a reference the **[Screen](Access.Screen.md)** object and its related properties. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Screen",
            "Access.Screen.md"
        ]
    },
    {
        "api_name": "Access.Application.SetDefaultWorkgroupFile",
        "file_name": "Access.Application.SetDefaultWorkgroupFile.md",
        "kind": "method",
        "main": "Sets the default workgroup file to the specified file.\n",
        "Parameters": [
            "Path"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.SetHiddenAttribute",
        "file_name": "Access.Application.SetHiddenAttribute.md",
        "kind": "method",
        "main": "The **SetHiddenAttribute** method sets the hidden attribute of an Access object.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "fHidden"
        ],
        "Return_value": [
            "SetHiddenAttribute"
        ]
    },
    {
        "api_name": "Access.Application.SetOption",
        "file_name": "Access.Application.SetOption.md",
        "kind": "method",
        "main": "The **SetOption** method sets the current value of an option in the **Access Options** dialog box.\n",
        "Parameters": [
            "OptionName",
            "Setting"
        ],
        "Return_value": [
            "SetOption"
        ]
    },
    {
        "api_name": "Access.Application.ShortcutMenuBar",
        "file_name": "Access.Application.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.Application.StringFromGUID",
        "file_name": "Access.Application.StringFromGUID.md",
        "kind": "method",
        "main": "The **StringFromGUID** function converts a GUID, which is an array of type **Byte**, to a string.\n",
        "Parameters": [
            "Guid"
        ],
        "Return_value": [
            "StringFromGUID",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Application.SysCmd",
        "file_name": "Access.Application.SysCmd.md",
        "kind": "method",
        "main": "Use the **SysCmd** method to display a progress meter or optional specified text in the status bar, return information about Microsoft Access and its associated files, or return the state of a specified database object (to indicate whether the object is open, is a new object, or has been changed but not saved). **Variant**.\n",
        "Parameters": [
            "Action",
            "Argument2",
            "Argument3"
        ],
        "Return_value": [
            "SysCmd",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Application.TempVars",
        "file_name": "Access.Application.TempVars.md",
        "kind": "property",
        "main": "Returns the collection of **[TempVar](Access.TempVar.md)** objects. Read-only **[TempVars](Access.TempVars.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.TempVar.md",
            "Access.TempVars.md"
        ]
    },
    {
        "api_name": "Access.Application.TransformXML",
        "file_name": "Access.Application.TransformXML.md",
        "kind": "method",
        "main": "Applies an Extensible Stylesheet Language (XSL) stylesheet to an XML data file and writes the resulting XML to an XML data file.\n",
        "Parameters": [
            "DataSource",
            "TransformSource",
            "OutputTarget",
            "WellFormedXMLOutput",
            "ScriptOption"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Application.UserControl",
        "file_name": "Access.Application.UserControl.md",
        "kind": "property",
        "main": "Use the **UserControl** property to determine whether the current Microsoft Access application was started by the user or by another application with Automation, formerly called OLE Automation. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "UserControl",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Application.VBE",
        "file_name": "Access.Application.VBE.md",
        "kind": "property",
        "main": "Use the **VBE** property to return a reference to the current **VBE** object and its related properties. The **VBE** property of the **[Application](Access.Application.md)** object represents the Microsoft Visual Basic for Applications editor. Read-only **VBE** object.\n",
        "Parameters": [],
        "Return_value": [
            "VBE",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Application.Version",
        "file_name": "Access.Application.Version.md",
        "kind": "property",
        "main": "Returns a **String** indicating the version number of the currently installed copy of Microsoft Access. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Application.Visible",
        "file_name": "Access.Application.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether a Microsoft Access application is minimized. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Application.WebServices",
        "file_name": "Access.Application.WebServices.md",
        "kind": "property",
        "main": "Gets the collection of installed Data Service data connections. Read-only **[WebServices](Access.WebServices.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.WebServices.md"
        ]
    },
    {
        "api_name": "Access.Attachment.AddColon",
        "file_name": "Access.Attachment.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.AfterUpdate",
        "file_name": "Access.Attachment.AfterUpdate-event.md",
        "kind": "event",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **AfterUpdate** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate",
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.AfterUpdate",
        "file_name": "Access.Attachment.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.attachment.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.Application",
        "file_name": "Access.Attachment.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Attachment.AttachmentCount",
        "file_name": "Access.Attachment.AttachmentCount.md",
        "kind": "property",
        "main": "Gets the number of documents attached to the specified **Attachment** control. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Attachment",
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.AttachmentCurrent",
        "file_name": "Access.Attachment.AttachmentCurrent.md",
        "kind": "event",
        "main": "Occurs when the focus moves to or from a file contained in the specified **Attachment** control, making it the current attachment, or when the form is refreshed or requeried.\n",
        "Parameters": [],
        "Return_value": [
            "Attachment"
        ]
    },
    {
        "api_name": "Access.Attachment.AutoLabel",
        "file_name": "Access.Attachment.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.Back",
        "file_name": "Access.Attachment.Back.md",
        "kind": "method",
        "main": "Moves the focus to the previous file in the specified **Attachment** control.\n",
        "Parameters": [],
        "Return_value": [
            "Attachment"
        ]
    },
    {
        "api_name": "Access.Attachment.BackColor",
        "file_name": "Access.Attachment.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.BackShade",
        "file_name": "Access.Attachment.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **[BackColor](access.attachment.backcolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.backcolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Attachment.BackStyle",
        "file_name": "Access.Attachment.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.BackThemeColorIndex",
        "file_name": "Access.Attachment.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **[BackColor](access.attachment.backcolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.backcolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.BackTint",
        "file_name": "Access.Attachment.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **[BackColor](access.attachment.backcolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.backcolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Attachment.BeforeUpdate",
        "file_name": "Access.Attachment.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.Attachment.BeforeUpdate",
        "file_name": "Access.Attachment.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.attachment.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.BorderColor",
        "file_name": "Access.Attachment.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.BorderShade",
        "file_name": "Access.Attachment.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **[BorderColor](access.attachment.bordercolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.bordercolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Attachment.BorderStyle",
        "file_name": "Access.Attachment.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.BorderThemeColorIndex",
        "file_name": "Access.Attachment.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme that is associated with the **[BorderColor](access.attachment.bordercolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.bordercolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.BorderTint",
        "file_name": "Access.Attachment.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **[BorderColor](access.attachment.bordercolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.bordercolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Attachment.BorderWidth",
        "file_name": "Access.Attachment.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.BottomPadding",
        "file_name": "Access.Attachment.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the attachment and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.Change",
        "file_name": "Access.Attachment.Change.md",
        "kind": "event",
        "main": "The **Change** event occurs when the contents of the specified control change.\n",
        "Parameters": [],
        "Return_value": [
            "Change"
        ]
    },
    {
        "api_name": "Access.Attachment.Click",
        "file_name": "Access.Attachment.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.Attachment.ColumnHidden",
        "file_name": "Access.Attachment.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.ColumnOrder",
        "file_name": "Access.Attachment.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.ColumnWidth",
        "file_name": "Access.Attachment.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.Controls",
        "file_name": "Access.Attachment.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.Attachment.ControlSource",
        "file_name": "Access.Attachment.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in the specified **Attachment** control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "Attachment",
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.ControlTipText",
        "file_name": "Access.Attachment.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.ControlType",
        "file_name": "Access.Attachment.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.CurrentAttachment",
        "file_name": "Access.Attachment.CurrentAttachment.md",
        "kind": "property",
        "main": "Gets the index number of the file that has the focus in the **Attachment** control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Attachment",
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.DblClick",
        "file_name": "Access.Attachment.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.Attachment.DefaultPicture",
        "file_name": "Access.Attachment.DefaultPicture.md",
        "kind": "property",
        "main": "Gets or sets the path and file name of the graphic to be used as a background picture on an attachment control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.DefaultPictureType",
        "file_name": "Access.Attachment.DefaultPictureType.md",
        "kind": "property",
        "main": "Gets or sets the method used to store the image specified by the **[DefaultPicture](Access.Attachment.DefaultPicture.md)** property in the database. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Attachment.DefaultPicture.md",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.Dirty",
        "file_name": "Access.Attachment.Dirty.md",
        "kind": "event",
        "main": "The **Dirty** event occurs when the content of the specified control changes.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Dirty"
        ]
    },
    {
        "api_name": "Access.Attachment.DisplayAs",
        "file_name": "Access.Attachment.DisplayAs.md",
        "kind": "property",
        "main": "Gets or sets an **[AcDisplayAs](Access.AcDisplayAs.md)** constant that specifies how a file should be displayed in the **Attachment** control. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcDisplayAs.md",
            "Attachment"
        ]
    },
    {
        "api_name": "Access.Attachment.DisplayWhen",
        "file_name": "Access.Attachment.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.Enabled",
        "file_name": "Access.Attachment.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.Enter",
        "file_name": "Access.Attachment.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.Attachment.EventProcPrefix",
        "file_name": "Access.Attachment.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.Exit",
        "file_name": "Access.Attachment.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.Attachment.FileName",
        "file_name": "Access.Attachment.FileName.md",
        "kind": "property",
        "main": "Returns the full file name of the specified attachment. Read-only **String**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.FileType",
        "file_name": "Access.Attachment.FileType.md",
        "kind": "property",
        "main": "Returns the file extension of the specified attachment. Read-only **String**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.FileURL",
        "file_name": "Access.Attachment.FileURL.md",
        "kind": "property",
        "main": "Returns the Uniform Resource Locator (URL) of the specified attachment. Read-only **String**.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.Forward",
        "file_name": "Access.Attachment.Forward.md",
        "kind": "method",
        "main": "Moves the focus to the next file in the specified **Attachment** control.\n",
        "Parameters": [],
        "Return_value": [
            "Attachment"
        ]
    },
    {
        "api_name": "Access.Attachment.GotFocus",
        "file_name": "Access.Attachment.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineColor",
        "file_name": "Access.Attachment.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified attachment. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineShade",
        "file_name": "Access.Attachment.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.attachment.gridlinecolor.md)** property of the specified object. Read/write **Single**. \n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineStyleBottom",
        "file_name": "Access.Attachment.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified attachment. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineStyleLeft",
        "file_name": "Access.Attachment.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified attachment. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineStyleRight",
        "file_name": "Access.Attachment.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified attachment. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineStyleTop",
        "file_name": "Access.Attachment.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified attachment. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineThemeColorIndex",
        "file_name": "Access.Attachment.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.attachment.gridlinecolor.md)** property of the specified object. Read/write **Long**. \n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineTint",
        "file_name": "Access.Attachment.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.attachment.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineWidthBottom",
        "file_name": "Access.Attachment.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified attachment. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineWidthLeft",
        "file_name": "Access.Attachment.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified attachment. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineWidthRight",
        "file_name": "Access.Attachment.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified attachment. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.GridlineWidthTop",
        "file_name": "Access.Attachment.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified attachment. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.Height",
        "file_name": "Access.Attachment.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.HelpContextId",
        "file_name": "Access.Attachment.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.HorizontalAnchor",
        "file_name": "Access.Attachment.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the attachment is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Attachment.InSelection",
        "file_name": "Access.Attachment.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.IsVisible",
        "file_name": "Access.Attachment.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.KeyDown",
        "file_name": "Access.Attachment.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Attachment.KeyPress",
        "file_name": "Access.Attachment.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Attachment.KeyUp",
        "file_name": "Access.Attachment.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Attachment.LabelAlign",
        "file_name": "Access.Attachment.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.LabelX",
        "file_name": "Access.Attachment.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.LabelY",
        "file_name": "Access.Attachment.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.Layout",
        "file_name": "Access.Attachment.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified attachment. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.Attachment.LayoutID",
        "file_name": "Access.Attachment.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified attachment. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Attachment.Left",
        "file_name": "Access.Attachment.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.LeftPadding",
        "file_name": "Access.Attachment.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the attachment and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.Locked",
        "file_name": "Access.Attachment.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.LostFocus",
        "file_name": "Access.Attachment.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.Attachment",
        "Events": [
            "AfterUpdate",
            "AttachmentCurrent",
            "BeforeUpdate",
            "Change",
            "Click",
            "DblClick",
            "Dirty",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.Attachment.md",
        "kind": "object",
        "main": "This object corresponds to an attachment control. Use an attachment control when you want to manipulate the contents fields of the attachment data type.\n",
        "Methods": [
            "Back",
            "Forward",
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "AddColon",
            "AfterUpdate",
            "Application",
            "AttachmentCount",
            "AutoLabel",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BeforeUpdate",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "CurrentAttachment",
            "DefaultPicture",
            "DefaultPictureType",
            "DisplayAs",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FileName",
            "FileType",
            "FileURL",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Locked",
            "Name",
            "OldBorderStyle",
            "OldValue",
            "OnAttachmentCurrent",
            "OnChange",
            "OnClick",
            "OnDblClick",
            "OnDirty",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "Parent",
            "PictureAlignment",
            "PictureSizeMode",
            "PictureTiling",
            "Properties",
            "RightPadding",
            "Section",
            "ShortcutMenuBar",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.Attachment.MouseDown",
        "file_name": "Access.Attachment.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.Attachment.MouseMove",
        "file_name": "Access.Attachment.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.Attachment.MouseUp",
        "file_name": "Access.Attachment.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.Attachment.Move",
        "file_name": "Access.Attachment.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Attachment.Name",
        "file_name": "Access.Attachment.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OldBorderStyle",
        "file_name": "Access.Attachment.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **[BorderStyle](access.attachment.borderstyle.md)** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "access.attachment.borderstyle.md",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.OldValue",
        "file_name": "Access.Attachment.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Attachment.OnAttachmentCurrent",
        "file_name": "Access.Attachment.OnAttachmentCurrent.md",
        "kind": "property",
        "main": "Sets or gets the value of the **On Attachment Current** box in the Properties window of the specified **Attachment**. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Attachment"
        ]
    },
    {
        "api_name": "Access.Attachment.OnChange",
        "file_name": "Access.Attachment.OnChange.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Change** box in the Properties window of one of the objects in the **Applies To** list. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnClick",
        "file_name": "Access.Attachment.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnDblClick",
        "file_name": "Access.Attachment.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnDirty",
        "file_name": "Access.Attachment.OnDirty.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dirty** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnEnter",
        "file_name": "Access.Attachment.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of the specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnExit",
        "file_name": "Access.Attachment.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnGotFocus",
        "file_name": "Access.Attachment.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnKeyDown",
        "file_name": "Access.Attachment.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnKeyPress",
        "file_name": "Access.Attachment.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnKeyUp",
        "file_name": "Access.Attachment.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnLostFocus",
        "file_name": "Access.Attachment.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnMouseDown",
        "file_name": "Access.Attachment.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnMouseMove",
        "file_name": "Access.Attachment.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.OnMouseUp",
        "file_name": "Access.Attachment.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.Parent",
        "file_name": "Access.Attachment.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Attachment.PictureAlignment",
        "file_name": "Access.Attachment.PictureAlignment.md",
        "kind": "property",
        "main": "Use the **PictureAlignment** property to specify where a background picture will appear in the **Attachment** control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureAlignment",
            "Attachment",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.PictureSizeMode",
        "file_name": "Access.Attachment.PictureSizeMode.md",
        "kind": "property",
        "main": "Use the **PictureSizeMode** property to specify how a picture for an attachment control is sized. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureSizeMode",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.PictureTiling",
        "file_name": "Access.Attachment.PictureTiling.md",
        "kind": "property",
        "main": "Use the **PictureTiling** property to specify whether a background picture is tiled across the entire attachment control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureTiling",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.Properties",
        "file_name": "Access.Attachment.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Attachment.Requery",
        "file_name": "Access.Attachment.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.Attachment.RightPadding",
        "file_name": "Access.Attachment.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the attachment and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.Section",
        "file_name": "Access.Attachment.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.SetFocus",
        "file_name": "Access.Attachment.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.Attachment.ShortcutMenuBar",
        "file_name": "Access.Attachment.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.SizeToFit",
        "file_name": "Access.Attachment.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.Attachment.SpecialEffect",
        "file_name": "Access.Attachment.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Attachment.StatusBarText",
        "file_name": "Access.Attachment.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.TabIndex",
        "file_name": "Access.Attachment.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.TabStop",
        "file_name": "Access.Attachment.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.Tag",
        "file_name": "Access.Attachment.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Attachment.Top",
        "file_name": "Access.Attachment.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.TopPadding",
        "file_name": "Access.Attachment.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the attachment and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Attachment.VerticalAnchor",
        "file_name": "Access.Attachment.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified attachment is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Attachment.Visible",
        "file_name": "Access.Attachment.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Attachment.Width",
        "file_name": "Access.Attachment.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.AutoCorrect.DisplayAutoCorrectOptions",
        "file_name": "Access.AutoCorrect.DisplayAutoCorrectOptions.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** value that specifies whether the **AutoCorrect Options** button is displayed for the specified control. The default value is **True**. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.AutoCorrect",
        "Events": [],
        "file_name": "Access.AutoCorrect.md",
        "kind": "object",
        "main": "The **AutoCorrect** object represents the AutoCorrect functionality of Microsoft Access.\n",
        "Methods": [],
        "Properties": []
    },
    {
        "api_name": "Access.BoundObjectFrame.Action",
        "file_name": "Access.BoundObjectFrame.Action.md",
        "kind": "property",
        "main": "Use the **Action** property in Visual Basic to specify the operation to perform on an OLE object. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Action",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.AddColon",
        "file_name": "Access.BoundObjectFrame.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.AfterUpdate",
        "file_name": "Access.BoundObjectFrame.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.AfterUpdate",
        "file_name": "Access.BoundObjectFrame.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.boundobjectframe.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Application",
        "file_name": "Access.BoundObjectFrame.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.AutoActivate",
        "file_name": "Access.BoundObjectFrame.AutoActivate.md",
        "kind": "property",
        "main": "Use the **AutoActivate** property to specify how the user can activate an OLE object. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "AutoActivate",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.AutoLabel",
        "file_name": "Access.BoundObjectFrame.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BackColor",
        "file_name": "Access.BoundObjectFrame.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BackShade",
        "file_name": "Access.BoundObjectFrame.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **[BackColor](access.boundobjectframe.backcolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.backcolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BackStyle",
        "file_name": "Access.BoundObjectFrame.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BackThemeColorIndex",
        "file_name": "Access.BoundObjectFrame.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **[BackColor](access.boundobjectframe.backcolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.backcolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BackTint",
        "file_name": "Access.BoundObjectFrame.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **[BackColor](access.boundobjectframe.backcolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.backcolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BeforeUpdate",
        "file_name": "Access.BoundObjectFrame.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BeforeUpdate",
        "file_name": "Access.BoundObjectFrame.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.boundobjectframe.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BorderColor",
        "file_name": "Access.BoundObjectFrame.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BorderShade",
        "file_name": "Access.BoundObjectFrame.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **[BorderColor](access.boundobjectframe.bordercolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.bordercolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BorderStyle",
        "file_name": "Access.BoundObjectFrame.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BorderThemeColorIndex",
        "file_name": "Access.BoundObjectFrame.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **[BorderColor](access.boundobjectframe.bordercolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.bordercolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BorderTint",
        "file_name": "Access.BoundObjectFrame.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **[BorderColor](access.boundobjectframe.bordercolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.bordercolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BorderWidth",
        "file_name": "Access.BoundObjectFrame.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.BottomPadding",
        "file_name": "Access.BoundObjectFrame.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the object frame and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Class",
        "file_name": "Access.BoundObjectFrame.Class.md",
        "kind": "property",
        "main": "Use the **Class** property to specify or determine the class name of an embedded OLE object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Class",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Click",
        "file_name": "Access.BoundObjectFrame.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ColumnHidden",
        "file_name": "Access.BoundObjectFrame.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**. \n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ColumnOrder",
        "file_name": "Access.BoundObjectFrame.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ColumnWidth",
        "file_name": "Access.BoundObjectFrame.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Controls",
        "file_name": "Access.BoundObjectFrame.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ControlSource",
        "file_name": "Access.BoundObjectFrame.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ControlTipText",
        "file_name": "Access.BoundObjectFrame.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ControlType",
        "file_name": "Access.BoundObjectFrame.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.DblClick",
        "file_name": "Access.BoundObjectFrame.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.DisplayType",
        "file_name": "Access.BoundObjectFrame.DisplayType.md",
        "kind": "property",
        "main": "Use the **DisplayType** property to specify whether Microsoft Access displays an OLE object's content or an icon. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayType",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.DisplayWhen",
        "file_name": "Access.BoundObjectFrame.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Enabled",
        "file_name": "Access.BoundObjectFrame.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Enter",
        "file_name": "Access.BoundObjectFrame.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.EventProcPrefix",
        "file_name": "Access.BoundObjectFrame.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Exit",
        "file_name": "Access.BoundObjectFrame.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GotFocus",
        "file_name": "Access.BoundObjectFrame.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineColor",
        "file_name": "Access.BoundObjectFrame.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified object frame. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineShade",
        "file_name": "Access.BoundObjectFrame.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.boundobjectframe.gridlinecolor.md)** property of the specified object. Read/write **Single**. \n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineStyleBottom",
        "file_name": "Access.BoundObjectFrame.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineStyleLeft",
        "file_name": "Access.BoundObjectFrame.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineStyleRight",
        "file_name": "Access.BoundObjectFrame.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineStyleTop",
        "file_name": "Access.BoundObjectFrame.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineThemeColorIndex",
        "file_name": "Access.BoundObjectFrame.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.boundobjectframe.gridlinecolor.md)** property of the specified object. Read/write **Long**. \n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineTint",
        "file_name": "Access.BoundObjectFrame.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.boundobjectframe.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.boundobjectframe.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineWidthBottom",
        "file_name": "Access.BoundObjectFrame.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineWidthLeft",
        "file_name": "Access.BoundObjectFrame.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineWidthRight",
        "file_name": "Access.BoundObjectFrame.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.GridlineWidthTop",
        "file_name": "Access.BoundObjectFrame.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Height",
        "file_name": "Access.BoundObjectFrame.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.HelpContextId",
        "file_name": "Access.BoundObjectFrame.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.HorizontalAnchor",
        "file_name": "Access.BoundObjectFrame.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the object frame is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.InSelection",
        "file_name": "Access.BoundObjectFrame.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.IsVisible",
        "file_name": "Access.BoundObjectFrame.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.KeyDown",
        "file_name": "Access.BoundObjectFrame.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.KeyPress",
        "file_name": "Access.BoundObjectFrame.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.KeyUp",
        "file_name": "Access.BoundObjectFrame.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.LabelAlign",
        "file_name": "Access.BoundObjectFrame.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.LabelX",
        "file_name": "Access.BoundObjectFrame.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.LabelY",
        "file_name": "Access.BoundObjectFrame.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Layout",
        "file_name": "Access.BoundObjectFrame.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified object frame. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.LayoutID",
        "file_name": "Access.BoundObjectFrame.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified object frame. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Left",
        "file_name": "Access.BoundObjectFrame.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.LeftPadding",
        "file_name": "Access.BoundObjectFrame.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the object frame and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Locked",
        "file_name": "Access.BoundObjectFrame.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.LostFocus",
        "file_name": "Access.BoundObjectFrame.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "Updated"
        ],
        "file_name": "Access.BoundObjectFrame.md",
        "kind": "object",
        "main": "A bound object frame object displays a picture, chart, or any OLE object stored in a table in a Microsoft Access database. For example, if you store pictures of your employees in a table in Microsoft Access, you can use a bound object frame to display these pictures on a form or report. \n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "Action",
            "AddColon",
            "AfterUpdate",
            "Application",
            "AutoActivate",
            "AutoLabel",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BeforeUpdate",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Class",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DisplayType",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Locked",
            "Name",
            "Object",
            "ObjectPalette",
            "ObjectVerbs",
            "ObjectVerbsCount",
            "OldBorderStyle",
            "OldValue",
            "OLEType",
            "OLETypeAllowed",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnUpdated",
            "Parent",
            "Properties",
            "RightPadding",
            "Scaling",
            "Section",
            "ShortcutMenuBar",
            "SizeMode",
            "SourceDoc",
            "SourceItem",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "UpdateOptions",
            "Value",
            "VarOleObject",
            "Verb",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.MouseDown",
        "file_name": "Access.BoundObjectFrame.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.MouseMove",
        "file_name": "Access.BoundObjectFrame.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.MouseUp",
        "file_name": "Access.BoundObjectFrame.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Move",
        "file_name": "Access.BoundObjectFrame.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.BoundObjectFrame.Name",
        "file_name": "Access.BoundObjectFrame.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Object",
        "file_name": "Access.BoundObjectFrame.Object.md",
        "kind": "property",
        "main": "Use the **Object** property in Visual Basic to return a reference to the ActiveX object that is associated with a linked or embedded OLE object in a control. By using this reference, you can access the properties or invoke the methods of the OLE object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ObjectPalette",
        "file_name": "Access.BoundObjectFrame.ObjectPalette.md",
        "kind": "property",
        "main": "The **ObjectPalette** property specifies the palette in the application used to create an OLE object. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectPalette",
            "Variant"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ObjectVerbs",
        "file_name": "Access.BoundObjectFrame.ObjectVerbs.md",
        "kind": "property",
        "main": "Use the **ObjectVerbs** property in Visual Basic to determine the list of verbs that an OLE object supports. Read-only **String**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "ObjectVerbs",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ObjectVerbsCount",
        "file_name": "Access.BoundObjectFrame.ObjectVerbsCount.md",
        "kind": "property",
        "main": "Use the **ObjectVerbsCount** property in Visual Basic to determine the number of verbs supported by an OLE object. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectVerbsCount",
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OldBorderStyle",
        "file_name": "Access.BoundObjectFrame.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OldValue",
        "file_name": "Access.BoundObjectFrame.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OLEType",
        "file_name": "Access.BoundObjectFrame.OLEType.md",
        "kind": "property",
        "main": "Use the **OLEType** property to determine if a control contains an OLE object, and if so, whether the object is linked or embedded. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "OLEType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OLETypeAllowed",
        "file_name": "Access.BoundObjectFrame.OLETypeAllowed.md",
        "kind": "property",
        "main": "Use the **OLETypeAllowed** property to specify the type of OLE object that a control can contain. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "OLETypeAllowed",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnClick",
        "file_name": "Access.BoundObjectFrame.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnDblClick",
        "file_name": "Access.BoundObjectFrame.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnEnter",
        "file_name": "Access.BoundObjectFrame.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of the specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnExit",
        "file_name": "Access.BoundObjectFrame.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of the specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnGotFocus",
        "file_name": "Access.BoundObjectFrame.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnKeyDown",
        "file_name": "Access.BoundObjectFrame.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnKeyPress",
        "file_name": "Access.BoundObjectFrame.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnKeyUp",
        "file_name": "Access.BoundObjectFrame.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnLostFocus",
        "file_name": "Access.BoundObjectFrame.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnMouseDown",
        "file_name": "Access.BoundObjectFrame.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnMouseMove",
        "file_name": "Access.BoundObjectFrame.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnMouseUp",
        "file_name": "Access.BoundObjectFrame.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.OnUpdated",
        "file_name": "Access.BoundObjectFrame.OnUpdated.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Updated** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Parent",
        "file_name": "Access.BoundObjectFrame.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.BoundObjectFrame.Properties",
        "file_name": "Access.BoundObjectFrame.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Requery",
        "file_name": "Access.BoundObjectFrame.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.RightPadding",
        "file_name": "Access.BoundObjectFrame.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the object frame and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Scaling",
        "file_name": "Access.BoundObjectFrame.Scaling.md",
        "kind": "property",
        "main": "Controls how the contents of an object frame control are displayed. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Section",
        "file_name": "Access.BoundObjectFrame.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.SetFocus",
        "file_name": "Access.BoundObjectFrame.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.ShortcutMenuBar",
        "file_name": "Access.BoundObjectFrame.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.SizeMode",
        "file_name": "Access.BoundObjectFrame.SizeMode.md",
        "kind": "property",
        "main": "Use the **SizeMode** property to specify how to size a picture or other object in a bound object frame, an unbound object frame, or an image control.\n",
        "Parameters": [],
        "Return_value": [
            "SizeMode"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.SizeToFit",
        "file_name": "Access.BoundObjectFrame.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.SourceDoc",
        "file_name": "Access.BoundObjectFrame.SourceDoc.md",
        "kind": "property",
        "main": "Use the **SourceDoc** property to specify the file to create a link to or to embed when you create a linked object or embedded object by using the **Action** property in Visual Basic. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "SourceDoc",
            "Action",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.SourceItem",
        "file_name": "Access.BoundObjectFrame.SourceItem.md",
        "kind": "property",
        "main": "Use the **SourceItem** property to specify the data within a file to be linked when you create a linked OLE object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "SourceItem",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.SpecialEffect",
        "file_name": "Access.BoundObjectFrame.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.StatusBarText",
        "file_name": "Access.BoundObjectFrame.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.TabIndex",
        "file_name": "Access.BoundObjectFrame.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.TabStop",
        "file_name": "Access.BoundObjectFrame.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Tag",
        "file_name": "Access.BoundObjectFrame.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Top",
        "file_name": "Access.BoundObjectFrame.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.TopPadding",
        "file_name": "Access.BoundObjectFrame.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the object frame and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Updated",
        "file_name": "Access.BoundObjectFrame.Updated.md",
        "kind": "event",
        "main": "The **Updated** event occurs when an OLE object's data has been modified.\n",
        "Parameters": [
            "Code"
        ],
        "Return_value": [
            "Updated"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.UpdateOptions",
        "file_name": "Access.BoundObjectFrame.UpdateOptions.md",
        "kind": "property",
        "main": "Use the **UpdateOptions** property to specify how a linkedOLE object is updated. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "UpdateOptions",
            "Integer"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Value",
        "file_name": "Access.BoundObjectFrame.Value.md",
        "kind": "property",
        "main": "Gets or sets the value of the field that the control is bound to. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.VarOleObject",
        "file_name": "Access.BoundObjectFrame.VarOleObject.md",
        "kind": "property",
        "main": "Gets a pointer to an **IOLEObject** that represents the memory address of an OLE object. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "IOLEObject",
            "Variant"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Verb",
        "file_name": "Access.BoundObjectFrame.Verb.md",
        "kind": "property",
        "main": "Use the **Verb** property to specify the operation to perform when an OLE object is activated, which is permitted when the control's **Action** property is set to **acOLEActivate**. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Verb",
            "Action",
            "acOLEActivate",
            "Long"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.VerticalAnchor",
        "file_name": "Access.BoundObjectFrame.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified object frame is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Visible",
        "file_name": "Access.BoundObjectFrame.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.BoundObjectFrame.Width",
        "file_name": "Access.BoundObjectFrame.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Chart.CategoryAxisFontColor",
        "file_name": "Access.Chart.CategoryAxisFontColor.md",
        "kind": "property",
        "main": "Returns or sets the font color used by the category axis. Read/write **Long**.\nUse a **[system color constant](../language/reference/user-interface-help/system-color-constants.md)** or the RGB function to set a color programmatically as shown in the following example. You can also browse and select a color from the Design view palette.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Chart.CategoryAxisFontSize",
        "file_name": "Access.Chart.CategoryAxisFontSize.md",
        "kind": "property",
        "main": "Returns or sets the font size used by the category axis. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Chart.CategoryAxisTitle",
        "file_name": "Access.Chart.CategoryAxisTitle.md",
        "kind": "property",
        "main": "Returns or sets the title for the category axis. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.ChartAxis",
        "file_name": "Access.Chart.ChartAxis.md",
        "kind": "property",
        "main": "Returns or sets the semicolon-separated field name(s) that are used by the chart axis. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.ChartAxisCollection",
        "file_name": "Access.Chart.ChartAxisCollection.md",
        "kind": "property",
        "main": "A collection of all the **[ChartAxis](Access.ChartAxis.md)** objects in the specified chart.\n",
        "Parameters": [],
        "Return_value": [
            "Access.ChartAxis.md"
        ]
    },
    {
        "api_name": "Access.Chart.ChartLegend",
        "file_name": "Access.Chart.ChartLegend.md",
        "kind": "property",
        "main": "Returns or sets the field name that is used by the chart legend. Read/write **String**.\nMultiple fields are not supported.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.ChartSeriesCollection",
        "file_name": "Access.Chart.ChartSeriesCollection.md",
        "kind": "property",
        "main": "A collection of all the **[ChartSeries](Access.ChartSeries.md)** objects in the specified chart.\n",
        "Parameters": [],
        "Return_value": [
            "Access.ChartSeries.md"
        ]
    },
    {
        "api_name": "Access.Chart.ChartSubtitle",
        "file_name": "Access.Chart.ChartSubtitle.md",
        "kind": "property",
        "main": "Returns or sets the subtitle for the specified chart. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.ChartSubtitleFontColor",
        "file_name": "Access.Chart.ChartSubtitleFontColor.md",
        "kind": "property",
        "main": "Returns or sets the font color used by the chart subtitle. Read/write **Long**.\nUse a **[system color constant](../language/reference/user-interface-help/system-color-constants.md)** or the RGB function to set a color programmatically as shown in the example. You can also browse and select a color from the Design view palette.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Chart.ChartSubtitleFontSize",
        "file_name": "Access.Chart.ChartSubtitleFontSize.md",
        "kind": "property",
        "main": "Returns or sets the font size used by the chart subtitle. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Chart.Title",
        "file_name": "Access.Chart.ChartTitle.md",
        "kind": "property",
        "main": "Returns or sets the title for the specified chart. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.ChartTitleFontColor",
        "file_name": "Access.Chart.ChartTitleFontColor.md",
        "kind": "property",
        "main": "Returns or sets the font color used by the chart subtitle. Read/write **Long**.\nUse a **[system color constant](../language/reference/user-interface-help/system-color-constants.md)** or the RGB function to set a color programmatically as shown in the example. You can also browse and select a color from the Design view palette.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Chart.ChartTitleFontName",
        "file_name": "Access.Chart.ChartTitleFontName.md",
        "kind": "property",
        "main": "Returns or sets the name of the font used by the chart title. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.ChartTitleFontSize",
        "file_name": "Access.Chart.ChartTitleFontSize.md",
        "kind": "property",
        "main": "Returns or sets the font size used by the chart title. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Chart.ChartType",
        "file_name": "Access.Chart.ChartType.md",
        "kind": "property",
        "main": "Returns or sets the chart type. Read/write **[AcChartType](Access.AcChartType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcChartType.md"
        ]
    },
    {
        "api_name": "Access.Chart.ChartValues",
        "file_name": "Access.Chart.ChartValues.md",
        "kind": "property",
        "main": "Returns or sets the semicolon-separated list of field(s) used to determine the data series plotted on the value axis. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.ChartValuesCollection",
        "file_name": "Access.Chart.ChartValuesCollection.md",
        "kind": "property",
        "main": "A collection of all the **[ChartValues](Access.ChartValues.md)** objects in the specified chart.\n",
        "Parameters": [],
        "Return_value": [
            "Access.ChartValues.md"
        ]
    },
    {
        "api_name": "Access.Chart.HasAxisTitles",
        "file_name": "Access.Chart.HasAxisTitles.md",
        "kind": "property",
        "main": "**True** if the axis titles are visible for the specified chart. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Chart.HasLegend",
        "file_name": "Access.Chart.HasLegend.md",
        "kind": "property",
        "main": "**True** if the chart has a legend. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Chart.HasSubtitle",
        "file_name": "Access.Chart.HasSubtitle.md",
        "kind": "property",
        "main": "**True** if the subtitle is visible for the specified chart. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Chart.HasTitle",
        "file_name": "Access.Chart.HasTitle.md",
        "kind": "property",
        "main": "**True** if the title is visible for the specified chart. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Chart.LegendPosition",
        "file_name": "Access.Chart.LegendPosition.md",
        "kind": "property",
        "main": "Returns or sets the position of the legend for the specified chart. Read/write **[AcLegendPosition](Access.AcLegendPosition.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLegendPosition.md"
        ]
    },
    {
        "api_name": "Access.Chart.LegendTextFontColor",
        "file_name": "Access.Chart.LegendTextFontColor.md",
        "kind": "property",
        "main": "Returns or sets the font color used by the chart legend. Read/write **Long**.\nUse a **[system color constant](../language/reference/user-interface-help/system-color-constants.md)** or the RGB function to set a color programmatically as shown in the example. You can also browse and select a color from the Design view palette.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Chart.LegendTextFontSize",
        "file_name": "Access.Chart.LegendTextFontSize.md",
        "kind": "property",
        "main": "Returns or sets the font size used by the chart legend. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Chart",
        "Events": [],
        "file_name": "Access.Chart.md",
        "kind": "object",
        "main": "A customizable visualization of data that can be included in a report.\n> [!NOTE] \n> For events, methods, or properties that don't have a link, stay tuned. Content is coming soon.\n",
        "Methods": [],
        "Properties": [
            "CategoryAxisFontColor",
            "CategoryAxisFontSize",
            "CategoryAxisTitle",
            "ChartAxis",
            "ChartAxisCollection",
            "ChartLegend",
            "ChartSeriesCollection",
            "ChartSubtitle",
            "ChartSubtitleFontColor",
            "ChartSubtitleFontSize",
            "ChartTitle",
            "ChartTitleFontColor",
            "ChartTitleFontName",
            "ChartTitleFontSize",
            "ChartType",
            "ChartValues",
            "ChartValuesCollection",
            "HasAxisTitles",
            "HasLegend",
            "HasSubtitle",
            "HasTitle",
            "LegendPosition",
            "LegendTextFontColor",
            "LegendTextFontSize",
            "PrimaryValuesAxisDisplayUnits",
            "PrimaryValuesAxisFontColor",
            "PrimaryValuesAxisFontSize",
            "PrimaryValuesAxisFormat",
            "PrimaryValuesAxisMaximum",
            "PrimaryValuesAxisMinimum",
            "PrimaryValuesAxisRange",
            "PrimaryValuesAxisTitle",
            "RowSource",
            "SecondaryValuesAxisDisplayUnits",
            "SecondaryValuesAxisFontColor",
            "SecondaryValuesAxisFontSize",
            "SecondaryValuesAxisFormat",
            "SecondaryValuesAxisMaximum",
            "SecondaryValuesAxisMinimum",
            "SecondaryValuesAxisRange",
            "SecondaryValuesAxisTitle",
            "TransformedRowSource"
        ]
    },
    {
        "api_name": "Access.Chart.PrimaryValuesAxisDisplayUnits",
        "file_name": "Access.Chart.PrimaryValuesAxisDisplayUnits.md",
        "kind": "property",
        "main": "Returns or sets the unit of measurement applied to the primary values axis. Read/write **[AcAxisUnits](Access.AcAxisUnits.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcAxisUnits.md"
        ]
    },
    {
        "api_name": "Access.Chart.PrimaryValuesAxisFontColor",
        "file_name": "Access.Chart.PrimaryValuesAxisFontColor.md",
        "kind": "property",
        "main": "Returns or sets the font color used by the primary values axis. Read/write **Long**.\nUse a **[system color constant](../language/reference/user-interface-help/system-color-constants.md)** or the RGB function to set a color programmatically as shown in the example. You can also browse and select a color from the Design view palette.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Chart.PrimaryValuesAxisFontSize",
        "file_name": "Access.Chart.PrimaryValuesAxisFontSize.md",
        "kind": "property",
        "main": "Returns or sets the font size used by the primary values axis. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Chart.PrimaryValuesAxisFormat",
        "file_name": "Access.Chart.PrimaryValuesAxisFormat.md",
        "kind": "property",
        "main": "Returns or sets the format of the values on the primary values axis. Read/write **String**.\nUse a [predefined or custom format](Access.format.propertynumber.and.currency.md).\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.PrimaryValuesAxisMaximum",
        "file_name": "Access.Chart.PrimaryValuesAxisMaximum.md",
        "kind": "property",
        "main": "Returns or sets the maximum value that can be represented on the primary values axis. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "Single"
        ]
    },
    {
        "api_name": "Access.Chart.PrimaryValuesAxisMinimum",
        "file_name": "Access.Chart.PrimaryValuesAxisMinimum.md",
        "kind": "property",
        "main": "Returns or sets the minimum value that can be represented on the primary values axis. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "Single"
        ]
    },
    {
        "api_name": "Access.Chart.PrimaryValuesAxisRange",
        "file_name": "Access.Chart.PrimaryValuesAxisRange.md",
        "kind": "property",
        "main": "Returns or sets the behavior for representing minimum and maximum values on the primary values axis. Read/write **[AcAxisRange](Access.AcAxisRange.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcAxisRange.md"
        ]
    },
    {
        "api_name": "Access.Chart.CategoryAxisTitle",
        "file_name": "Access.Chart.PrimaryValuesAxisTitle.md",
        "kind": "property",
        "main": "Returns or sets the title for the primary values axis. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.RowSource",
        "file_name": "Access.Chart.RowSource.md",
        "kind": "property",
        "main": "Returns or sets the name of the table/query that supplies data for the chart. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.SecondaryValuesAxisDisplayUnits",
        "file_name": "Access.Chart.SecondaryValuesAxisDisplayUnits.md",
        "kind": "property",
        "main": "Returns or sets the unit of measurement applied to the secondary values axis. Read/write **[AcAxisUnits](Access.AcAxisUnits.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcAxisUnits.md"
        ]
    },
    {
        "api_name": "Access.Chart.SecondaryValuesAxisFontColor",
        "file_name": "Access.Chart.SecondaryValuesAxisFontColor.md",
        "kind": "property",
        "main": "Returns or sets the font color used by the secondary values axis. Read/write **Long**.\nUse a **[system color constant](../language/reference/user-interface-help/system-color-constants.md)** or the RGB function to set a color programmatically as shown in the example. You can also browse and select a color from the Design view palette.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Chart.SecondaryValuesAxisFontSize",
        "file_name": "Access.Chart.SecondaryValuesAxisFontSize.md",
        "kind": "property",
        "main": "Returns or sets the font size used by the secondary values axis. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Chart.SecondaryValuesAxisFormat",
        "file_name": "Access.Chart.SecondaryValuesAxisFormat.md",
        "kind": "property",
        "main": "Returns or sets the format of the values on the secondary values axis. Read/write **String**.\nUse a [predefined or custom format](Access.format.propertynumber.and.currency.md).\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.SecondaryValuesAxisMaximum",
        "file_name": "Access.Chart.SecondaryValuesAxisMaximum.md",
        "kind": "property",
        "main": "Returns or sets the maximum value that can be represented on the secondary values axis. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "Single"
        ]
    },
    {
        "api_name": "Access.Chart.SecondaryValuesAxisMinimum",
        "file_name": "Access.Chart.SecondaryValuesAxisMinimum.md",
        "kind": "property",
        "main": "Returns or sets the minimum value that can be represented on the secondary values axis. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "Single"
        ]
    },
    {
        "api_name": "Access.Chart.SecondaryValuesAxisRange",
        "file_name": "Access.Chart.SecondaryValuesAxisRange.md",
        "kind": "property",
        "main": "Returns or sets the behavior for representing minimum and maximum values on the secondary values axis. Read/write **[AcAxisRange](Access.AcAxisRange.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcAxisRange.md"
        ]
    },
    {
        "api_name": "Access.Chart.SecondaryValuesAxisTitle",
        "file_name": "Access.Chart.SecondaryValuesAxisTitle.md",
        "kind": "property",
        "main": "Returns or sets the title for the secondary values axis. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Chart.TransformedRowSource",
        "file_name": "Access.Chart.TransformedRowSource.md",
        "kind": "property",
        "main": "Returns the auto-generated SQL string that is used to support aggregation, pivoting, and ordering of chart data. Read-only **String**.\nThis string is generated from a combination of the **[RowSource](Access.Chart.RowSource.md)** property and selected axis fields. \n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Chart.RowSource.md"
        ]
    },
    {
        "api_name": "Access.ChartAxis.GroupType",
        "file_name": "Access.ChartAxis.GroupType.md",
        "kind": "property",
        "main": "Returns or sets the type of grouping applied to an axis field when its type is a date. Read/write **[AcDateGroupType](Access.AcDateGroupType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcDateGroupType.md"
        ]
    },
    {
        "api_name": "Access.ChartAxis",
        "Events": [],
        "file_name": "Access.ChartAxis.md",
        "kind": "object",
        "main": "Represents a field whose values will be included in the category axis of a chart.\n",
        "Methods": [],
        "Properties": [
            "GroupType",
            "Name"
        ]
    },
    {
        "api_name": "Access.ChartAxis.Name",
        "file_name": "Access.ChartAxis.name.md",
        "kind": "property",
        "main": "Returns the name of a **ChartAxis** instance based on its associated field. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ChartAxis",
            "String"
        ]
    },
    {
        "api_name": "Access.ChartAxisCollection",
        "Events": [],
        "file_name": "Access.ChartAxisCollection.md",
        "kind": "object",
        "main": "A collection of all the **[ChartAxis](Access.ChartAxis.md)** objects in the specified chart.\n",
        "Methods": [],
        "Properties": []
    },
    {
        "api_name": "Access.ChartSeries.BorderColor",
        "file_name": "Access.ChartSeries.BorderColor.md",
        "kind": "property",
        "main": "Returns or sets the border color of a series visualization. Read/write **String**.\nUse a **[system color constant](../language/reference/user-interface-help/system-color-constants.md)** or the RGB function as shown in the example.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ChartSeries.ComboChartType",
        "file_name": "Access.ChartSeries.ComboChartType.md",
        "kind": "property",
        "main": "Returns or sets the chart type for the specified series. Read/write **[AcChartType](Access.AcChartType.md)**.\nThis setting is only applicable when the **[ChartType](Access.Chart.ChartType.md)** of the parent **[Chart](Access.Chart.md)** object is set to **acChartCombo**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcChartType.md",
            "Access.Chart.ChartType.md",
            "Access.Chart.md",
            "acChartCombo"
        ]
    },
    {
        "api_name": "Access.ChartSeries.DashType",
        "file_name": "Access.ChartSeries.DashType.md",
        "kind": "property",
        "main": "Returns or sets the line dash style of a series when the effective **[ChartType](Access.Chart.ChartType.md)** is **acChartLine**, **acChartLineStacked**, or **acChartLineStacked100**. Read/write **[AcDashType](Access.AcDashType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Chart.ChartType.md",
            "acChartLine",
            "acChartLineStacked",
            "acChartLineStacked100",
            "Access.AcDashType.md"
        ]
    },
    {
        "api_name": "Access.ChartSeries.DisplayDataLabel",
        "file_name": "Access.ChartSeries.DisplayDataLabel.md",
        "kind": "property",
        "main": "**True** if the data for a series is displayed in a label in addition to chart visualizations. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ChartSeries.DisplayName",
        "file_name": "Access.ChartSeries.DisplayName.md",
        "kind": "property",
        "main": "Returns or sets the legend display name of a series. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ChartSeries.FillColor",
        "file_name": "Access.ChartSeries.FillColor.md",
        "kind": "property",
        "main": "Returns or sets the fill color of a series visualization. Read/write **String**.\nUse a **[system color constant](../language/reference/user-interface-help/system-color-constants.md)** or the RGB function as shown in the example.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ChartSeries.LineWeight",
        "file_name": "Access.ChartSeries.LineWeight.md",
        "kind": "property",
        "main": "Returns or sets the line weight (thickness) for a series when its effective chart type is line-based. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ChartSeries.MarkerType",
        "file_name": "Access.ChartSeries.MarkerType.md",
        "kind": "property",
        "main": "Returns or sets the marker shape to use for data points when the effective chart type of a series is line-based. Read/write **[AcMarkerType](Access.AcMarkerType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcMarkerType.md"
        ]
    },
    {
        "api_name": "Access.ChartSeries",
        "Events": [],
        "file_name": "Access.ChartSeries.md",
        "kind": "object",
        "main": "Represents a series of values in the specified chart.\n",
        "Methods": [],
        "Properties": [
            "BorderColor",
            "ComboChartType",
            "DashType",
            "DisplayDataLabel",
            "DisplayName",
            "FillColor",
            "LineWeight",
            "MarkerType",
            "MissingDataPolicy",
            "Name",
            "PlotSeriesOn",
            "TrendlineName",
            "TrendlineOptions"
        ]
    },
    {
        "api_name": "Access.ChartSeries.MissingDataPolicy",
        "file_name": "Access.ChartSeries.MissingDataPolicy.md",
        "kind": "property",
        "main": "Returns or sets the plotting strategy of a series when its chart type is **Line** and values are missing. Read/write **[AcMissingDataPolicy](Access.AcMissingDataPolicy.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Line",
            "Access.AcMissingDataPolicy.md"
        ]
    },
    {
        "api_name": "Access.ChartSeries.Name",
        "file_name": "Access.ChartSeries.Name.md",
        "kind": "property",
        "main": "Returns the name of a **ChartSeries** instance based on the value of its associated field. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ChartSeries",
            "String"
        ]
    },
    {
        "api_name": "Access.ChartSeries.PlotSeriesOn",
        "file_name": "Access.ChartSeries.PlotSeriesOn.md",
        "kind": "property",
        "main": "Returns or sets the axis to use for plotting the values of a series. Read/write **[AcValueAxis](Access.AcValueAxis.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcValueAxis.md"
        ]
    },
    {
        "api_name": "Access.ChartSeries.TrendlineName",
        "file_name": "Access.ChartSeries.TrendlineName.md",
        "kind": "property",
        "main": "Returns or sets the name of the series trendline if the trendline is visible. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ChartSeries.TrendlineOptions",
        "file_name": "Access.ChartSeries.TrendlineOptions.md",
        "kind": "property",
        "main": "Returns or sets the type of trendline to render for a series. Read/write **[AcTrendlineOptions](Access.AcTrendlineOptions.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcTrendlineOptions.md"
        ]
    },
    {
        "api_name": "Access.ChartSeriesCollection",
        "Events": [],
        "file_name": "Access.ChartSeriesCollection.md",
        "kind": "object",
        "main": "A collection of all the **[ChartSeries](Access.ChartSeries.md)** objects in the specified chart.\n",
        "Methods": [],
        "Properties": []
    },
    {
        "api_name": "Access.ChartValues.AggregateType",
        "file_name": "Access.ChartValues.AggregateType.md",
        "kind": "property",
        "main": "Returns or sets the behavior for aggregating values. Read/write **[AcAggregateType](Access.AcAggregateType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcAggregateType.md"
        ]
    },
    {
        "api_name": "Access.ChartValues",
        "Events": [],
        "file_name": "Access.ChartValues.md",
        "kind": "object",
        "main": "Represents a field whose values will be plotted in the value (Y) axis of a chart.\n",
        "Methods": [],
        "Properties": [
            "AggregateType",
            "Name"
        ]
    },
    {
        "api_name": "Access.ChartValues.Name",
        "file_name": "Access.ChartValues.Name.md",
        "kind": "property",
        "main": "Returns the name of a **ChartValues** instance based on its associated field. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ChartValues",
            "String"
        ]
    },
    {
        "api_name": "Access.ChartValuesCollection",
        "Events": [],
        "file_name": "Access.ChartValuesCollection.md",
        "kind": "object",
        "main": "A collection of all the **[ChartValues](Access.ChartValues.md)** objects in the specified chart.\n",
        "Methods": [],
        "Properties": []
    },
    {
        "api_name": "Access.CheckBox.AddColon",
        "file_name": "Access.CheckBox.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.AfterUpdate",
        "file_name": "Access.CheckBox.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.CheckBox.AfterUpdate",
        "file_name": "Access.CheckBox.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.checkbox.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.Application",
        "file_name": "Access.CheckBox.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.CheckBox.AutoLabel",
        "file_name": "Access.CheckBox.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.BeforeUpdate",
        "file_name": "Access.CheckBox.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.CheckBox.BeforeUpdate",
        "file_name": "Access.CheckBox.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.CheckBox.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.BorderColor",
        "file_name": "Access.CheckBox.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**. \n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CheckBox.BorderShade",
        "file_name": "Access.CheckBox.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **[BorderColor](access.checkbox.bordercolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.checkbox.bordercolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.CheckBox.BorderStyle",
        "file_name": "Access.CheckBox.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.BorderThemeColorIndex",
        "file_name": "Access.CheckBox.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **[BorderColor](access.checkbox.bordercolor.md)** property of the specified object. Read/write **Long**. \n",
        "Parameters": [],
        "Return_value": [
            "access.checkbox.bordercolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.CheckBox.BorderTint",
        "file_name": "Access.CheckBox.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **[BorderColor](access.checkbox.bordercolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.checkbox.bordercolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.CheckBox.BorderWidth",
        "file_name": "Access.CheckBox.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.BottomPadding",
        "file_name": "Access.CheckBox.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the check box and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.Click",
        "file_name": "Access.CheckBox.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.CheckBox.ColumnHidden",
        "file_name": "Access.CheckBox.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.ColumnOrder",
        "file_name": "Access.CheckBox.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.ColumnWidth",
        "file_name": "Access.CheckBox.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.Controls",
        "file_name": "Access.CheckBox.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.CheckBox.ControlSource",
        "file_name": "Access.CheckBox.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.ControlTipText",
        "file_name": "Access.CheckBox.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.ControlType",
        "file_name": "Access.CheckBox.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.DblClick",
        "file_name": "Access.CheckBox.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.CheckBox.DefaultValue",
        "file_name": "Access.CheckBox.DefaultValue.md",
        "kind": "property",
        "main": "Specifies a value that is automatically entered in a field when a new record is created. For example, in an **Addresses** table, you can set the default value for the **City** field to New York. When users add a record to the table, they can either accept this value or enter the name of a different city. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Addresses",
            "City",
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.DisplayWhen",
        "file_name": "Access.CheckBox.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.Enabled",
        "file_name": "Access.CheckBox.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.Enter",
        "file_name": "Access.CheckBox.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.CheckBox.EventProcPrefix",
        "file_name": "Access.CheckBox.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.Exit",
        "file_name": "Access.CheckBox.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.CheckBox.GotFocus",
        "file_name": "Access.CheckBox.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineColor",
        "file_name": "Access.CheckBox.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified check box. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineShade",
        "file_name": "Access.CheckBox.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.CheckBox.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.CheckBox.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineStyleBottom",
        "file_name": "Access.CheckBox.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified check box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineStyleLeft",
        "file_name": "Access.CheckBox.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified check box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineStyleRight",
        "file_name": "Access.CheckBox.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified check box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineStyleTop",
        "file_name": "Access.CheckBox.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified check box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineThemeColorIndex",
        "file_name": "Access.CheckBox.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.CheckBox.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.CheckBox.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineTint",
        "file_name": "Access.CheckBox.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.CheckBox.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.CheckBox.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineWidthBottom",
        "file_name": "Access.CheckBox.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified check box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineWidthLeft",
        "file_name": "Access.CheckBox.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified check box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineWidthRight",
        "file_name": "Access.CheckBox.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified check box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.GridlineWidthTop",
        "file_name": "Access.CheckBox.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified check box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.Height",
        "file_name": "Access.CheckBox.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.HelpContextId",
        "file_name": "Access.CheckBox.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.CheckBox.HideDuplicates",
        "file_name": "Access.CheckBox.HideDuplicates.md",
        "kind": "property",
        "main": "Use the **HideDuplicates** property to hide a control on a report when its value is the same as in the preceding record. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HideDuplicates",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.HorizontalAnchor",
        "file_name": "Access.CheckBox.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the check box is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.CheckBox.InSelection",
        "file_name": "Access.CheckBox.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.IsVisible",
        "file_name": "Access.CheckBox.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.KeyDown",
        "file_name": "Access.CheckBox.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.CheckBox.KeyPress",
        "file_name": "Access.CheckBox.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.CheckBox.KeyUp",
        "file_name": "Access.CheckBox.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.CheckBox.LabelAlign",
        "file_name": "Access.CheckBox.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.LabelX",
        "file_name": "Access.CheckBox.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.LabelY",
        "file_name": "Access.CheckBox.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.Layout",
        "file_name": "Access.CheckBox.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified check box. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.CheckBox.LayoutID",
        "file_name": "Access.CheckBox.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified check box. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CheckBox.Left",
        "file_name": "Access.CheckBox.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.LeftPadding",
        "file_name": "Access.CheckBox.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the check box and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.Locked",
        "file_name": "Access.CheckBox.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.LostFocus",
        "file_name": "Access.CheckBox.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.CheckBox",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.CheckBox.md",
        "kind": "object",
        "main": "This object corresponds to a check box on a form or report. This check box is a stand-alone control that displays a Yes/No value from an underlying record source.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "AddColon",
            "AfterUpdate",
            "Application",
            "AutoLabel",
            "BeforeUpdate",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DefaultValue",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HideDuplicates",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Locked",
            "Name",
            "OldBorderStyle",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OptionValue",
            "Parent",
            "Properties",
            "ReadingOrder",
            "RightPadding",
            "Section",
            "ShortcutMenuBar",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "TripleState",
            "ValidationRule",
            "ValidationText",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.CheckBox.MouseDown",
        "file_name": "Access.CheckBox.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.CheckBox.MouseMove",
        "file_name": "Access.CheckBox.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.CheckBox.MouseUp",
        "file_name": "Access.CheckBox.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.CheckBox.Move",
        "file_name": "Access.CheckBox.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.CheckBox.Name",
        "file_name": "Access.CheckBox.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OldBorderStyle",
        "file_name": "Access.CheckBox.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.OldValue",
        "file_name": "Access.CheckBox.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnClick",
        "file_name": "Access.CheckBox.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnDblClick",
        "file_name": "Access.CheckBox.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnEnter",
        "file_name": "Access.CheckBox.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnExit",
        "file_name": "Access.CheckBox.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnGotFocus",
        "file_name": "Access.CheckBox.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnKeyDown",
        "file_name": "Access.CheckBox.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnKeyPress",
        "file_name": "Access.CheckBox.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnKeyUp",
        "file_name": "Access.CheckBox.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnLostFocus",
        "file_name": "Access.CheckBox.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnMouseDown",
        "file_name": "Access.CheckBox.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnMouseMove",
        "file_name": "Access.CheckBox.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OnMouseUp",
        "file_name": "Access.CheckBox.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.OptionValue",
        "file_name": "Access.CheckBox.OptionValue.md",
        "kind": "property",
        "main": "Each control in an option group has a numeric value that you can set with the **OptionValue** property. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "OptionValue",
            "Long"
        ]
    },
    {
        "api_name": "Access.CheckBox.Parent",
        "file_name": "Access.CheckBox.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.CheckBox.Properties",
        "file_name": "Access.CheckBox.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.CheckBox.ReadingOrder",
        "file_name": "Access.CheckBox.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.Requery",
        "file_name": "Access.CheckBox.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.CheckBox.RightPadding",
        "file_name": "Access.CheckBox.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the check box and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.Section",
        "file_name": "Access.CheckBox.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.SetFocus",
        "file_name": "Access.CheckBox.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.CheckBox.ShortcutMenuBar",
        "file_name": "Access.CheckBox.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.SizeToFit",
        "file_name": "Access.CheckBox.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.CheckBox.SpecialEffect",
        "file_name": "Access.CheckBox.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CheckBox.StatusBarText",
        "file_name": "Access.CheckBox.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.TabIndex",
        "file_name": "Access.CheckBox.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.TabStop",
        "file_name": "Access.CheckBox.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.Tag",
        "file_name": "Access.CheckBox.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.Top",
        "file_name": "Access.CheckBox.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.TopPadding",
        "file_name": "Access.CheckBox.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the check box and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CheckBox.TripleState",
        "file_name": "Access.CheckBox.TripleState.md",
        "kind": "property",
        "main": "Use the **TripleState** property to specify how the specified control displays **Null** values. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TripleState",
            "Null",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.Undo",
        "file_name": "Access.CheckBox.Undo.md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.CheckBox.ValidationRule",
        "file_name": "Access.CheckBox.ValidationRule.md",
        "kind": "property",
        "main": "Use the **ValidationRule** property to specify requirements for data entered into a record, field, or control. When data is entered that violates the **ValidationRule** setting, you can use the **ValidationText** property to specify the message to be displayed to the user. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationRule",
            "ValidationText",
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.ValidationText",
        "file_name": "Access.CheckBox.ValidationText.md",
        "kind": "property",
        "main": "Use the **ValidationText** property to specify a message to be displayed to the user when data is entered that violates a **ValidationRule** setting for a record, field, or control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationText",
            "ValidationRule",
            "String"
        ]
    },
    {
        "api_name": "Access.CheckBox.Value",
        "file_name": "Access.CheckBox.Value.md",
        "kind": "property",
        "main": "Determines or specifies whether the specified check box is selected. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.CheckBox.VerticalAnchor",
        "file_name": "Access.CheckBox.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified check box is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.CheckBox.Visible",
        "file_name": "Access.CheckBox.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CheckBox.Width",
        "file_name": "Access.CheckBox.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CodeData.AllDatabaseDiagrams",
        "file_name": "Access.CodeData.AllDatabaseDiagrams.md",
        "kind": "property",
        "main": "Use the **AllDatabaseDiagrams** property to reference the **[AllDatabaseDiagrams](Access.AllDatabaseDiagrams.md)** collection and its related properties. Read-only **AllDatabaseDiagrams** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllDatabaseDiagrams",
            "Access.AllDatabaseDiagrams.md"
        ]
    },
    {
        "api_name": "Access.CodeData.AllFunctions",
        "file_name": "Access.CodeData.AllFunctions.md",
        "kind": "property",
        "main": "Use the **AllFunctions** property to reference the **[AllFunctions](Access.AllFunctions.md)** collection and its related properties. Read-only **AllFunctions** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllFunctions",
            "Access.AllFunctions.md"
        ]
    },
    {
        "api_name": "Access.CodeData.AllQueries",
        "file_name": "Access.CodeData.AllQueries.md",
        "kind": "property",
        "main": "Use the **AllQueries** property to reference the **[AllQueries](Access.AllQueries.md)** collection and its related properties. Read-only **AllQueries** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllQueries",
            "Access.AllQueries.md"
        ]
    },
    {
        "api_name": "Access.CodeData.AllStoredProcedures",
        "file_name": "Access.CodeData.AllStoredProcedures.md",
        "kind": "property",
        "main": "Use the **AllStoredProcedures** property to reference the **[AllStoredProcedures](Access.AllStoredProcedures.md)** collection and its related properties. Read-only **AllStoredProcedures** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllStoredProcedures",
            "Access.AllStoredProcedures.md"
        ]
    },
    {
        "api_name": "Access.CodeData.AllTables",
        "file_name": "Access.CodeData.AllTables.md",
        "kind": "property",
        "main": "Use the **AllTables** property to reference the **[AllTables](Access.AllTables.md)** collection and its related properties. Read-only **AllTables** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllTables",
            "Access.AllTables.md"
        ]
    },
    {
        "api_name": "Access.CodeData.AllViews",
        "file_name": "Access.CodeData.AllViews.md",
        "kind": "property",
        "main": "Use the **AllViews** property to reference the **[AllViews](Access.AllViews.md)** collection and its related properties. Read-only **AllViews** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllViews",
            "Access.AllViews.md"
        ]
    },
    {
        "api_name": "Access.CodeData",
        "Events": [],
        "file_name": "Access.CodeData.md",
        "kind": "object",
        "main": "The **CodeData** object refers to objects stored within the code database by the source (server) application.\n",
        "Methods": [],
        "Properties": [
            "AllDatabaseDiagrams",
            "AllFunctions",
            "AllQueries",
            "AllStoredProcedures",
            "AllTables",
            "AllViews"
        ]
    },
    {
        "api_name": "Access.CodeProject.AccessConnection",
        "file_name": "Access.CodeProject.AccessConnection.md",
        "kind": "property",
        "main": "Use the **AccessConnection** property to return a reference to the current Microsoft ActiveX Data Objects (ADO) **Connection** object and its related properties. Read-only **Connection**.\n",
        "Parameters": [],
        "Return_value": [
            "AccessConnection"
        ]
    },
    {
        "api_name": "Access.CodeProject.AddSharedImage",
        "file_name": "Access.CodeProject.AddSharedImage.md",
        "kind": "method",
        "main": "Imports the specified image into the database and adds it to the **[SharedResources](Access.SharedResources.md)** collection.\n",
        "Parameters": [
            "SharedImageName",
            "FileName"
        ],
        "Return_value": [
            "Access.SharedResources.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.AllForms",
        "file_name": "Access.CodeProject.AllForms.md",
        "kind": "property",
        "main": "Use the **AllForms** property to reference the **[AllForms](Access.AllForms.md)** collection and its related properties. Read-only **AllForms** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllForms",
            "Access.AllForms.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.AllMacros",
        "file_name": "Access.CodeProject.AllMacros.md",
        "kind": "property",
        "main": "Use the **AllMacros** property to reference the **[AllMacros](Access.allmacros.md)** collection and its related properties. Read-only **AllMacros** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllMacros",
            "Access.allmacros.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.AllModules",
        "file_name": "Access.CodeProject.AllModules.md",
        "kind": "property",
        "main": "Use the **AllModules** property to reference the **[AllModules](Access.AllModules.md)** collection and its related properties. Read-only **AllModules** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllModules",
            "Access.AllModules.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.AllReports",
        "file_name": "Access.CodeProject.AllReports.md",
        "kind": "property",
        "main": "Use the **AllReports** property to reference the **[AllReports](Access.AllReports.md)** collection and its related properties. Read-only **AllReports** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllReports",
            "Access.AllReports.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.Application",
        "file_name": "Access.CodeProject.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.BaseConnectionString",
        "file_name": "Access.CodeProject.BaseConnectionString.md",
        "kind": "property",
        "main": "Use the **BaseConnectionString** property to return the base connection string for the specified object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "BaseConnectionString"
        ]
    },
    {
        "api_name": "Access.CodeProject.CloseConnection",
        "file_name": "Access.CodeProject.CloseConnection.md",
        "kind": "method",
        "main": "Use the **CloseConnection** method to close the current connection between the **CodeProject** object in a Microsoft Access project (.adp) or Access database and the database specified in the project's base connection string.\n",
        "Parameters": [],
        "Return_value": [
            "CloseConnection",
            "CodeProject"
        ]
    },
    {
        "api_name": "Access.CodeProject.Connection",
        "file_name": "Access.CodeProject.Connection.md",
        "kind": "property",
        "main": "Use the **Connection** property to return a reference to the current ActiveX Data Objects (ADO) **Connection** object and its related properties. Read-only **Connection**.\n",
        "Parameters": [],
        "Return_value": [
            "Connection"
        ]
    },
    {
        "api_name": "Access.CodeProject.FileFormat",
        "file_name": "Access.CodeProject.FileFormat.md",
        "kind": "property",
        "main": "Returns an **[AcFileFormat](Access.AcFileFormat.md)** constant indicating the Microsoft Access version format of the specified project. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcFileFormat.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.FullName",
        "file_name": "Access.CodeProject.FullName.md",
        "kind": "property",
        "main": "Sets or returns the full path (including the file name) of a specific object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CodeProject.ImportExportSpecifications",
        "file_name": "Access.CodeProject.ImportExportSpecifications.md",
        "kind": "property",
        "main": "Returns an **[ImportExportSpecifications](Access.ImportExportSpecifications.md)** collection that represents the collection of saved import or export operations for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.ImportExportSpecifications.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.IsConnected",
        "file_name": "Access.CodeProject.IsConnected.md",
        "kind": "property",
        "main": "Use the **IsConnected** property to determine if the **CodeProject** object is currently connected. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsConnected",
            "CodeProject",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CodeProject.IsTrusted",
        "file_name": "Access.CodeProject.IsTrusted.md",
        "kind": "property",
        "main": "Gets whether macros and Visual Basic for Applications (VBA) code have been enabled in the current project. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CodeProject.IsWeb",
        "file_name": "Access.CodeProject.IsWeb.md",
        "kind": "property",
        "main": "Gets whether the database is a web database. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CodeProject",
        "Events": [],
        "file_name": "Access.CodeProject.md",
        "kind": "object",
        "main": "The **CodeProject** object refers to the project for the code database of a Microsoft Access project (.adp) or Access database.\n",
        "Methods": [
            "AddSharedImage",
            "CloseConnection",
            "OpenConnection",
            "UpdateDependencyInfo"
        ],
        "Properties": [
            "AccessConnection",
            "AllForms",
            "AllMacros",
            "AllModules",
            "AllReports",
            "Application",
            "BaseConnectionString",
            "Connection",
            "FileFormat",
            "FullName",
            "ImportExportSpecifications",
            "IsConnected",
            "IsTrusted",
            "IsWeb",
            "Name",
            "Parent",
            "Path",
            "ProjectType",
            "Properties",
            "RemovePersonalInformation",
            "Resources",
            "WebSite",
            "IsSQLBackend"
        ]
    },
    {
        "api_name": "Access.CodeProject.Name",
        "file_name": "Access.CodeProject.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.CodeProject.OpenConnection",
        "file_name": "Access.CodeProject.OpenConnection.md",
        "kind": "method",
        "main": "Use the **OpenConnection** method to open an ADO connection to an existing Microsoft Access project (.adp) or Access database as the current Access project or database in the Microsoft Access window.\n",
        "Parameters": [
            "BaseConnectionString",
            "UserID",
            "Password"
        ],
        "Return_value": [
            "OpenConnection"
        ]
    },
    {
        "api_name": "Access.CodeProject.Parent",
        "file_name": "Access.CodeProject.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.CodeProject.Path",
        "file_name": "Access.CodeProject.Path.md",
        "kind": "property",
        "main": "Use the **Path** property to determine the location where data is stored for a Microsoft Access project (.adp) or Access database. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Path",
            "String"
        ]
    },
    {
        "api_name": "Access.CodeProject.ProjectType",
        "file_name": "Access.CodeProject.ProjectType.md",
        "kind": "property",
        "main": "Use the **ProjectType** property to determine the type of project that is currently open. Read-only **[AcProjectType](Access.AcProjectType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "ProjectType",
            "Access.AcProjectType.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.Properties",
        "file_name": "Access.CodeProject.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a **[CodeProject](Access.CodeProject.md)** object's **[AccessObjectProperties](Access.AccessObjectProperties.md)** collection. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.CodeProject.md",
            "Access.AccessObjectProperties.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.RemovePersonalInformation",
        "file_name": "Access.CodeProject.RemovePersonalInformation.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether personal information about the user is stored in the specified project. **True** if personal information is removed. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.CodeProject.Resources",
        "file_name": "Access.CodeProject.Resources.md",
        "kind": "property",
        "main": "Gets the **[SharedResources](Access.SharedResources.md)** collection for the specified object. Read-only **SharedResources**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.SharedResources.md"
        ]
    },
    {
        "api_name": "Access.CodeProject.UpdateDependencyInfo",
        "file_name": "Access.CodeProject.UpdateDependencyInfo.md",
        "kind": "method",
        "main": "Updates the dependency information for the database.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.CodeProject.WebSite",
        "file_name": "Access.CodeProject.WebSite.md",
        "kind": "property",
        "main": "Gets the Uniform Resource Locator (URL) of the website to which the database has been published. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.AddColon",
        "file_name": "Access.ComboBox.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.AddItem",
        "file_name": "Access.ComboBox.AddItem.md",
        "kind": "method",
        "main": "Adds a new item to the list of values displayed by the specified combo box control.\n",
        "Parameters": [
            "Item",
            "Index"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.AfterUpdate",
        "file_name": "Access.ComboBox.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.ComboBox.AfterUpdate",
        "file_name": "Access.ComboBox.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.combobox.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.AllowAutoCorrect",
        "file_name": "Access.ComboBox.AllowAutoCorrect.md",
        "kind": "property",
        "main": "Use the **AllowAutoCorrect** property to specify whether the specified control will automatically correct entries made by the user. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AllowAutoCorrect",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.AllowValueListEdits",
        "file_name": "Access.ComboBox.AllowValueListEdits.md",
        "kind": "property",
        "main": "Gets or sets whether the **Edit List Items** command is available when the user right-clicks a combo box. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.Application",
        "file_name": "Access.ComboBox.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.ComboBox.AutoExpand",
        "file_name": "Access.ComboBox.AutoExpand.md",
        "kind": "property",
        "main": "Use the **AutoExpand** property to specify whether Microsoft Access automatically fills the text box portion of a combo box with a value from the combo box list that matches the characters that you enter as you type in the combo box. This lets you quickly enter an existing value in a combo box without displaying the list box portion of the combo box. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AutoExpand",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.AutoLabel",
        "file_name": "Access.ComboBox.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.BackColor",
        "file_name": "Access.ComboBox.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.BackShade",
        "file_name": "Access.ComboBox.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ComboBox.BackStyle",
        "file_name": "Access.ComboBox.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.BackThemeColorIndex",
        "file_name": "Access.ComboBox.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.BackTint",
        "file_name": "Access.ComboBox.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ComboBox.BeforeUpdate",
        "file_name": "Access.ComboBox.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.ComboBox.BeforeUpdate",
        "file_name": "Access.ComboBox.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.ComboBox.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.BorderColor",
        "file_name": "Access.ComboBox.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.BorderShade",
        "file_name": "Access.ComboBox.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ComboBox.BorderStyle",
        "file_name": "Access.ComboBox.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.BorderThemeColorIndex",
        "file_name": "Access.ComboBox.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.BorderTint",
        "file_name": "Access.ComboBox.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ComboBox.BorderWidth",
        "file_name": "Access.ComboBox.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.BottomMargin",
        "file_name": "Access.ComboBox.BottomMargin.md",
        "kind": "property",
        "main": "Along with the **LeftMargin**, **RightMargin**, and **TopMargin** properties, specifies the location of information displayed within a combo box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LeftMargin",
            "RightMargin",
            "TopMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.BottomPadding",
        "file_name": "Access.ComboBox.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the combo box and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.BoundColumn",
        "file_name": "Access.ComboBox.BoundColumn.md",
        "kind": "property",
        "main": "When you make a selection from a combo box, the **BoundColumn** property tells Microsoft Access which column's values to use as the value of the control. If the control is bound to a field, the value in the column specified by the **BoundColumn** property is stored in the field named in the **ControlSource** property. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BoundColumn",
            "ControlSource",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.CanGrow",
        "file_name": "Access.ComboBox.CanGrow.md",
        "kind": "property",
        "main": "Gets or sets whether the specified control automatically adjusts vertically to print or preview all the data that the control contains. Read/write **Boolean**. \n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.CanShrink",
        "file_name": "Access.ComboBox.CanShrink.md",
        "kind": "property",
        "main": "Gets or sets whether the specified control automatically adjusts vertically to print or preview all the data that the control contains. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.Change",
        "file_name": "Access.ComboBox.Change.md",
        "kind": "event",
        "main": "The **Change** event occurs when the contents of the specified control change.\n",
        "Parameters": [],
        "Return_value": [
            "Change"
        ]
    },
    {
        "api_name": "Access.ComboBox.Click",
        "file_name": "Access.ComboBox.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.ComboBox.Column",
        "file_name": "Access.ComboBox.Column.md",
        "kind": "property",
        "main": "Use the **Column** property to refer to a specific column or column and row combination in a multiple-column combo box or list box. Read-only **Variant**.\n",
        "Parameters": [
            "Index",
            "Row"
        ],
        "Return_value": [
            "Column",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ComboBox.ColumnCount",
        "file_name": "Access.ComboBox.ColumnCount.md",
        "kind": "property",
        "main": "Use the **ColumnCount** property to specify the number of columns displayed in a list box or in the list box portion of a combo box, or sent to OLE objects in a chart control or unbound object frame. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnCount",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.ColumnHeads",
        "file_name": "Access.ComboBox.ColumnHeads.md",
        "kind": "property",
        "main": "Use the **ColumnHeads** property to display a single row of column headings for list boxes, combo boxes, and OLE objects that accept column headings. You can also use this property to create a label for each entry in a chart control. What is actually displayed as the first-row column heading depends on the object's **RowSourceType** property setting. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHeads",
            "RowSourceType",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.ColumnHidden",
        "file_name": "Access.ComboBox.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.ColumnOrder",
        "file_name": "Access.ComboBox.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.ColumnWidth",
        "file_name": "Access.ComboBox.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.ColumnWidths",
        "file_name": "Access.ComboBox.ColumnWidths.md",
        "kind": "property",
        "main": "Use the **ColumnWidths** property to specify the width of each column in a multiple-column combo box. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidths",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.Controls",
        "file_name": "Access.ComboBox.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.ComboBox.ControlSource",
        "file_name": "Access.ComboBox.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.ControlTipText",
        "file_name": "Access.ComboBox.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.ControlType",
        "file_name": "Access.ComboBox.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.DblClick",
        "file_name": "Access.ComboBox.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.ComboBox.DecimalPlaces",
        "file_name": "Access.ComboBox.DecimalPlaces.md",
        "kind": "property",
        "main": "Use the **DecimalPlaces** property to specify the number of decimal places that Microsoft Access uses to display numbers. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DecimalPlaces",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.DefaultValue",
        "file_name": "Access.ComboBox.DefaultValue.md",
        "kind": "property",
        "main": "Specifies a value that is automatically entered in a field when a new record is created. For example, in an **Addresses** table, you can set the default value for the **City** field to New York. When users add a record to the table, they can either accept this value or enter the name of a different city. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Addresses",
            "City",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.Dirty",
        "file_name": "Access.ComboBox.Dirty.md",
        "kind": "event",
        "main": "The **Dirty** event occurs when the contents of the specified control changes.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Dirty"
        ]
    },
    {
        "api_name": "Access.ComboBox.DisplayAsHyperlink",
        "file_name": "Access.ComboBox.DisplayAsHyperlink.md",
        "kind": "property",
        "main": "Gets or sets an **[AcDisplayAsHyperlink](Access.AcDisplayAsHyperlink.md)** constant that specifies whether to display the contents of the specified combo box as a hyperlink. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcDisplayAsHyperlink.md"
        ]
    },
    {
        "api_name": "Access.ComboBox.DisplayWhen",
        "file_name": "Access.ComboBox.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.Dropdown",
        "file_name": "Access.ComboBox.Dropdown.md",
        "kind": "method",
        "main": "Use the **Dropdown** method to force the list in the specified combo box to drop down.\n",
        "Parameters": [],
        "Return_value": [
            "Dropdown"
        ]
    },
    {
        "api_name": "Access.ComboBox.Enabled",
        "file_name": "Access.ComboBox.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.Enter",
        "file_name": "Access.ComboBox.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.ComboBox.EventProcPrefix",
        "file_name": "Access.ComboBox.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.Exit",
        "file_name": "Access.ComboBox.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.ComboBox.FontBold",
        "file_name": "Access.ComboBox.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.FontItalic",
        "file_name": "Access.ComboBox.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.FontName",
        "file_name": "Access.ComboBox.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.FontSize",
        "file_name": "Access.ComboBox.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.FontUnderline",
        "file_name": "Access.ComboBox.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.FontWeight",
        "file_name": "Access.ComboBox.FontWeight.md",
        "kind": "property",
        "main": "Use the **FontWeight** property to specify the line width that Windows uses to display and print characters in a control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.ForeColor",
        "file_name": "Access.ComboBox.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.ForeShade",
        "file_name": "Access.ComboBox.ForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ComboBox.ForeThemeColorIndex",
        "file_name": "Access.ComboBox.ForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **ForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.ForeTint",
        "file_name": "Access.ComboBox.ForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ComboBox.Format",
        "file_name": "Access.ComboBox.Format.md",
        "kind": "property",
        "main": "Use the **Format** property to customize the way numbers, dates, times, and text are displayed and printed. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Format",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.FormatConditions",
        "file_name": "Access.ComboBox.FormatConditions.md",
        "kind": "property",
        "main": "Use the **FormatConditions** property to return a read-only reference to the **[FormatConditions](Access.FormatConditions.md)** collection and its related properties.\n",
        "Parameters": [],
        "Return_value": [
            "FormatConditions",
            "Access.FormatConditions.md"
        ]
    },
    {
        "api_name": "Access.ComboBox.GotFocus",
        "file_name": "Access.ComboBox.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineColor",
        "file_name": "Access.ComboBox.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified combo box. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineShade",
        "file_name": "Access.ComboBox.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.ComboBox.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ComboBox.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineStyleBottom",
        "file_name": "Access.ComboBox.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified combo box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineStyleLeft",
        "file_name": "Access.ComboBox.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified combo box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineStyleRight",
        "file_name": "Access.ComboBox.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified combo box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineStyleTop",
        "file_name": "Access.ComboBox.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified combo box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineThemeColorIndex",
        "file_name": "Access.ComboBox.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.ComboBox.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ComboBox.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineTint",
        "file_name": "Access.ComboBox.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.ComboBox.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ComboBox.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineWidthBottom",
        "file_name": "Access.ComboBox.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified combo box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineWidthLeft",
        "file_name": "Access.ComboBox.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified combo box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineWidthRight",
        "file_name": "Access.ComboBox.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified combo box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.GridlineWidthTop",
        "file_name": "Access.ComboBox.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified combo box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.Height",
        "file_name": "Access.ComboBox.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.HelpContextId",
        "file_name": "Access.ComboBox.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.HideDuplicates",
        "file_name": "Access.ComboBox.HideDuplicates.md",
        "kind": "property",
        "main": "Use the **HideDuplicates** property to hide a control on a report when its value is the same as in the preceding record. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HideDuplicates",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.HorizontalAnchor",
        "file_name": "Access.ComboBox.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the combo box is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.ComboBox.IMEHold",
        "file_name": "Access.ComboBox.IMEHold.md",
        "kind": "property",
        "main": "Use the **IMEHold/Hold KanjiConversionMode** property to show whether the Kanji Conversion Mode is maintained when the control loses the focus. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.IMEMode",
        "file_name": "Access.ComboBox.IMEMode.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.IMESentenceMode",
        "file_name": "Access.ComboBox.IMESentenceMode.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.InheritValueList",
        "file_name": "Access.ComboBox.InheritValueList.md",
        "kind": "property",
        "main": "Gets or sets whether a combo box's value list is inherited from its field. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.InputMask",
        "file_name": "Access.ComboBox.InputMask.md",
        "kind": "property",
        "main": "Use the **InputMask** property to make data entry easier and to control the values that users can enter in a combo box control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "InputMask",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.InSelection",
        "file_name": "Access.ComboBox.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.IsHyperlink",
        "file_name": "Access.ComboBox.IsHyperlink.md",
        "kind": "property",
        "main": "Use the **IsHyperlink** property to specify or determine if the data contained in a combo box is a hyperlink. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsHyperlink",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.IsVisible",
        "file_name": "Access.ComboBox.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.ItemData",
        "file_name": "Access.ComboBox.ItemData.md",
        "kind": "property",
        "main": "The **ItemData** property returns the data in the bound column for the specified row in a combo box. Read-only **Variant**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "ItemData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ComboBox.ItemsSelected",
        "file_name": "Access.ComboBox.ItemsSelected.md",
        "kind": "property",
        "main": "Use the **ItemsSelected** property to return a read-only reference to the hidden **ItemsSelected** collection. This hidden collection can be used to access data in the selected rows of a multiselect combo box control.\n",
        "Parameters": [],
        "Return_value": [
            "ItemsSelected"
        ]
    },
    {
        "api_name": "Access.ComboBox.KeyboardLanguage",
        "file_name": "Access.ComboBox.KeyboardLanguage.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.KeyDown",
        "file_name": "Access.ComboBox.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ComboBox.KeyPress",
        "file_name": "Access.ComboBox.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ComboBox.KeyUp",
        "file_name": "Access.ComboBox.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ComboBox.LabelAlign",
        "file_name": "Access.ComboBox.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.LabelX",
        "file_name": "Access.ComboBox.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.LabelY",
        "file_name": "Access.ComboBox.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.Layout",
        "file_name": "Access.ComboBox.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified combo box. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.ComboBox.LayoutID",
        "file_name": "Access.ComboBox.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified combo box. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.Left",
        "file_name": "Access.ComboBox.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.LeftMargin",
        "file_name": "Access.ComboBox.LeftMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **RightMargin**, and **BottomMargin** properties, specifies the location of information displayed within a combo box control. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "RightMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.LeftPadding",
        "file_name": "Access.ComboBox.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the combo box and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.LimitToList",
        "file_name": "Access.ComboBox.LimitToList.md",
        "kind": "property",
        "main": "Use the **LimitToList** property to limit a combo box's values to the listed items. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "LimitToList",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.ListCount",
        "file_name": "Access.ComboBox.ListCount.md",
        "kind": "property",
        "main": "Use the **ListCount** property to determine the number of rows in the list box portion of a combo box. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ListCount",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.ListIndex",
        "file_name": "Access.ComboBox.ListIndex.md",
        "kind": "property",
        "main": "Use the **ListIndex** property to determine which item is selected in a combo box. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ListIndex",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.ListItemsEditForm",
        "file_name": "Access.ComboBox.ListItemsEditForm.md",
        "kind": "property",
        "main": "Gets or sets the name of the form that is displayed when the user chooses **Edit List Items**. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.ListRows",
        "file_name": "Access.ComboBox.ListRows.md",
        "kind": "property",
        "main": "Use the **ListRows** property to set the maximum number of rows to display in the list box portion of a combo box. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ListRows",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.ListWidth",
        "file_name": "Access.ComboBox.ListWidth.md",
        "kind": "property",
        "main": "Use the **ListWidth** property to set the width of the list box portion of a combo box. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ListWidth",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.Locked",
        "file_name": "Access.ComboBox.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.LostFocus",
        "file_name": "Access.ComboBox.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.ComboBox",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Change",
            "Click",
            "DblClick",
            "Dirty",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "NotInList",
            "Undo"
        ],
        "file_name": "Access.ComboBox.md",
        "kind": "object",
        "main": "This object corresponds to a combo box control. The combo box control combines the features of a text box and a list box. Use a combo box when you want the option of either typing a value or selecting a value from a predefined list.\n",
        "Methods": [
            "AddItem",
            "Dropdown",
            "Move",
            "RemoveItem",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "AddColon",
            "AfterUpdate",
            "AllowAutoCorrect",
            "AllowValueListEdits",
            "Application",
            "AutoExpand",
            "AutoLabel",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BeforeUpdate",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomMargin",
            "BottomPadding",
            "BoundColumn",
            "CanGrow",
            "CanShrink",
            "Column",
            "ColumnCount",
            "ColumnHeads",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "ColumnWidths",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DecimalPlaces",
            "DefaultValue",
            "DisplayAsHyperlink",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "FontWeight",
            "ForeColor",
            "ForeShade",
            "ForeThemeColorIndex",
            "ForeTint",
            "Format",
            "FormatConditions",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HideDuplicates",
            "HorizontalAnchor",
            "Hyperlink",
            "IMEHold",
            "IMEMode",
            "IMESentenceMode",
            "InheritValueList",
            "InputMask",
            "InSelection",
            "IsHyperlink",
            "IsVisible",
            "ItemData",
            "ItemsSelected",
            "KeyboardLanguage",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftMargin",
            "LeftPadding",
            "LimitToList",
            "ListCount",
            "ListIndex",
            "ListItemsEditForm",
            "ListRows",
            "ListWidth",
            "Locked",
            "Name",
            "NumeralShapes",
            "OldBorderStyle",
            "OldValue",
            "OnChange",
            "OnClick",
            "OnDblClick",
            "OnDirty",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnNotInList",
            "OnUndo",
            "Parent",
            "Properties",
            "ReadingOrder",
            "Recordset",
            "RightMargin",
            "RightPadding",
            "RowSource",
            "RowSourceType",
            "ScrollBarAlign",
            "Section",
            "Selected",
            "SelLength",
            "SelStart",
            "SelText",
            "SeparatorCharacters",
            "ShortcutMenuBar",
            "ShowOnlyRowSourceValues",
            "SmartTags",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Text",
            "TextAlign",
            "ThemeFontIndex",
            "Top",
            "TopMargin",
            "TopPadding",
            "ValidationRule",
            "ValidationText",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.ComboBox.MouseDown",
        "file_name": "Access.ComboBox.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.ComboBox.MouseMove",
        "file_name": "Access.ComboBox.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.ComboBox.MouseUp",
        "file_name": "Access.ComboBox.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.ComboBox.Move",
        "file_name": "Access.ComboBox.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.Name",
        "file_name": "Access.ComboBox.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.NotInList",
        "file_name": "Access.ComboBox.NotInList.md",
        "kind": "event",
        "main": "The **NotInList** event occurs when the user enters a value in the text box portion of a combo box that isn't in the combo box list.\n",
        "Parameters": [
            "NewData",
            "Response"
        ],
        "Return_value": [
            "NotInList"
        ]
    },
    {
        "api_name": "Access.ComboBox.NumeralShapes",
        "file_name": "Access.ComboBox.NumeralShapes.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.OldBorderStyle",
        "file_name": "Access.ComboBox.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.OldValue",
        "file_name": "Access.ComboBox.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnChange",
        "file_name": "Access.ComboBox.OnChange.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Change** box in the Properties window of one of the objects in the **Applies To** list. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnClick",
        "file_name": "Access.ComboBox.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnDblClick",
        "file_name": "Access.ComboBox.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnDirty",
        "file_name": "Access.ComboBox.OnDirty.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dirty** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnEnter",
        "file_name": "Access.ComboBox.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnExit",
        "file_name": "Access.ComboBox.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnGotFocus",
        "file_name": "Access.ComboBox.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnKeyDown",
        "file_name": "Access.ComboBox.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnKeyPress",
        "file_name": "Access.ComboBox.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnKeyUp",
        "file_name": "Access.ComboBox.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnLostFocus",
        "file_name": "Access.ComboBox.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnMouseDown",
        "file_name": "Access.ComboBox.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnMouseMove",
        "file_name": "Access.ComboBox.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnMouseUp",
        "file_name": "Access.ComboBox.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnNotInList",
        "file_name": "Access.ComboBox.OnNotInList.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Not in List** box in the Properties window of a combo box. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.OnUndo",
        "file_name": "Access.ComboBox.OnUndo.md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[Undo](access.combobox.undo(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "access.combobox.undo(even).md"
        ]
    },
    {
        "api_name": "Access.ComboBox.Parent",
        "file_name": "Access.ComboBox.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.Properties",
        "file_name": "Access.ComboBox.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.ComboBox.ReadingOrder",
        "file_name": "Access.ComboBox.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.Recordset",
        "file_name": "Access.ComboBox.Recordset.md",
        "kind": "property",
        "main": "Returns or sets the ADO **Recordset** or DAO **Recordset** object that represents the record source for the specified object. Read/write **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Recordset",
            "Object"
        ]
    },
    {
        "api_name": "Access.ComboBox.RemoveItem",
        "file_name": "Access.ComboBox.RemoveItem.md",
        "kind": "method",
        "main": "Removes an item from the list of values displayed by the specified combo box control.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.Requery",
        "file_name": "Access.ComboBox.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.ComboBox.RightMargin",
        "file_name": "Access.ComboBox.RightMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **LeftMargin**, and **BottomMargin** properties, specifies the location of information displayed within a combo box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "LeftMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.RightPadding",
        "file_name": "Access.ComboBox.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the combo box and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.RowSource",
        "file_name": "Access.ComboBox.RowSource.md",
        "kind": "property",
        "main": "Use the **RowSource** property (along with the **RowSourceType** property) to tell Microsoft Access how to provide data to the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "RowSource",
            "RowSourceType",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.RowSourceType",
        "file_name": "Access.ComboBox.RowSourceType.md",
        "kind": "property",
        "main": "Use the **RowSourceType** property (along with the **RowSource** property) to tell Microsoft Access how to provide data to the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "RowSourceType",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.ScrollBarAlign",
        "file_name": "Access.ComboBox.ScrollBarAlign.md",
        "kind": "property",
        "main": "Use the **ScrollBarAlign** property to specify or determine the alignment of a vertical scroll bar. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ScrollBarAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.Section",
        "file_name": "Access.ComboBox.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.Selected",
        "file_name": "Access.ComboBox.Selected.md",
        "kind": "property",
        "main": "Use the **Selected** property in Visual Basic to determine if an item in a combo box is selected. Read/write **Long**.\n",
        "Parameters": [
            "lRow"
        ],
        "Return_value": [
            "Selected",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.SelLength",
        "file_name": "Access.ComboBox.SelLength.md",
        "kind": "property",
        "main": "The **SelLength** property specifies or determines the number of characters selected in the text box portion of a combo box. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "SelLength",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.SelStart",
        "file_name": "Access.ComboBox.SelStart.md",
        "kind": "property",
        "main": "The **SelStart** property specifies or determines the starting point of the selected text or the position of the insertion point if no text is selected. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "SelStart",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.SelText",
        "file_name": "Access.ComboBox.SelText.md",
        "kind": "property",
        "main": "The **SelText** property returns a string containing the selected text. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "SelText",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.SeparatorCharacters",
        "file_name": "Access.ComboBox.SeparatorCharacters.md",
        "kind": "property",
        "main": "Gets or sets the separator displayed between values when the combo box is bound to a multi-valued field. Read/write [AcSeparatorCharacters](Access.AcSeparatorCharacters.md).\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.SetFocus",
        "file_name": "Access.ComboBox.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.ComboBox.ShortcutMenuBar",
        "file_name": "Access.ComboBox.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.ShowOnlyRowSourceValues",
        "file_name": "Access.ComboBox.ShowOnlyRowSourceValues.md",
        "kind": "property",
        "main": "Gets or sets whether the combo box can display values that aren't specified by the **RowSource** property. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "RowSource",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.SizeToFit",
        "file_name": "Access.ComboBox.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.ComboBox.SmartTags",
        "file_name": "Access.ComboBox.SmartTags.md",
        "kind": "property",
        "main": "Returns a **[SmartTags](Access.SmartTags.md)** collection that represents the collection of smart tags that have been added to a control. \n",
        "Parameters": [],
        "Return_value": [
            "Access.SmartTags.md"
        ]
    },
    {
        "api_name": "Access.ComboBox.SpecialEffect",
        "file_name": "Access.ComboBox.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.StatusBarText",
        "file_name": "Access.ComboBox.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.TabIndex",
        "file_name": "Access.ComboBox.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.TabStop",
        "file_name": "Access.ComboBox.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.Tag",
        "file_name": "Access.ComboBox.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.Text",
        "file_name": "Access.ComboBox.Text.md",
        "kind": "property",
        "main": "Use the **Text** property to set or return the text contained in the text box portion of a combo box. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Text",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.TextAlign",
        "file_name": "Access.ComboBox.TextAlign.md",
        "kind": "property",
        "main": "The **TextAlign** property specifies the text alignment in new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "TextAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ComboBox.ThemeFontIndex",
        "file_name": "Access.ComboBox.ThemeFontIndex.md",
        "kind": "property",
        "main": "Gets or sets the font index that represents a font in the applied theme associated with the **FontName** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Long"
        ]
    },
    {
        "api_name": "Access.ComboBox.Top",
        "file_name": "Access.ComboBox.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.TopMargin",
        "file_name": "Access.ComboBox.TopMargin.md",
        "kind": "property",
        "main": "Along with the **LeftMargin**, **RightMargin**, and **BottomMargin** properties, specifies the location of information displayed within a combo box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LeftMargin",
            "RightMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.TopPadding",
        "file_name": "Access.ComboBox.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the combo box and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ComboBox.Undo",
        "file_name": "Access.ComboBox.Undo(even).md",
        "kind": "event",
        "main": "Occurs when the user undoes a change.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ComboBox.Undo",
        "file_name": "Access.ComboBox.Undo(method).md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.ComboBox.ValidationRule",
        "file_name": "Access.ComboBox.ValidationRule.md",
        "kind": "property",
        "main": "Use the **ValidationRule** property to specify requirements for data entered into a record, field, or control. When data is entered that violates the **ValidationRule** setting, you can use the **ValidationText** property to specify the message to be displayed to the user. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationRule",
            "ValidationText",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.ValidationText",
        "file_name": "Access.ComboBox.ValidationText.md",
        "kind": "property",
        "main": "Use the **ValidationText** property to specify a message to be displayed to the user when data is entered that violates a **ValidationRule** setting for a record, field, or control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationText",
            "ValidationRule",
            "String"
        ]
    },
    {
        "api_name": "Access.ComboBox.Value",
        "file_name": "Access.ComboBox.Value.md",
        "kind": "property",
        "main": "Determines or specifies which value or option in the combo box is selected. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.ComboBox.VerticalAnchor",
        "file_name": "Access.ComboBox.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified combo box is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.ComboBox.Visible",
        "file_name": "Access.ComboBox.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ComboBox.Width",
        "file_name": "Access.ComboBox.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.AddColon",
        "file_name": "Access.CommandButton.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.Alignment",
        "file_name": "Access.CommandButton.Alignment.md",
        "kind": "property",
        "main": "Gets or sets how the specified button's caption and picture are aligned. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.Application",
        "file_name": "Access.CommandButton.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.CommandButton.AutoLabel",
        "file_name": "Access.CommandButton.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.AutoRepeat",
        "file_name": "Access.CommandButton.AutoRepeat.md",
        "kind": "property",
        "main": "Use the **AutoRepeat** property to specify whether an event procedure or macro runs repeatedly while a command button on a form remains pressed in. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AutoRepeat",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.BackColor",
        "file_name": "Access.CommandButton.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.BackShade",
        "file_name": "Access.CommandButton.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.BackStyle",
        "file_name": "Access.CommandButton.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.BackThemeColorIndex",
        "file_name": "Access.CommandButton.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.BackTint",
        "file_name": "Access.CommandButton.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.Bevel",
        "file_name": "Access.CommandButton.Bevel.md",
        "kind": "property",
        "main": "Gets or sets the bevel effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.BorderColor",
        "file_name": "Access.CommandButton.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.BorderShade",
        "file_name": "Access.CommandButton.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.BorderStyle",
        "file_name": "Access.CommandButton.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.BorderThemeColorIndex",
        "file_name": "Access.CommandButton.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.BorderTint",
        "file_name": "Access.CommandButton.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.BorderWidth",
        "file_name": "Access.CommandButton.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.BottomPadding",
        "file_name": "Access.CommandButton.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the button and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.Cancel",
        "file_name": "Access.CommandButton.Cancel.md",
        "kind": "property",
        "main": "Use the **Cancel** property to specify whether a command button is also the **Cancel** button on a form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Cancel",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.Caption",
        "file_name": "Access.CommandButton.Caption.md",
        "kind": "property",
        "main": "Gets or sets the text that appears in the control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.Click",
        "file_name": "Access.CommandButton.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.CommandButton.Controls",
        "file_name": "Access.CommandButton.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.CommandButton.ControlTipText",
        "file_name": "Access.CommandButton.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.ControlType",
        "file_name": "Access.CommandButton.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.CursorOnHover",
        "file_name": "Access.CommandButton.CursorOnHover.md",
        "kind": "property",
        "main": "Gets or sets the type of mouse cursor displayed when the user rests the pointer on a button. Read/write **[AcCursorOnHover](Access.AcCursorOnHover.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcCursorOnHover.md"
        ]
    },
    {
        "api_name": "Access.CommandButton.DblClick",
        "file_name": "Access.CommandButton.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.CommandButton.Default",
        "file_name": "Access.CommandButton.Default.md",
        "kind": "property",
        "main": "Use the **Default** property to specify whether a command button is the default button on a form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Default",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.DisplayWhen",
        "file_name": "Access.CommandButton.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.Enabled",
        "file_name": "Access.CommandButton.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.Enter",
        "file_name": "Access.CommandButton.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.CommandButton.EventProcPrefix",
        "file_name": "Access.CommandButton.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.Exit",
        "file_name": "Access.CommandButton.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.CommandButton.FontBold",
        "file_name": "Access.CommandButton.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.FontItalic",
        "file_name": "Access.CommandButton.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.FontName",
        "file_name": "Access.CommandButton.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.FontSize",
        "file_name": "Access.CommandButton.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.FontUnderline",
        "file_name": "Access.CommandButton.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.FontWeight",
        "file_name": "Access.CommandButton.FontWeight.md",
        "kind": "property",
        "main": "Use the **FontWeight** property to specify the line width that Windows uses to display and print characters in a control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.ForeColor",
        "file_name": "Access.CommandButton.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.ForeShade",
        "file_name": "Access.CommandButton.ForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.ForeThemeColorIndex",
        "file_name": "Access.CommandButton.ForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **ForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.ForeTint",
        "file_name": "Access.CommandButton.ForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.Glow",
        "file_name": "Access.CommandButton.Glow.md",
        "kind": "property",
        "main": "Gets or sets the glow effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.GotFocus",
        "file_name": "Access.CommandButton.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.CommandButton.Gradient",
        "file_name": "Access.CommandButton.Gradient.md",
        "kind": "property",
        "main": "Gets or sets the gradient fill applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineColor",
        "file_name": "Access.CommandButton.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified command button. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineShade",
        "file_name": "Access.CommandButton.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.CommandButton.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.CommandButton.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineStyleBottom",
        "file_name": "Access.CommandButton.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineStyleLeft",
        "file_name": "Access.CommandButton.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineStyleRight",
        "file_name": "Access.CommandButton.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineStyleTop",
        "file_name": "Access.CommandButton.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineThemeColorIndex",
        "file_name": "Access.CommandButton.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.CommandButton.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.CommandButton.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineTint",
        "file_name": "Access.CommandButton.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.CommandButton.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.CommandButton.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineWidthBottom",
        "file_name": "Access.CommandButton.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineWidthLeft",
        "file_name": "Access.CommandButton.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineWidthRight",
        "file_name": "Access.CommandButton.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.GridlineWidthTop",
        "file_name": "Access.CommandButton.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.Height",
        "file_name": "Access.CommandButton.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.HelpContextId",
        "file_name": "Access.CommandButton.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.HorizontalAnchor",
        "file_name": "Access.CommandButton.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the button is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.CommandButton.HoverColor",
        "file_name": "Access.CommandButton.HoverColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on the control when the user rests the mouse cursor over it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.HoverForeColor",
        "file_name": "Access.CommandButton.HoverForeColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the text displayed on the control when the user rests the mouse cursor over it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.HoverForeShade",
        "file_name": "Access.CommandButton.HoverForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **HoverForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.HoverForeThemeColorIndex",
        "file_name": "Access.CommandButton.HoverForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **HoverForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.HoverForeTint",
        "file_name": "Access.CommandButton.HoverForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **HoverForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.HoverShade",
        "file_name": "Access.CommandButton.HoverShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **HoverColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.HoverThemeColorIndex",
        "file_name": "Access.CommandButton.HoverThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **HoverColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.HoverTint",
        "file_name": "Access.CommandButton.HoverTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **HoverColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.Hyperlink",
        "file_name": "Access.CommandButton.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.CommandButton.HyperlinkAddress",
        "file_name": "Access.CommandButton.HyperlinkAddress.md",
        "kind": "property",
        "main": "Use the **HyperlinkAddress** property to specify or determine the path to an object, document, webpage, or other destination for a hyperlink associated with the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "HyperlinkAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.HyperlinkSubAddress",
        "file_name": "Access.CommandButton.HyperlinkSubAddress.md",
        "kind": "property",
        "main": "Use the **HyperlinkSubAddress** property to specify or determine a location within the target document specified by the **HyperlinkAddress** property. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "HyperlinkSubAddress",
            "HyperlinkAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.InSelection",
        "file_name": "Access.CommandButton.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.IsVisible",
        "file_name": "Access.CommandButton.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.KeyDown",
        "file_name": "Access.CommandButton.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.CommandButton.KeyPress",
        "file_name": "Access.CommandButton.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.CommandButton.KeyUp",
        "file_name": "Access.CommandButton.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.CommandButton.LabelAlign",
        "file_name": "Access.CommandButton.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.LabelX",
        "file_name": "Access.CommandButton.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.LabelY",
        "file_name": "Access.CommandButton.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.Layout",
        "file_name": "Access.CommandButton.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified button. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.CommandButton.LayoutID",
        "file_name": "Access.CommandButton.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified button. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.Left",
        "file_name": "Access.CommandButton.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.LeftPadding",
        "file_name": "Access.CommandButton.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the button and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.LostFocus",
        "file_name": "Access.CommandButton.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.CommandButton",
        "Events": [
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.CommandButton.md",
        "kind": "object",
        "main": "This object corresponds to a command button. A command button on a form can start an action or a set of actions. For example, you could create a command button that opens another form. To make a command button do something, you write a macro or event procedure and attach it to the button's **OnClick** property.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "AddColon",
            "Alignment",
            "Application",
            "AutoLabel",
            "AutoRepeat",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "Bevel",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Cancel",
            "Caption",
            "Controls",
            "ControlTipText",
            "ControlType",
            "CursorOnHover",
            "Default",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "FontWeight",
            "ForeColor",
            "ForeShade",
            "ForeThemeColorIndex",
            "ForeTint",
            "Glow",
            "Gradient",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "HoverColor",
            "HoverForeColor",
            "HoverForeShade",
            "HoverForeThemeColorIndex",
            "HoverForeTint",
            "HoverShade",
            "HoverThemeColorIndex",
            "HoverTint",
            "Hyperlink",
            "HyperlinkAddress",
            "HyperlinkSubAddress",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Name",
            "ObjectPalette",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnPush",
            "Parent",
            "Picture",
            "PictureCaptionArrangement",
            "PictureData",
            "PictureType",
            "PressedColor",
            "PressedForeColor",
            "PressedForeShade",
            "PressedForeThemeColorIndex",
            "PressedForeTint",
            "PressedShade",
            "PressedThemeColorIndex",
            "PressedTint",
            "Properties",
            "QuickStyle",
            "QuickStyleMask",
            "ReadingOrder",
            "RightPadding",
            "Section",
            "Shadow",
            "Shape",
            "ShortcutMenuBar",
            "SoftEdges",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "ThemeFontIndex",
            "Top",
            "TopPadding",
            "Transparent",
            "UseTheme",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.CommandButton.MouseDown",
        "file_name": "Access.CommandButton.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.CommandButton.MouseMove",
        "file_name": "Access.CommandButton.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.CommandButton.MouseUp",
        "file_name": "Access.CommandButton.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.CommandButton.Move",
        "file_name": "Access.CommandButton.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.CommandButton.Name",
        "file_name": "Access.CommandButton.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.ObjectPalette",
        "file_name": "Access.CommandButton.ObjectPalette.md",
        "kind": "property",
        "main": "The **ObjectPalette** property specifies the palette in the application used to create a bitmap or other graphic that is loaded into the specified control by using the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectPalette",
            "Picture",
            "Variant"
        ]
    },
    {
        "api_name": "Access.CommandButton.OldValue",
        "file_name": "Access.CommandButton.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnClick",
        "file_name": "Access.CommandButton.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnDblClick",
        "file_name": "Access.CommandButton.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnEnter",
        "file_name": "Access.CommandButton.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnExit",
        "file_name": "Access.CommandButton.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnGotFocus",
        "file_name": "Access.CommandButton.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnKeyDown",
        "file_name": "Access.CommandButton.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnKeyPress",
        "file_name": "Access.CommandButton.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnKeyUp",
        "file_name": "Access.CommandButton.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnLostFocus",
        "file_name": "Access.CommandButton.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnMouseDown",
        "file_name": "Access.CommandButton.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnMouseMove",
        "file_name": "Access.CommandButton.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnMouseUp",
        "file_name": "Access.CommandButton.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.OnPush",
        "file_name": "Access.CommandButton.OnPush.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window of a command button. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.Parent",
        "file_name": "Access.CommandButton.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.CommandButton.Picture",
        "file_name": "Access.CommandButton.Picture.md",
        "kind": "property",
        "main": "Use the **Picture** property to specify a bitmap or other type of graphic to be displayed on the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Picture",
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.PictureCaptionArrangement",
        "file_name": "Access.CommandButton.PictureCaptionArrangement.md",
        "kind": "property",
        "main": "Gets or sets how the specified button's caption is arranged in relation to its picture. Read/write **[AcPictureCaptionArrangement](Access.AcPictureCaptionArrangement.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPictureCaptionArrangement.md"
        ]
    },
    {
        "api_name": "Access.CommandButton.PictureData",
        "file_name": "Access.CommandButton.PictureData.md",
        "kind": "property",
        "main": "Use the **PictureData** property to copy the picture to another object that supports the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.CommandButton.PictureType",
        "file_name": "Access.CommandButton.PictureType.md",
        "kind": "property",
        "main": "Use the **PictureType** property to specify whether Microsoft Access stores an object's picture as a linked or an embedded object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.PressedColor",
        "file_name": "Access.CommandButton.PressedColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on the control when the user chooses it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.PressedForeColor",
        "file_name": "Access.CommandButton.PressedForeColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the text displayed on the control when the user chooses it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.PressedForeShade",
        "file_name": "Access.CommandButton.PressedForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **PressedForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.PressedForeThemeColorIndex",
        "file_name": "Access.CommandButton.PressedForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **PressedForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.PressedForeTint",
        "file_name": "Access.CommandButton.PressedForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **PressedForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.PressedShade",
        "file_name": "Access.CommandButton.PressedShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **PressedColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.PressedThemeColorIndex",
        "file_name": "Access.CommandButton.PressedThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **PressedColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.PressedTint",
        "file_name": "Access.CommandButton.PressedTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **PressedColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CommandButton.Properties",
        "file_name": "Access.CommandButton.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.CommandButton.QuickStyle",
        "file_name": "Access.CommandButton.QuickStyle.md",
        "kind": "property",
        "main": "Gets or sets the quick style that is applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.ReadingOrder",
        "file_name": "Access.CommandButton.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CommandButton.Requery",
        "file_name": "Access.CommandButton.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.CommandButton.RightPadding",
        "file_name": "Access.CommandButton.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the button and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.Section",
        "file_name": "Access.CommandButton.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.SetFocus",
        "file_name": "Access.CommandButton.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.CommandButton.Shadow",
        "file_name": "Access.CommandButton.Shadow.md",
        "kind": "property",
        "main": "Gets or sets the shadow effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.Shape",
        "file_name": "Access.CommandButton.Shape.md",
        "kind": "property",
        "main": "Returns or sets the shape of the specified button. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.ShortcutMenuBar",
        "file_name": "Access.CommandButton.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.SizeToFit",
        "file_name": "Access.CommandButton.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.CommandButton.SoftEdges",
        "file_name": "Access.CommandButton.SoftEdges.md",
        "kind": "property",
        "main": "Gets or sets the soft edges effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.StatusBarText",
        "file_name": "Access.CommandButton.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.TabIndex",
        "file_name": "Access.CommandButton.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.TabStop",
        "file_name": "Access.CommandButton.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.Tag",
        "file_name": "Access.CommandButton.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CommandButton.ThemeFontIndex",
        "file_name": "Access.CommandButton.ThemeFontIndex.md",
        "kind": "property",
        "main": "Gets or sets the font index that represents a font in the applied theme associated with the **FontName** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Long"
        ]
    },
    {
        "api_name": "Access.CommandButton.Top",
        "file_name": "Access.CommandButton.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.TopPadding",
        "file_name": "Access.CommandButton.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the button and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CommandButton.Transparent",
        "file_name": "Access.CommandButton.Transparent.md",
        "kind": "property",
        "main": "Use the **Transparent** property to specify whether a command button is solid or transparent. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Transparent",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.UseTheme",
        "file_name": "Access.CommandButton.UseTheme.md",
        "kind": "property",
        "main": "Gets or sets whether the specified object will utilize formatting styles defined in Office Document Themes. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.VerticalAnchor",
        "file_name": "Access.CommandButton.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified button is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.CommandButton.Visible",
        "file_name": "Access.CommandButton.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CommandButton.Width",
        "file_name": "Access.CommandButton.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Control.Application",
        "file_name": "Access.Control.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Control.BottomPadding",
        "file_name": "Access.Control.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Control.Column",
        "file_name": "Access.Control.Column.md",
        "kind": "property",
        "main": "Use the **Column** property to refer to a specific column or column and row combination in a multiple-column combo box or list box. Read-only **Variant**.\n",
        "Parameters": [
            "Index",
            "Row"
        ],
        "Return_value": [
            "Column",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Control.Controls",
        "file_name": "Access.Control.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.Control.Dropdown",
        "file_name": "Access.Control.Dropdown.md",
        "kind": "method",
        "main": "Use the **Dropdown** method to force the list in the specified combo box to drop down.\n",
        "Parameters": [],
        "Return_value": [
            "Dropdown"
        ]
    },
    {
        "api_name": "Access.Control.Form",
        "file_name": "Access.Control.Form.md",
        "kind": "property",
        "main": "Use the **Form** property to refer to a form or to refer to the form associated with a subformcontrol. Read-only **Form**.\n",
        "Parameters": [],
        "Return_value": [
            "Form"
        ]
    },
    {
        "api_name": "Access.Control.GridlineColor",
        "file_name": "Access.Control.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Control.GridlineStyleBottom",
        "file_name": "Access.Control.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Control.GridlineStyleLeft",
        "file_name": "Access.Control.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Control.GridlineStyleRight",
        "file_name": "Access.Control.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Control.GridlineStyleTop",
        "file_name": "Access.Control.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Control.GridlineWidthBottom",
        "file_name": "Access.Control.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Control.GridlineWidthLeft",
        "file_name": "Access.Control.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Control.GridlineWidthRight",
        "file_name": "Access.Control.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Control.GridlineWidthTop",
        "file_name": "Access.Control.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Control.HorizontalAnchor",
        "file_name": "Access.Control.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the control is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Control.Hyperlink",
        "file_name": "Access.Control.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.Control.ItemData",
        "file_name": "Access.Control.ItemData.md",
        "kind": "property",
        "main": "The **ItemData** property returns the data in the bound column for the specified row in a combo box or list box. Read-only **Variant**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "ItemData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Control.ItemsSelected",
        "file_name": "Access.Control.ItemsSelected.md",
        "kind": "property",
        "main": "Use the **ItemsSelected** property to return a read-only reference to the hidden **ItemsSelected** collection. This hidden collection can be used to access data in the selected rows of a multiselect list box control.\n",
        "Parameters": [],
        "Return_value": [
            "ItemsSelected"
        ]
    },
    {
        "api_name": "Access.Control.Layout",
        "file_name": "Access.Control.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified control. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.Control.LayoutID",
        "file_name": "Access.Control.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified control. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Control.LeftPadding",
        "file_name": "Access.Control.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Control",
        "Events": [],
        "file_name": "Access.Control.md",
        "kind": "object",
        "main": "The **Control** object represents a control on a form, report, or section, within another control, or attached to another control.\n",
        "Methods": [
            "Dropdown",
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "Application",
            "BottomPadding",
            "Column",
            "Controls",
            "Form",
            "GridlineColor",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "HorizontalAnchor",
            "Hyperlink",
            "ItemData",
            "ItemsSelected",
            "Layout",
            "LayoutID",
            "LeftPadding",
            "Name",
            "Object",
            "ObjectVerbs",
            "OldValue",
            "Pages",
            "Parent",
            "Properties",
            "Report",
            "RightPadding",
            "Selected",
            "SmartTags",
            "TopPadding",
            "VerticalAnchor"
        ]
    },
    {
        "api_name": "Access.Control.Move",
        "file_name": "Access.Control.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Control.Name",
        "file_name": "Access.Control.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Control.Object",
        "file_name": "Access.Control.Object.md",
        "kind": "property",
        "main": "Use the **Object** property in Visual Basic to return a reference to the ActiveX object that is associated with a linked or embedded OLE object in a control. By using this reference, you can access the properties or invoke the methods of the OLE object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.Control.ObjectVerbs",
        "file_name": "Access.Control.ObjectVerbs.md",
        "kind": "property",
        "main": "Use the **ObjectVerbs** property in Visual Basic to determine the list of verbs that an OLE object supports. Read-only **String**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "ObjectVerbs",
            "String"
        ]
    },
    {
        "api_name": "Access.Control.OldValue",
        "file_name": "Access.Control.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Control.Pages",
        "file_name": "Access.Control.Pages.md",
        "kind": "property",
        "main": "Returns a **[Pages](Access.Pages.md)** collection that represents the pages in the specified control that supports tabbed pages (for example, a **TabControl** object). Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Pages.md",
            "TabControl"
        ]
    },
    {
        "api_name": "Access.Control.Parent",
        "file_name": "Access.Control.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Control.Properties",
        "file_name": "Access.Control.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Control.Report",
        "file_name": "Access.Control.Report.md",
        "kind": "property",
        "main": "Use the **Report** property to refer to a report or to refer to the report associated with a subreport control. Read-only **Report**.\n",
        "Parameters": [],
        "Return_value": [
            "Report"
        ]
    },
    {
        "api_name": "Access.Control.Requery",
        "file_name": "Access.Control.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.Control.RightPadding",
        "file_name": "Access.Control.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Control.Selected",
        "file_name": "Access.Control.Selected.md",
        "kind": "property",
        "main": "Use the **Selected** property in Visual Basic to determine if an item is selected. Read/write **Long**.\n",
        "Parameters": [
            "lRow"
        ],
        "Return_value": [
            "Selected",
            "Long"
        ]
    },
    {
        "api_name": "Access.Control.SetFocus",
        "file_name": "Access.Control.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.Control.SizeToFit",
        "file_name": "Access.Control.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.Control.SmartTags",
        "file_name": "Access.Control.SmartTags.md",
        "kind": "property",
        "main": "Returns a **[SmartTags](Access.SmartTags.md)** collection that represents the collection of smart tags that have been added to a control. \n",
        "Parameters": [],
        "Return_value": [
            "Access.SmartTags.md"
        ]
    },
    {
        "api_name": "Access.Control.TopPadding",
        "file_name": "Access.Control.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Control.Undo",
        "file_name": "Access.Control.Undo.md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.Control.VerticalAnchor",
        "file_name": "Access.Control.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified control is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Controls.Application",
        "file_name": "Access.Controls.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object. \n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Controls.Count",
        "file_name": "Access.Controls.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.Controls.Item",
        "file_name": "Access.Controls.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Object**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Object"
        ]
    },
    {
        "api_name": "Access.Controls",
        "Events": [],
        "file_name": "Access.Controls.md",
        "kind": "object",
        "main": "The **Controls** collection contains all of the controls on a form, report, or subform, within another control, or attached to another control. The **Controls** collection is a member of the **[Form](Access.Form.md)**, **[Report](Access.Report.md)**, and **[SubForm](Access.SubForm.md)** objects.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Controls.Parent",
        "file_name": "Access.Controls.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.CurrentData.AllDatabaseDiagrams",
        "file_name": "Access.CurrentData.AllDatabaseDiagrams.md",
        "kind": "property",
        "main": "Use the **AllDatabaseDiagrams** property to reference the **[AllDatabaseDiagrams](Access.AllDatabaseDiagrams.md)** collection and its related properties. Read-only **AllDatabaseDiagrams** object. \n",
        "Parameters": [],
        "Return_value": [
            "AllDatabaseDiagrams",
            "Access.AllDatabaseDiagrams.md"
        ]
    },
    {
        "api_name": "Access.CurrentData.AllFunctions",
        "file_name": "Access.CurrentData.AllFunctions.md",
        "kind": "property",
        "main": "Use the **AllFunctions** property to reference the **[AllFunctions](Access.AllFunctions.md)** collection and its related properties. Read-only **AllFunctions** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllFunctions",
            "Access.AllFunctions.md"
        ]
    },
    {
        "api_name": "Access.CurrentData.AllQueries",
        "file_name": "Access.CurrentData.AllQueries.md",
        "kind": "property",
        "main": "Use the **AllQueries** property to reference the **[AllQueries](Access.AllQueries.md)** collection and its related properties. Read-only **AllQueries** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllQueries",
            "Access.AllQueries.md"
        ]
    },
    {
        "api_name": "Access.CurrentData.AllStoredProcedures",
        "file_name": "Access.CurrentData.AllStoredProcedures.md",
        "kind": "property",
        "main": "Use the **AllStoredProcedures** property to reference the **[AllStoredProcedures](Access.AllStoredProcedures.md)** collection and its related properties. Read-only **AllStoredProcedures** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllStoredProcedures",
            "Access.AllStoredProcedures.md"
        ]
    },
    {
        "api_name": "Access.CurrentData.AllTables",
        "file_name": "Access.CurrentData.AllTables.md",
        "kind": "property",
        "main": "Use the **AllTables** property to reference the **[AllTables](Access.AllTables.md)** collection and its related properties. Read-only **AllTables** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllTables",
            "Access.AllTables.md"
        ]
    },
    {
        "api_name": "Access.CurrentData.AllViews",
        "file_name": "Access.CurrentData.AllViews.md",
        "kind": "property",
        "main": "Use the **AllViews** property to reference the **[AllViews](Access.AllViews.md)** collection and its related properties. Read-only **AllViews** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllViews",
            "Access.AllViews.md"
        ]
    },
    {
        "api_name": "Access.CurrentData",
        "Events": [],
        "file_name": "Access.CurrentData.md",
        "kind": "object",
        "main": "The **CurrentData** object refers to the objects stored in the current database by the source (server) application.\n",
        "Methods": [],
        "Properties": [
            "AllDatabaseDiagrams",
            "AllFunctions",
            "AllQueries",
            "AllStoredProcedures",
            "AllTables",
            "AllViews"
        ]
    },
    {
        "api_name": "Access.CurrentProject.AccessConnection",
        "file_name": "Access.CurrentProject.AccessConnection.md",
        "kind": "property",
        "main": "Use the **AccessConnection** property to return a reference to the current Microsoft ActiveX Data Objects (ADO) **Connection** object and its related properties. Read-only **Connection**.\n",
        "Parameters": [],
        "Return_value": [
            "AccessConnection"
        ]
    },
    {
        "api_name": "Access.CurrentProject.AddSharedImage",
        "file_name": "Access.CurrentProject.AddSharedImage.md",
        "kind": "method",
        "main": "Imports the specified image into the database and adds it to the **[SharedResources](Access.SharedResources.md)** collection.\n",
        "Parameters": [
            "SharedImageName",
            "FileName"
        ],
        "Return_value": [
            "Access.SharedResources.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.AllForms",
        "file_name": "Access.CurrentProject.AllForms.md",
        "kind": "property",
        "main": "Use the **AllForms** property to reference the **[AllForms](Access.AllForms.md)** collection and its related properties. Read-only **AllForms** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllForms",
            "Access.AllForms.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.AllMacros",
        "file_name": "Access.CurrentProject.AllMacros.md",
        "kind": "property",
        "main": "Use the **AllMacros** property to reference the **[AllMacros](Access.allmacros.md)** collection and its related properties. Read-only **AllMacros** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllMacros",
            "Access.allmacros.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.AllModules",
        "file_name": "Access.CurrentProject.AllModules.md",
        "kind": "property",
        "main": "Use the **AllModules** property to reference the **[AllModules](Access.AllModules.md)** collection and its related properties. Read-only **AllModules** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllModules",
            "Access.AllModules.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.AllReports",
        "file_name": "Access.CurrentProject.AllReports.md",
        "kind": "property",
        "main": "Use the **AllReports** property to reference the **[AllReports](Access.AllReports.md)** collection and its related properties. Read-only **AllReports** object.\n",
        "Parameters": [],
        "Return_value": [
            "AllReports",
            "Access.AllReports.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.Application",
        "file_name": "Access.CurrentProject.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.BaseConnectionString",
        "file_name": "Access.CurrentProject.BaseConnectionString.md",
        "kind": "property",
        "main": "Use the **BaseConnectionString** property to return the base connection string for the specified object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "BaseConnectionString"
        ]
    },
    {
        "api_name": "Access.CurrentProject.CloseConnection",
        "file_name": "Access.CurrentProject.CloseConnection.md",
        "kind": "method",
        "main": "Use the **CloseConnection** method to close the current connection between the **CurrentProject** object in a Microsoft Access project (.adp) or Access database and the database specified in the project's base connection string.\n",
        "Parameters": [],
        "Return_value": [
            "CloseConnection",
            "CurrentProject"
        ]
    },
    {
        "api_name": "Access.CurrentProject.Connection",
        "file_name": "Access.CurrentProject.Connection.md",
        "kind": "property",
        "main": "Use the **Connection** property to return a reference to the current ActiveX Data Objects (ADO) **Connection** object and its related properties. Read-only **Connection**.\n",
        "Parameters": [],
        "Return_value": [
            "Connection"
        ]
    },
    {
        "api_name": "Access.CurrentProject.FileFormat",
        "file_name": "Access.CurrentProject.FileFormat.md",
        "kind": "property",
        "main": "Returns an **[AcFileFormat](Access.AcFileFormat.md)** constant indicating the Microsoft Access version format of the specified project. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcFileFormat.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.FullName",
        "file_name": "Access.CurrentProject.FullName.md",
        "kind": "property",
        "main": "Sets or returns the full path (including the file name) of a specific object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CurrentProject.ImportExportSpecifications",
        "file_name": "Access.CurrentProject.ImportExportSpecifications.md",
        "kind": "property",
        "main": "Returns an **[ImportExportSpecifications](Access.ImportExportSpecifications.md)** collection that represents the collection of saved import or export operations for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.ImportExportSpecifications.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.IsConnected",
        "file_name": "Access.CurrentProject.IsConnected.md",
        "kind": "property",
        "main": "Use the **IsConnected** property to determine if the **CurrentProject** object is currently connected. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsConnected",
            "CurrentProject",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CurrentProject.IsTrusted",
        "file_name": "Access.CurrentProject.IsTrusted.md",
        "kind": "property",
        "main": "Gets whether macros and Visual Basic for Applications (VBA) code have been enabled in the current project. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CurrentProject.IsWeb",
        "file_name": "Access.CurrentProject.IsWeb.md",
        "kind": "property",
        "main": "Gets whether the database is a web database. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CurrentProject",
        "Events": [],
        "file_name": "Access.CurrentProject.md",
        "kind": "object",
        "main": "The **CurrentProject** object refers to the project for the current Microsoft Access project (.adp) or Access database.\n",
        "Methods": [
            "AddSharedImage",
            "CloseConnection",
            "OpenConnection",
            "UpdateDependencyInfo"
        ],
        "Properties": [
            "AccessConnection",
            "AllForms",
            "AllMacros",
            "AllModules",
            "AllReports",
            "Application",
            "BaseConnectionString",
            "Connection",
            "FileFormat",
            "FullName",
            "ImportExportSpecifications",
            "IsConnected",
            "IsTrusted",
            "IsWeb",
            "Name",
            "Parent",
            "Path",
            "ProjectType",
            "Properties",
            "RemovePersonalInformation",
            "Resources",
            "WebSite",
            "IsSQLBackend"
        ]
    },
    {
        "api_name": "Access.CurrentProject.Name",
        "file_name": "Access.CurrentProject.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.CurrentProject.OpenConnection",
        "file_name": "Access.CurrentProject.OpenConnection.md",
        "kind": "method",
        "main": "Use the **OpenConnection** method to open an ADO connection to an existing Microsoft Access project (.adp) or Access database as the current Access project or database in the Microsoft Access window.\n",
        "Parameters": [
            "BaseConnectionString",
            "UserID",
            "Password"
        ],
        "Return_value": [
            "OpenConnection"
        ]
    },
    {
        "api_name": "Access.CurrentProject.Parent",
        "file_name": "Access.CurrentProject.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.CurrentProject.Path",
        "file_name": "Access.CurrentProject.Path.md",
        "kind": "property",
        "main": "Use the **Path** property to determine the location where data is stored for a Microsoft Access project (.adp) or Microsoft Access database. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Path",
            "String"
        ]
    },
    {
        "api_name": "Access.CurrentProject.ProjectType",
        "file_name": "Access.CurrentProject.ProjectType.md",
        "kind": "property",
        "main": "Use the **ProjectType** property to determine the type of project that is currently open. Read-only **[AcProjectType](Access.AcProjectType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "ProjectType",
            "Access.AcProjectType.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.Properties",
        "file_name": "Access.CurrentProject.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a **[CurrentProject](Access.CurrentProject.md)** object's **[AccessObjectProperties](Access.AccessObjectProperties.md)** collection. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.CurrentProject.md",
            "Access.AccessObjectProperties.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.RemovePersonalInformation",
        "file_name": "Access.CurrentProject.RemovePersonalInformation.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether personal information about the user is stored in the specified project. **True** if personal information is removed. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.CurrentProject.Resources",
        "file_name": "Access.CurrentProject.Resources.md",
        "kind": "property",
        "main": "Gets the **[SharedResources](Access.SharedResources.md)** collection for the specified object. Read-only **SharedResources**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.SharedResources.md"
        ]
    },
    {
        "api_name": "Access.CurrentProject.UpdateDependencyInfo",
        "file_name": "Access.CurrentProject.UpdateDependencyInfo.md",
        "kind": "method",
        "main": "Updates the dependency information for the database.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.CurrentProject.WebSite",
        "file_name": "Access.CurrentProject.WebSite.md",
        "kind": "property",
        "main": "Gets the Uniform Resource Locator (URL) of the website to which the database has been published. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.About",
        "file_name": "Access.CustomControl.About.md",
        "kind": "property",
        "main": "Returns or sets a **String** representing version and copyright information for an ActiveX control. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.Application",
        "file_name": "Access.CustomControl.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.CustomControl.BorderColor",
        "file_name": "Access.CustomControl.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CustomControl.BorderShade",
        "file_name": "Access.CustomControl.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CustomControl.BorderStyle",
        "file_name": "Access.CustomControl.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.BorderThemeColorIndex",
        "file_name": "Access.CustomControl.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.CustomControl.BorderTint",
        "file_name": "Access.CustomControl.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.CustomControl.BorderWidth",
        "file_name": "Access.CustomControl.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.BottomPadding",
        "file_name": "Access.CustomControl.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.Cancel",
        "file_name": "Access.CustomControl.Cancel.md",
        "kind": "property",
        "main": "Use the **Cancel** property to specify whether a command button is also the **Cancel** button on a form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Cancel",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CustomControl.Class",
        "file_name": "Access.CustomControl.Class.md",
        "kind": "property",
        "main": "Use the **Class** property to specify or determine the class name of an embedded OLE object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Class",
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.Controls",
        "file_name": "Access.CustomControl.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.CustomControl.ControlSource",
        "file_name": "Access.CustomControl.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.ControlTipText",
        "file_name": "Access.CustomControl.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.ControlType",
        "file_name": "Access.CustomControl.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.Custom",
        "file_name": "Access.CustomControl.Custom.md",
        "kind": "property",
        "main": "Returns or sets a **String** representing the custom properties dialog box for an ActiveX control. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.Default",
        "file_name": "Access.CustomControl.Default.md",
        "kind": "property",
        "main": "Use the **Default** property to specify whether a command button is the default button on a form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Default",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CustomControl.DisplayWhen",
        "file_name": "Access.CustomControl.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.Enabled",
        "file_name": "Access.CustomControl.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CustomControl.Enter",
        "file_name": "Access.CustomControl.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.CustomControl.EventProcPrefix",
        "file_name": "Access.CustomControl.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.Exit",
        "file_name": "Access.CustomControl.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.CustomControl.GotFocus",
        "file_name": "Access.CustomControl.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineColor",
        "file_name": "Access.CustomControl.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineStyleBottom",
        "file_name": "Access.CustomControl.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineStyleLeft",
        "file_name": "Access.CustomControl.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineStyleRight",
        "file_name": "Access.CustomControl.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineStyleTop",
        "file_name": "Access.CustomControl.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineWidthBottom",
        "file_name": "Access.CustomControl.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineWidthLeft",
        "file_name": "Access.CustomControl.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineWidthRight",
        "file_name": "Access.CustomControl.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.GridlineWidthTop",
        "file_name": "Access.CustomControl.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.Height",
        "file_name": "Access.CustomControl.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.HelpContextId",
        "file_name": "Access.CustomControl.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.CustomControl.HorizontalAnchor",
        "file_name": "Access.CustomControl.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the control is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.CustomControl.InSelection",
        "file_name": "Access.CustomControl.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CustomControl.IsVisible",
        "file_name": "Access.CustomControl.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CustomControl.Layout",
        "file_name": "Access.CustomControl.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified control. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.CustomControl.LayoutID",
        "file_name": "Access.CustomControl.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified control. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.CustomControl.Left",
        "file_name": "Access.CustomControl.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.LeftPadding",
        "file_name": "Access.CustomControl.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.Locked",
        "file_name": "Access.CustomControl.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CustomControl.LostFocus",
        "file_name": "Access.CustomControl.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.CustomControl",
        "Events": [
            "Enter",
            "Exit",
            "GotFocus",
            "LostFocus",
            "Updated"
        ],
        "file_name": "Access.CustomControl.md",
        "kind": "object",
        "main": "When setting the properties of an ActiveX control, you may need or prefer to use the control's custom properties dialog box. This custom properties dialog box provides an alternative to the list of properties in the Microsoft Access property sheet for setting ActiveX control properties in Design view.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "About",
            "Application",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Cancel",
            "Class",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "Custom",
            "Default",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Locked",
            "Name",
            "Object",
            "ObjectPalette",
            "ObjectVerbs",
            "ObjectVerbsCount",
            "OldBorderStyle",
            "OldValue",
            "OLEClass",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnLostFocus",
            "OnUpdated",
            "Parent",
            "Properties",
            "RightPadding",
            "Section",
            "SpecialEffect",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "Value",
            "VarOleObject",
            "Verb",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.CustomControl.Move",
        "file_name": "Access.CustomControl.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.CustomControl.Name",
        "file_name": "Access.CustomControl.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.Object",
        "file_name": "Access.CustomControl.Object.md",
        "kind": "property",
        "main": "Use the **Object** property in Visual Basic to return a reference to the ActiveX object that is associated with a linked or embedded OLE object in a control. By using this reference, you can access the properties or invoke the methods of the OLE object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.CustomControl.ObjectPalette",
        "file_name": "Access.CustomControl.ObjectPalette.md",
        "kind": "property",
        "main": "The **ObjectPalette** property specifies the palette in the application used to create an OLE object. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectPalette",
            "Variant"
        ]
    },
    {
        "api_name": "Access.CustomControl.ObjectVerbs",
        "file_name": "Access.CustomControl.ObjectVerbs.md",
        "kind": "property",
        "main": "Use the **ObjectVerbs** property in Visual Basic to determine the list of verbs that an OLE object supports. Read-only **String**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "ObjectVerbs",
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.ObjectVerbsCount",
        "file_name": "Access.CustomControl.ObjectVerbsCount.md",
        "kind": "property",
        "main": "Use the **ObjectVerbsCount** property in Visual Basic to determine the number of verbs supported by an OLE object. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectVerbsCount",
            "Long"
        ]
    },
    {
        "api_name": "Access.CustomControl.OldBorderStyle",
        "file_name": "Access.CustomControl.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.OldValue",
        "file_name": "Access.CustomControl.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.CustomControl.OLEClass",
        "file_name": "Access.CustomControl.OLEClass.md",
        "kind": "property",
        "main": "Use the **OLEClass** property to obtain a description of the kind of OLE object contained in a chart control or an unbound object frame. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "OLEClass",
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.OnEnter",
        "file_name": "Access.CustomControl.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.OnExit",
        "file_name": "Access.CustomControl.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.OnGotFocus",
        "file_name": "Access.CustomControl.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.OnLostFocus",
        "file_name": "Access.CustomControl.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.OnUpdated",
        "file_name": "Access.CustomControl.OnUpdated.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Updated** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.Parent",
        "file_name": "Access.CustomControl.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.CustomControl.Properties",
        "file_name": "Access.CustomControl.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.CustomControl.Requery",
        "file_name": "Access.CustomControl.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.CustomControl.RightPadding",
        "file_name": "Access.CustomControl.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.Section",
        "file_name": "Access.CustomControl.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.SetFocus",
        "file_name": "Access.CustomControl.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.CustomControl.SizeToFit",
        "file_name": "Access.CustomControl.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.CustomControl.SpecialEffect",
        "file_name": "Access.CustomControl.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.CustomControl.TabIndex",
        "file_name": "Access.CustomControl.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.TabStop",
        "file_name": "Access.CustomControl.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CustomControl.Tag",
        "file_name": "Access.CustomControl.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.CustomControl.Top",
        "file_name": "Access.CustomControl.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.TopPadding",
        "file_name": "Access.CustomControl.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.CustomControl.Updated",
        "file_name": "Access.CustomControl.Updated.md",
        "kind": "event",
        "main": "The **Updated** event occurs when an OLE object's data has been modified.\n",
        "Parameters": [
            "Code"
        ],
        "Return_value": [
            "Updated"
        ]
    },
    {
        "api_name": "Access.CustomControl.Value",
        "file_name": "Access.CustomControl.Value.md",
        "kind": "property",
        "main": "Gets or sets the value displayed in the specified control. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.CustomControl.VarOleObject",
        "file_name": "Access.CustomControl.VarOleObject.md",
        "kind": "property",
        "main": "Gets a pointer to an **IOLEObject** that represents the memory address of an OLE object. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "IOLEObject",
            "Variant"
        ]
    },
    {
        "api_name": "Access.CustomControl.Verb",
        "file_name": "Access.CustomControl.Verb.md",
        "kind": "property",
        "main": "Use the **Verb** property to specify the operation to perform when an OLE object is activated, which is permitted when the control's **Action** property is set to **acOLEActivate**. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Verb",
            "Action",
            "acOLEActivate",
            "Long"
        ]
    },
    {
        "api_name": "Access.CustomControl.VerticalAnchor",
        "file_name": "Access.CustomControl.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified control is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.CustomControl.Visible",
        "file_name": "Access.CustomControl.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.CustomControl.Width",
        "file_name": "Access.CustomControl.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.DependencyInfo.Dependants",
        "file_name": "Access.DependencyInfo.Dependants.md",
        "kind": "property",
        "main": "Returns a **[DependencyObjects](Access.DependencyObjects.md)** collection that represents the objects that depend on the specified **[AccessObject](Access.AccessObject.md)** object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.DependencyObjects.md",
            "Access.AccessObject.md"
        ]
    },
    {
        "api_name": "Access.DependencyInfo.Dependencies",
        "file_name": "Access.DependencyInfo.Dependencies.md",
        "kind": "property",
        "main": "Returns a **[DependencyObjects](Access.DependencyObjects.md)** collection that represents the objects that the specified **[AccessObject](Access.AccessObject.md)** object depends on. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.DependencyObjects.md",
            "Access.AccessObject.md"
        ]
    },
    {
        "api_name": "Access.DependencyInfo.InsufficientPermissions",
        "file_name": "Access.DependencyInfo.InsufficientPermissions.md",
        "kind": "property",
        "main": "Returns a **[DependencyObjects](Access.DependencyObjects.md)** collection that contains a collection of objects to which you don't have sufficient permissions to check for dependencies. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.DependencyObjects.md"
        ]
    },
    {
        "api_name": "Access.DependencyInfo",
        "Events": [],
        "file_name": "Access.DependencyInfo.md",
        "kind": "object",
        "main": "Represents the dependency information for an **[AccessObject](Access.AccessObject.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Dependants",
            "Dependencies",
            "InsufficientPermissions",
            "OutOfDateObjects",
            "Parent",
            "UnsupportedObjects"
        ]
    },
    {
        "api_name": "Access.DependencyInfo.OutOfDateObjects",
        "file_name": "Access.DependencyInfo.OutOfDateObjects.md",
        "kind": "property",
        "main": "Returns a **[DependencyObjects](Access.DependencyObjects.md)** collection that represents the **[AccessObject](Access.AccessObject.md)** objects for which the dependency information is outdated. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.DependencyObjects.md",
            "Access.AccessObject.md"
        ]
    },
    {
        "api_name": "Access.DependencyInfo.Parent",
        "file_name": "Access.DependencyInfo.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.DependencyInfo.UnsupportedObjects",
        "file_name": "Access.DependencyInfo.UnsupportedObjects.md",
        "kind": "property",
        "main": "Returns a **[DependencyObjects](Access.DependencyObjects.md)** collection that contains objects that cannot be searched for dependency. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.DependencyObjects.md"
        ]
    },
    {
        "api_name": "Access.DependencyObjects.Application",
        "file_name": "Access.DependencyObjects.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.DependencyObjects.Count",
        "file_name": "Access.DependencyObjects.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.DependencyObjects.Item",
        "file_name": "Access.DependencyObjects.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **AccessObject**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "AccessObject"
        ]
    },
    {
        "api_name": "Access.DependencyObjects",
        "Events": [],
        "file_name": "Access.DependencyObjects.md",
        "kind": "object",
        "main": "Represents the collection of **[AccessObject](Access.AccessObject.md)** objects that a **[DependencyInfo](Access.DependencyInfo.md)** object contains.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.DependencyObjects.Parent",
        "file_name": "Access.DependencyObjects.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.AddMenu",
        "file_name": "Access.DoCmd.AddMenu.md",
        "kind": "method",
        "main": "The **AddMenu** method carries out the AddMenu action in Visual Basic.\n",
        "Parameters": [
            "MenuName",
            "MenuMacroName",
            "StatusBarText"
        ],
        "Return_value": [
            "AddMenu"
        ]
    },
    {
        "api_name": "Access.DoCmd.ApplyFilter",
        "file_name": "Access.DoCmd.ApplyFilter.md",
        "kind": "method",
        "main": "The **ApplyFilter** method carries out the ApplyFilter action in Visual Basic.\n",
        "Parameters": [
            "FilterName",
            "WhereCondition",
            "ControlName"
        ],
        "Return_value": [
            "ApplyFilter"
        ]
    },
    {
        "api_name": "Access.DoCmd.Beep",
        "file_name": "Access.DoCmd.Beep.md",
        "kind": "method",
        "main": "The **Beep** method carries out the Beep action in Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "Beep"
        ]
    },
    {
        "api_name": "Access.DoCmd.BrowseTo",
        "file_name": "Access.DoCmd.BrowseTo.md",
        "kind": "method",
        "main": "The **BrowseTo** method performs the BrowseTo action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "PathtoSubformControl",
            "WhereCondition",
            "Page",
            "DataMode"
        ],
        "Return_value": [
            "BrowseTo"
        ]
    },
    {
        "api_name": "Access.DoCmd.CancelEvent",
        "file_name": "Access.DoCmd.CancelEvent.md",
        "kind": "method",
        "main": "The **CancelEvent** method carries out the CancelEvent action in Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "CancelEvent"
        ]
    },
    {
        "api_name": "Access.DoCmd.ClearMacroError",
        "file_name": "Access.DoCmd.ClearMacroError.md",
        "kind": "method",
        "main": "Removes information about an error that is stored in the **MacroError** object.\n",
        "Parameters": [],
        "Return_value": [
            "MacroError"
        ]
    },
    {
        "api_name": "Access.DoCmd.Close",
        "file_name": "Access.DoCmd.Close.md",
        "kind": "method",
        "main": "The **Close** method carries out the Close action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "Save"
        ],
        "Return_value": [
            "Close"
        ]
    },
    {
        "api_name": "Access.DoCmd.CloseDatabase",
        "file_name": "Access.DoCmd.CloseDatabase.md",
        "kind": "method",
        "main": "Closes the current database.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.CopyDatabaseFile",
        "file_name": "Access.DoCmd.CopyDatabaseFile.md",
        "kind": "method",
        "main": "Copies the database connected to the current project to a Microsoft SQL Server database file for export.\n",
        "Parameters": [
            "DatabaseFileName",
            "OverwriteExistingFile",
            "DisconnectAllUsers"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.CopyObject",
        "file_name": "Access.DoCmd.CopyObject.md",
        "kind": "method",
        "main": "The **CopyObject** method carries out the CopyObject action in Visual Basic.\n",
        "Parameters": [
            "DestinationDatabase",
            "NewName",
            "SourceObjectType",
            "SourceObjectName"
        ],
        "Return_value": [
            "CopyObject"
        ]
    },
    {
        "api_name": "Access.DoCmd.DeleteObject",
        "file_name": "Access.DoCmd.DeleteObject.md",
        "kind": "method",
        "main": "The **DeleteObject** method carries out the DeleteObject action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName"
        ],
        "Return_value": [
            "DeleteObject"
        ]
    },
    {
        "api_name": "Access.DoCmd.DoMenuItem",
        "file_name": "Access.DoCmd.DoMenuItem.md",
        "kind": "method",
        "main": "Displays the appropriate menu or toolbar command for Microsoft Access.\n",
        "Parameters": [
            "MenuBar",
            "MenuName",
            "Command",
            "Subcommand",
            "Version"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.Echo",
        "file_name": "Access.DoCmd.Echo.md",
        "kind": "method",
        "main": "Carries out the Echo action in Visual Basic.\n",
        "Parameters": [
            "EchoOn",
            "StatusBarText"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.FindNext",
        "file_name": "Access.DoCmd.FindNext.md",
        "kind": "method",
        "main": "The **FindNext** method carries out the FindNext action in Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "FindNext"
        ]
    },
    {
        "api_name": "Access.DoCmd.FindRecord",
        "file_name": "Access.DoCmd.FindRecord.md",
        "kind": "method",
        "main": "The **FindRecord** method carries out the FindRecord action in Visual Basic.\n",
        "Parameters": [
            "FindWhat",
            "Match",
            "MatchCase",
            "Search",
            "SearchAsFormatted",
            "OnlyCurrentField",
            "FindFirst"
        ],
        "Return_value": [
            "FindRecord"
        ]
    },
    {
        "api_name": "Access.DoCmd.GoToControl",
        "file_name": "Access.DoCmd.GoToControl.md",
        "kind": "method",
        "main": "The **GoToControl** method performs the GoToControl action in Visual Basic.\n",
        "Parameters": [
            "ControlName"
        ],
        "Return_value": [
            "GoToControl"
        ]
    },
    {
        "api_name": "Access.DoCmd.GoToPage",
        "file_name": "Access.DoCmd.GoToPage.md",
        "kind": "method",
        "main": "Carries out the GoToPage action in Visual Basic. \n",
        "Parameters": [
            "PageNumber",
            "Right",
            "Down"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.GoToRecord",
        "file_name": "Access.DoCmd.GoToRecord.md",
        "kind": "method",
        "main": "The **GoToRecord** method carries out the GoToRecord action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "Record",
            "Offset"
        ],
        "Return_value": [
            "GoToRecord"
        ]
    },
    {
        "api_name": "Access.DoCmd.Hourglass",
        "file_name": "Access.DoCmd.Hourglass.md",
        "kind": "method",
        "main": "The **Hourglass** method carries out the Hourglass action in Visual Basic.\n",
        "Parameters": [
            "HourglassOn"
        ],
        "Return_value": [
            "Hourglass"
        ]
    },
    {
        "api_name": "Access.DoCmd.LockNavigationPane",
        "file_name": "Access.DoCmd.LockNavigationPane.md",
        "kind": "method",
        "main": "Use the **LockNavigationPane** method to prevent users from deleting database objects that are displayed in the navigation pane.\n",
        "Parameters": [
            "Lock"
        ],
        "Return_value": [
            "LockNavigationPane"
        ]
    },
    {
        "api_name": "Access.DoCmd.Maximize",
        "file_name": "Access.DoCmd.Maximize.md",
        "kind": "method",
        "main": "The **Maximize** method carries out the Maximize action in Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "Maximize"
        ]
    },
    {
        "api_name": "Access.DoCmd",
        "Events": [],
        "file_name": "Access.DoCmd.md",
        "kind": "object",
        "main": "Use the methods of the **DoCmd** object to run Microsoft Office Access actions from Visual Basic. An action performs tasks such as closing windows, opening forms, and setting the value of controls.\n",
        "Methods": [
            "AddMenu",
            "ApplyFilter",
            "Beep",
            "BrowseTo",
            "CancelEvent",
            "ClearMacroError",
            "Close",
            "CloseDatabase",
            "CopyDatabaseFile",
            "CopyObject",
            "DeleteObject",
            "DoMenuItem",
            "Echo",
            "FindNext",
            "FindRecord",
            "GoToControl",
            "GoToPage",
            "GoToRecord",
            "Hourglass",
            "LockNavigationPane",
            "Maximize",
            "Minimize",
            "MoveSize",
            "NavigateTo",
            "OpenDataAccessPage",
            "OpenDiagram",
            "OpenForm",
            "OpenFunction",
            "OpenModule",
            "OpenQuery",
            "OpenReport",
            "OpenStoredProcedure",
            "OpenTable",
            "OpenView",
            "OutputTo",
            "PrintOut",
            "Quit",
            "RefreshRecord",
            "Rename",
            "RepaintObject",
            "Requery",
            "Restore",
            "RunCommand",
            "RunDataMacro",
            "RunMacro",
            "RunSavedImportExport",
            "RunSQL",
            "Save",
            "SearchForRecord",
            "SelectObject",
            "SendObject",
            "SetDisplayedCategories",
            "SetFilter",
            "SetMenuItem",
            "SetOrderBy",
            "SetParameter",
            "SetProperty",
            "SetWarnings",
            "ShowAllRecords",
            "ShowToolbar",
            "SingleStep",
            "TransferDatabase",
            "TransferSharePointList",
            "TransferSpreadsheet",
            "TransferSQLDatabase",
            "TransferText"
        ],
        "Properties": []
    },
    {
        "api_name": "Access.DoCmd.Minimize",
        "file_name": "Access.DoCmd.Minimize.md",
        "kind": "method",
        "main": "The **Minimize** method carries out the Minimize action in Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "Minimize"
        ]
    },
    {
        "api_name": "Access.DoCmd.MoveSize",
        "file_name": "Access.DoCmd.MoveSize.md",
        "kind": "method",
        "main": "The **MoveSize** method carries out the MoveSize action in Visual Basic.\n",
        "Parameters": [
            "Right",
            "Down",
            "Width",
            "Height"
        ],
        "Return_value": [
            "MoveSize"
        ]
    },
    {
        "api_name": "Access.DoCmd.NavigateTo",
        "file_name": "Access.DoCmd.NavigateTo.md",
        "kind": "method",
        "main": "Use the **NavigateTo** method to control the display of database objects in the navigation pane. \n",
        "Parameters": [
            "Category",
            "Group"
        ],
        "Return_value": [
            "NavigateTo"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenDataAccessPage",
        "file_name": "Access.DoCmd.OpenDataAccessPage.md",
        "kind": "method",
        "main": "The **OpenDataAccessPage** method carries out the OpenDataAccessPage action in Visual Basic.\n",
        "Parameters": [
            "DataAccessPageName",
            "View"
        ],
        "Return_value": [
            "OpenDataAccessPage"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenDiagram",
        "file_name": "Access.DoCmd.OpenDiagram.md",
        "kind": "method",
        "main": "The **OpenDiagram** method carries out the OpenDiagram action in Visual Basic.\n",
        "Parameters": [
            "DiagramName"
        ],
        "Return_value": [
            "OpenDiagram"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenForm",
        "file_name": "Access.DoCmd.OpenForm.md",
        "kind": "method",
        "main": "The **OpenForm** method carries out the OpenForm action in Visual Basic.\n",
        "Parameters": [
            "FormName",
            "View",
            "FilterName",
            "WhereCondition",
            "DataMode",
            "WindowMode",
            "OpenArgs"
        ],
        "Return_value": [
            "OpenForm"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenFunction",
        "file_name": "Access.DoCmd.OpenFunction.md",
        "kind": "method",
        "main": "Opens a user-defined function in a Microsoft SQL Server database for viewing in Microsoft Access.\n",
        "Parameters": [
            "FunctionName",
            "View",
            "DataMode"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.OpenModule",
        "file_name": "Access.DoCmd.OpenModule.md",
        "kind": "method",
        "main": "The **OpenModule** method carries out the OpenModule action in Visual Basic.\n",
        "Parameters": [
            "ModuleName",
            "ProcedureName"
        ],
        "Return_value": [
            "OpenModule"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenQuery",
        "file_name": "Access.DoCmd.OpenQuery.md",
        "kind": "method",
        "main": "The **OpenQuery** method carries out the OpenQuery action in Visual Basic.\n",
        "Parameters": [
            "QueryName",
            "View",
            "DataMode"
        ],
        "Return_value": [
            "OpenQuery"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenReport",
        "file_name": "Access.DoCmd.OpenReport.md",
        "kind": "method",
        "main": "The **OpenReport** method carries out the OpenReport action in Visual Basic.\n",
        "Parameters": [
            "ReportName",
            "View",
            "FilterName",
            "WhereCondition",
            "WindowMode",
            "OpenArgs"
        ],
        "Return_value": [
            "OpenReport"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenStoredProcedure",
        "file_name": "Access.DoCmd.OpenStoredProcedure.md",
        "kind": "method",
        "main": "The **OpenStoredProcedure** method carries out the OpenStoredProcedure action in Visual Basic.\n",
        "Parameters": [
            "ProcedureName",
            "View",
            "DataMode"
        ],
        "Return_value": [
            "OpenStoredProcedure"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenTable",
        "file_name": "Access.DoCmd.OpenTable.md",
        "kind": "method",
        "main": "The **OpenTable** method carries out the OpenTable action in Visual Basic.\n",
        "Parameters": [
            "TableName",
            "View",
            "DataMode"
        ],
        "Return_value": [
            "OpenTable"
        ]
    },
    {
        "api_name": "Access.DoCmd.OpenView",
        "file_name": "Access.DoCmd.OpenView.md",
        "kind": "method",
        "main": "The **OpenView** method carries out the OpenView action in Visual Basic.\n",
        "Parameters": [
            "ViewName",
            "View",
            "DataMode"
        ],
        "Return_value": [
            "OpenView"
        ]
    },
    {
        "api_name": "Access.DoCmd.OutputTo",
        "file_name": "Access.DoCmd.OutputTo.md",
        "kind": "method",
        "main": "The **OutputTo** method carries out the OutputTo action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "OutputFormat",
            "OutputFile",
            "AutoStart",
            "TemplateFile",
            "Encoding",
            "OutputQuality"
        ],
        "Return_value": [
            "OutputTo"
        ]
    },
    {
        "api_name": "Access.DoCmd.PrintOut",
        "file_name": "Access.DoCmd.PrintOut.md",
        "kind": "method",
        "main": "The **PrintOut** method carries out the PrintOut action in Visual Basic.\n",
        "Parameters": [
            "PrintRange",
            "PageFrom",
            "PageTo",
            "PrintQuality",
            "Copies",
            "CollateCopies"
        ],
        "Return_value": [
            "PrintOut"
        ]
    },
    {
        "api_name": "Access.DoCmd.Quit",
        "file_name": "Access.DoCmd.Quit.md",
        "kind": "method",
        "main": "The **Quit** method quits Microsoft Access. You can select one of several options for saving a database object before quitting.\n",
        "Parameters": [
            "Options"
        ],
        "Return_value": [
            "Quit"
        ]
    },
    {
        "api_name": "Access.DoCmd.RefreshRecord",
        "file_name": "Access.DoCmd.RefreshRecord.md",
        "kind": "method",
        "main": "The **RefreshRecord** method performs the RefreshRecord macro operation from Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "RefreshRecord"
        ]
    },
    {
        "api_name": "Access.DoCmd.Rename",
        "file_name": "Access.DoCmd.Rename.md",
        "kind": "method",
        "main": "The **Rename** method carries out the Rename action in Visual Basic.\n",
        "Parameters": [
            "NewName",
            "ObjectType",
            "OldName"
        ],
        "Return_value": [
            "Rename"
        ]
    },
    {
        "api_name": "Access.DoCmd.RepaintObject",
        "file_name": "Access.DoCmd.RepaintObject.md",
        "kind": "method",
        "main": "The **RepaintObject** method carries out the RepaintObject action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName"
        ],
        "Return_value": [
            "RepaintObject"
        ]
    },
    {
        "api_name": "Access.DoCmd.Requery",
        "file_name": "Access.DoCmd.Requery.md",
        "kind": "method",
        "main": "Carries out the Requery action in Visual Basic.\n",
        "Parameters": [
            "ControlName"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.Restore",
        "file_name": "Access.DoCmd.Restore.md",
        "kind": "method",
        "main": "The **Restore** method carries out the Restore action in Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "Restore"
        ]
    },
    {
        "api_name": "Access.DoCmd.RunCommand",
        "file_name": "Access.DoCmd.RunCommand.md",
        "kind": "method",
        "main": "The **RunCommand** method runs a built-in command.\n",
        "Parameters": [
            "Command"
        ],
        "Return_value": [
            "RunCommand"
        ]
    },
    {
        "api_name": "Access.DoCmd.RunDataMacro",
        "file_name": "Access.DoCmd.RunDataMacro.md",
        "kind": "method",
        "main": "Use the **RunDataMacro** method to run a named data macro from Visual Basic.\n",
        "Parameters": [
            "MacroName"
        ],
        "Return_value": [
            "RunDataMacro"
        ]
    },
    {
        "api_name": "Access.DoCmd.RunMacro",
        "file_name": "Access.DoCmd.RunMacro.md",
        "kind": "method",
        "main": "The **RunMacro** method carries out the RunMacro action in Visual Basic.\n",
        "Parameters": [
            "MacroName",
            "RepeatCount",
            "RepeatExpression"
        ],
        "Return_value": [
            "RunMacro"
        ]
    },
    {
        "api_name": "Access.DoCmd.RunSavedImportExport",
        "file_name": "Access.DoCmd.RunSavedImportExport.md",
        "kind": "method",
        "main": "Run a saved import or export specification.\n",
        "Parameters": [
            "SavedImportExportName"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.RunSQL",
        "file_name": "Access.DoCmd.RunSQL.md",
        "kind": "method",
        "main": "The **RunSQL** method carries out the RunSQL action in Visual Basic.\n",
        "Parameters": [
            "SQLStatement",
            "UseTransaction"
        ],
        "Return_value": [
            "RunSQL"
        ]
    },
    {
        "api_name": "Access.DoCmd.Save",
        "file_name": "Access.DoCmd.Save.md",
        "kind": "method",
        "main": "The **Save** method carries out the Save action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName"
        ],
        "Return_value": [
            "Save"
        ]
    },
    {
        "api_name": "Access.DoCmd.SearchForRecord",
        "file_name": "Access.DoCmd.SearchForRecord.md",
        "kind": "method",
        "main": "Use the **SearchForRecord** method to search for a specific record in a table, query, form, or report.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "Record",
            "WhereCondition"
        ],
        "Return_value": [
            "SearchForRecord"
        ]
    },
    {
        "api_name": "Access.DoCmd.SelectObject",
        "file_name": "Access.DoCmd.SelectObject.md",
        "kind": "method",
        "main": "The **SelectObject** method carries out the SelectObject action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "InNavigationPane"
        ],
        "Return_value": [
            "SelectObject"
        ]
    },
    {
        "api_name": "Access.DoCmd.SendObject",
        "file_name": "Access.DoCmd.SendObject.md",
        "kind": "method",
        "main": "The **SendObject** method carries out the SendObject action in Visual Basic.\n",
        "Parameters": [
            "ObjectType",
            "ObjectName",
            "OutputFormat",
            "To",
            "Cc",
            "Bcc",
            "Subject",
            "MessageText",
            "EditMessage",
            "TemplateFile"
        ],
        "Return_value": [
            "SendObject"
        ]
    },
    {
        "api_name": "Access.DoCmd.SetDisplayedCategories",
        "file_name": "Access.DoCmd.SetDisplayedCategories.md",
        "kind": "method",
        "main": "Specifies which categories are displayed under **Navigate to Category** in the title bar of the navigation pane. \n",
        "Parameters": [
            "Show",
            "Category"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.SetFilter",
        "file_name": "Access.DoCmd.SetFilter.md",
        "kind": "method",
        "main": "Use the **SetFilter** method to apply a filter to the records in the active datasheet, form, report, or table.\n",
        "Parameters": [
            "FilterName",
            "WhereCondition",
            "ControlName"
        ],
        "Return_value": [
            "SetFilter"
        ]
    },
    {
        "api_name": "Access.DoCmd.SetMenuItem",
        "file_name": "Access.DoCmd.SetMenuItem.md",
        "kind": "method",
        "main": "The **SetMenuItem** method carries out the SetMenuItem action in Visual Basic.\n",
        "Parameters": [
            "MenuIndex",
            "CommandIndex",
            "SubcommandIndex",
            "Flag"
        ],
        "Return_value": [
            "SetMenuItem"
        ]
    },
    {
        "api_name": "Access.DoCmd.SetOrderBy",
        "file_name": "Access.DoCmd.SetOrderBy.md",
        "kind": "method",
        "main": "Use the **SetOrderBy** method to apply a sort to the active datasheet, form, report, or table.\n",
        "Parameters": [
            "OrderBy",
            "ControlName"
        ],
        "Return_value": [
            "SetOrderBy"
        ]
    },
    {
        "api_name": "Access.DoCmd.SetParameter",
        "file_name": "Access.DoCmd.SetParameter.md",
        "kind": "method",
        "main": "Use the **SetParameter** method to create a parameter for use by the **[BrowseTo](Access.DoCmd.BrowseTo.md)**, **[OpenForm](Access.DoCmd.OpenForm.md)**, **[OpenQuery](Access.DoCmd.OpenQuery.md)**, **[OpenReport](Access.DoCmd.OpenReport.md)**, or **[RunDataMacro](Access.DoCmd.RunDataMacro.md)** methods.\n",
        "Parameters": [
            "Name",
            "Expression"
        ],
        "Return_value": [
            "SetParameter",
            "Access.DoCmd.BrowseTo.md",
            "Access.DoCmd.OpenForm.md",
            "Access.DoCmd.OpenQuery.md",
            "Access.DoCmd.OpenReport.md",
            "Access.DoCmd.RunDataMacro.md"
        ]
    },
    {
        "api_name": "Access.DoCmd.SetProperty",
        "file_name": "Access.DoCmd.SetProperty.md",
        "kind": "method",
        "main": "The **SetProperty** method carries out the SetProperty action in Visual Basic.\n",
        "Parameters": [
            "ControlName",
            "Property",
            "Value"
        ],
        "Return_value": [
            "SetProperty"
        ]
    },
    {
        "api_name": "Access.DoCmd.SetWarnings",
        "file_name": "Access.DoCmd.SetWarnings.md",
        "kind": "method",
        "main": "The **SetWarnings** method carries out the SetWarnings action in Visual Basic.\n",
        "Parameters": [
            "WarningsOn"
        ],
        "Return_value": [
            "SetWarnings"
        ]
    },
    {
        "api_name": "Access.DoCmd.ShowAllRecords",
        "file_name": "Access.DoCmd.ShowAllRecords.md",
        "kind": "method",
        "main": "The **ShowAllRecords** method carries out the ShowAllRecords action in Visual Basic.\n",
        "Parameters": [],
        "Return_value": [
            "ShowAllRecords"
        ]
    },
    {
        "api_name": "Access.DoCmd.ShowToolbar",
        "file_name": "Access.DoCmd.ShowToolbar.md",
        "kind": "method",
        "main": "The **ShowToolbar** method carries out the ShowToolbar action in Visual Basic.\n",
        "Parameters": [
            "ToolbarName",
            "Show"
        ],
        "Return_value": [
            "ShowToolbar"
        ]
    },
    {
        "api_name": "Access.DoCmd.SingleStep",
        "file_name": "Access.DoCmd.SingleStep.md",
        "kind": "method",
        "main": "Pauses macro execution and opens the **Macro Single Step** dialog box.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.TransferDatabase",
        "file_name": "Access.DoCmd.TransferDatabase.md",
        "kind": "method",
        "main": "The **TransferDatabase** method carries out the TransferDatabase action in Visual Basic.\n",
        "Parameters": [
            "TransferType",
            "DatabaseType",
            "DatabaseName",
            "ObjectType",
            "Source",
            "Destination",
            "StructureOnly",
            "StoreLogin"
        ],
        "Return_value": [
            "TransferDatabase"
        ]
    },
    {
        "api_name": "Access.DoCmd.TransferSharePointList",
        "file_name": "Access.DoCmd.TransferSharePointList.md",
        "kind": "method",
        "main": "Use the **TransferSharePointList** method to import or link data from a SharePoint Foundation site.\n",
        "Parameters": [
            "TransferType",
            "SiteAddress",
            "ListID",
            "ViewID",
            "TableName",
            "GetLookupDisplayValues"
        ],
        "Return_value": [
            "TransferSharePointList"
        ]
    },
    {
        "api_name": "Access.DoCmd.TransferSpreadsheet",
        "file_name": "Access.DoCmd.TransferSpreadsheet.md",
        "kind": "method",
        "main": "The **TransferSpreadsheet** method carries out the TransferSpreadsheet action in Visual Basic.\n",
        "Parameters": [
            "TransferType",
            "SpreadsheetType",
            "TableName",
            "FileName",
            "HasFieldNames",
            "Range",
            "UseOA"
        ],
        "Return_value": [
            "TransferSpreadsheet"
        ]
    },
    {
        "api_name": "Access.DoCmd.TransferSQLDatabase",
        "file_name": "Access.DoCmd.TransferSQLDatabase.md",
        "kind": "method",
        "main": "Transfers the entire specified Microsoft SQL Server database to another SQL Server database.\n",
        "Parameters": [
            "Server",
            "Database",
            "UseTrustedConnection",
            "Login",
            "Password",
            "TransferCopyData"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.DoCmd.TransferText",
        "file_name": "Access.DoCmd.TransferText.md",
        "kind": "method",
        "main": "The **TransferText** method carries out the TransferText action in Visual Basic.\n",
        "Parameters": [
            "TransferType",
            "SpecificationName",
            "TableName",
            "FileName",
            "HasFieldNames",
            "HTMLTableName",
            "CodePage Identifiers"
        ],
        "Return_value": [
            "TransferText"
        ]
    },
    {
        "api_name": "Access.EdgeBrowserControl.BeforeNavigate",
        "file_name": "Access.EdgeBrowserControl.BeforeNavigate.md",
        "kind": "event",
        "main": "Occurs before navigation occurs in the given **EdgeBrowserControl**.\n",
        "Parameters": [
            "URL",
            "Cancel"
        ],
        "Return_value": [
            "EdgeBrowserControl"
        ]
    },
    {
        "api_name": "Access.EdgeBrowserControl.DocumentComplete",
        "file_name": "Access.EdgeBrowserControl.DocumentComplete.md",
        "kind": "event",
        "main": "Occurs when a document is completely loaded and initialized.\n",
        "Parameters": [
            "URL"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.EdgeBrowserControl.ExecuteJavascript",
        "file_name": "Access.EdgeBrowserControl.ExecuteJavascript.md",
        "kind": "method",
        "main": "The ExecuteJavascript method executes JavaScript inside the browser control.\n",
        "Parameters": [
            "script"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.EdgeBrowserControl",
        "Events": [
            "AfterUpdate",
            "BeforeNavigate",
            "BeforeUpdate",
            "Change",
            "Click",
            "DblClick",
            "Dirty",
            "DocumentComplete",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "NavigateError",
            "Updated"
        ],
        "file_name": "Access.EdgeBrowserControl.md",
        "kind": "object",
        "main": "Represents a web browser control on a form based on Edge's WebView2.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo",
            "ExecuteJavascript",
            "RetrieveJavascriptValue",
            "Navigate",
            "Refresh"
        ],
        "Properties": [
            "Application",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "Hyperlink",
            "InSelection",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "LocationURL",
            "Name",
            "OldValue",
            "OnBeforeNavigate",
            "OnDocumentComplete",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnNavigateError",
            "OnUpdated",
            "Parent",
            "Progress",
            "Properties",
            "ReadyState",
            "RightPadding",
            "ScrollBars",
            "ScrollLeft",
            "ScrollTop",
            "Section",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "Transform",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width",
            "TrustedDomains"
        ]
    },
    {
        "api_name": "Access.EdgeBrowserControl.Navigate",
        "file_name": "Access.EdgeBrowserControl.Navigate.md",
        "kind": "method",
        "main": "Navigates the specified browser to the target URL.\n",
        "Parameters": [
            "url"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.EdgeBrowserControl.NavigateError",
        "file_name": "Access.EdgeBrowserControl.NavigateError.md",
        "kind": "event",
        "main": "Occurs when an error occurs during navigation.\n",
        "Parameters": [
            "URL",
            "StatusCode"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.EdgeBrowserControl.Refresh",
        "file_name": "Access.EdgeBrowserControl.Refresh.md",
        "kind": "method",
        "main": "Refreshes the specified browser back to the **Control Source**\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.EdgeBrowserControl.RetrieveJavascriptValue",
        "file_name": "Access.EdgeBrowserControl.RetrieveJavascriptValue.md",
        "kind": "method",
        "main": "Returns the value of the provided javascript expression\n",
        "Parameters": [
            "expression"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.EdgeBrowserControl.TrustedDomains",
        "file_name": "Access.EdgeBrowserControl.TrustedDomains.md",
        "kind": "property",
        "main": "Read/write. Allows you to specify a **table name** who's first column contains domains the browser is allowed to renavigate to\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.EmptyCell.Application",
        "file_name": "Access.EmptyCell.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.EmptyCell.BackColor",
        "file_name": "Access.EmptyCell.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.EmptyCell.BackShade",
        "file_name": "Access.EmptyCell.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.EmptyCell.BackStyle",
        "file_name": "Access.EmptyCell.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.BackThemeColorIndex",
        "file_name": "Access.EmptyCell.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.EmptyCell.BackTint",
        "file_name": "Access.EmptyCell.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.EmptyCell.BottomPadding",
        "file_name": "Access.EmptyCell.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the cell and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.EmptyCell.ControlType",
        "file_name": "Access.EmptyCell.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.DisplayWhen",
        "file_name": "Access.EmptyCell.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.EventProcPrefix",
        "file_name": "Access.EmptyCell.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineColor",
        "file_name": "Access.EmptyCell.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified cell. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineShade",
        "file_name": "Access.EmptyCell.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.EmptyCell.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.EmptyCell.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineStyleBottom",
        "file_name": "Access.EmptyCell.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified cell. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineStyleLeft",
        "file_name": "Access.EmptyCell.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified cell. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineStyleRight",
        "file_name": "Access.EmptyCell.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified cell. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineStyleTop",
        "file_name": "Access.EmptyCell.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified cell. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineThemeColorIndex",
        "file_name": "Access.EmptyCell.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.EmptyCell.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.EmptyCell.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineTint",
        "file_name": "Access.EmptyCell.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.EmptyCell.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.EmptyCell.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineWidthBottom",
        "file_name": "Access.EmptyCell.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified cell. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineWidthLeft",
        "file_name": "Access.EmptyCell.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified cell. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineWidthRight",
        "file_name": "Access.EmptyCell.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified cell. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.GridlineWidthTop",
        "file_name": "Access.EmptyCell.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified cell. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Height",
        "file_name": "Access.EmptyCell.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.EmptyCell.HelpContextId",
        "file_name": "Access.EmptyCell.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.EmptyCell.HorizontalAnchor",
        "file_name": "Access.EmptyCell.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the cell is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.EmptyCell.InSelection",
        "file_name": "Access.EmptyCell.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.EmptyCell.IsVisible",
        "file_name": "Access.EmptyCell.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Layout",
        "file_name": "Access.EmptyCell.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified cell. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.EmptyCell.LayoutID",
        "file_name": "Access.EmptyCell.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified cell. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Left",
        "file_name": "Access.EmptyCell.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.EmptyCell.LeftPadding",
        "file_name": "Access.EmptyCell.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the cell and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.EmptyCell",
        "Events": [],
        "file_name": "Access.EmptyCell.md",
        "kind": "object",
        "main": "Represents an empty cell in a control layout.\n",
        "Methods": [
            "Move",
            "SizeToFit"
        ],
        "Properties": [
            "Application",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BottomPadding",
            "ControlType",
            "DisplayWhen",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Name",
            "Parent",
            "Properties",
            "RightPadding",
            "Section",
            "ShortcutMenuBar",
            "SpecialEffect",
            "StatusBarText",
            "Tag",
            "Top",
            "TopPadding",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Move",
        "file_name": "Access.EmptyCell.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.EmptyCell.Name",
        "file_name": "Access.EmptyCell.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Parent",
        "file_name": "Access.EmptyCell.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.EmptyCell.Properties",
        "file_name": "Access.EmptyCell.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.EmptyCell.RightPadding",
        "file_name": "Access.EmptyCell.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the cell and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Section",
        "file_name": "Access.EmptyCell.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.EmptyCell.ShortcutMenuBar",
        "file_name": "Access.EmptyCell.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.EmptyCell.SizeToFit",
        "file_name": "Access.EmptyCell.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.EmptyCell.SpecialEffect",
        "file_name": "Access.EmptyCell.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.EmptyCell.StatusBarText",
        "file_name": "Access.EmptyCell.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Tag",
        "file_name": "Access.EmptyCell.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Top",
        "file_name": "Access.EmptyCell.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.EmptyCell.TopPadding",
        "file_name": "Access.EmptyCell.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the cell and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.EmptyCell.VerticalAnchor",
        "file_name": "Access.EmptyCell.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified cell is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Visible",
        "file_name": "Access.EmptyCell.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.EmptyCell.Width",
        "file_name": "Access.EmptyCell.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Entities.Count",
        "file_name": "Access.Entities.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.Entities.Item",
        "file_name": "Access.Entities.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Object**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Object"
        ]
    },
    {
        "api_name": "Access.Entities",
        "Events": [],
        "file_name": "Access.Entities.md",
        "kind": "object",
        "main": "Represents the collection of entities defined in a Data Service data connection.\n",
        "Methods": [],
        "Properties": [
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Entities.Parent",
        "file_name": "Access.Entities.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Entity",
        "Events": [],
        "file_name": "Access.Entity.md",
        "kind": "object",
        "main": "Represents an entity defined in a Data Service data connection.\n",
        "Methods": [],
        "Properties": [
            "Name",
            "Operations",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Entity.Name",
        "file_name": "Access.Entity.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Entity.Operations",
        "file_name": "Access.Entity.Operations.md",
        "kind": "property",
        "main": "Gets the collection of operations defined for the specified **Entity** object. Read-only **[Operations](Access.Operations.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Entity",
            "Access.Operations.md"
        ]
    },
    {
        "api_name": "Access.Entity.Parent",
        "file_name": "Access.Entity.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.Activate",
        "file_name": "Access.Form.Activate.md",
        "kind": "event",
        "main": "The **Activate** event occurs when a form receives the focus and becomes the active window.\n",
        "Parameters": [],
        "Return_value": [
            "Activate"
        ]
    },
    {
        "api_name": "Access.Form.ActiveControl",
        "file_name": "Access.Form.ActiveControl.md",
        "kind": "property",
        "main": "Use the **ActiveControl** property together with the **[Screen](Access.Screen.md)** object to identify or refer to the control that has the focus. Read-only **Control** object.\n",
        "Parameters": [],
        "Return_value": [
            "ActiveControl",
            "Access.Screen.md"
        ]
    },
    {
        "api_name": "Access.Form.AfterDelConfirm",
        "file_name": "Access.Form.AfterDelConfirm(even).md",
        "kind": "event",
        "main": "The **AfterDelConfirm** event occurs after the user confirms that the deletions and the records are actually deleted or when the deletions are canceled.\n",
        "Parameters": [
            "Status"
        ],
        "Return_value": [
            "AfterDelConfirm"
        ]
    },
    {
        "api_name": "Access.Form.AfterDelConfirm",
        "file_name": "Access.Form.AfterDelConfirm(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[AfterDelConfirm](Access.Form.AfterDelConfirm(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.AfterDelConfirm(even).md"
        ]
    },
    {
        "api_name": "Access.Form.AfterFinalRender",
        "file_name": "Access.Form.AfterFinalRender(even).md",
        "kind": "event",
        "main": "Occurs after all elements in the specified PivotChart view have been rendered.\n",
        "Parameters": [
            "drawObject"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.AfterFinalRender",
        "file_name": "Access.Form.AfterFinalRender(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[AfterFinalRender](Access.Form.AfterFinalRender(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.AfterFinalRender(even).md"
        ]
    },
    {
        "api_name": "Access.Form.AfterInsert",
        "file_name": "Access.Form.AfterInsert(even).md",
        "kind": "event",
        "main": "The **AfterInsert** event occurs after a new record is added.\n",
        "Parameters": [],
        "Return_value": [
            "AfterInsert"
        ]
    },
    {
        "api_name": "Access.Form.AfterInsert",
        "file_name": "Access.Form.AfterInsert(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[AfterInsert](Access.Form.AfterInsert(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.AfterInsert(even).md"
        ]
    },
    {
        "api_name": "Access.Form.AfterLayout",
        "file_name": "Access.Form.AfterLayout(even).md",
        "kind": "event",
        "main": "Occurs after all charts in the specified PivotChart view have been laid out, but before they have been rendered.\n",
        "Parameters": [
            "drawObject"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.AfterLayout",
        "file_name": "Access.Form.AfterLayout(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[AfterLayout](Access.Form.AfterLayout(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.AfterLayout(even).md"
        ]
    },
    {
        "api_name": "Access.Form.AfterRender",
        "file_name": "Access.Form.AfterRender(even).md",
        "kind": "event",
        "main": "Occurs after the object represented by the _chartObject_ argument has been rendered.\n",
        "Parameters": [
            "drawObject",
            "chartObject"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.AfterRender",
        "file_name": "Access.Form.AfterRender(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[AfterRender](Access.Form.AfterRender(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.AfterRender(even).md"
        ]
    },
    {
        "api_name": "Access.Form.AfterUpdate",
        "file_name": "Access.Form.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.Form.AfterUpdate",
        "file_name": "Access.Form.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.form.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.AllowAdditions",
        "file_name": "Access.Form.AllowAdditions.md",
        "kind": "property",
        "main": "Use the **AllowAdditions** property to specify whether a user can add a record when using a form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AllowAdditions",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.AllowDatasheetView",
        "file_name": "Access.Form.AllowDatasheetView.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether the specified form may be viewed in Datasheet view. **True** if Datasheet view is allowed. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Form.AllowDeletions",
        "file_name": "Access.Form.AllowDeletions.md",
        "kind": "property",
        "main": "Use the **AllowDeletions** property to specify whether a user can delete a record when using a form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AllowDeletions",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.AllowEdits",
        "file_name": "Access.Form.AllowEdits.md",
        "kind": "property",
        "main": "Use the **AllowEdits** property to specify whether a user can edit saved records when using a form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AllowEdits",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.AllowFilters",
        "file_name": "Access.Form.AllowFilters.md",
        "kind": "property",
        "main": "Use the **AllowFilters** property to specify whether records in a form can be filtered. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AllowFilters",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.AllowFormView",
        "file_name": "Access.Form.AllowFormView.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether the specified form may be viewed in Form view. **True** if Form view is allowed. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Form.AllowLayoutView",
        "file_name": "Access.Form.AllowLayoutView.md",
        "kind": "property",
        "main": "Gets or sets whether the specified form can be used in Layout view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.AllowPivotChartView",
        "file_name": "Access.Form.AllowPivotChartView.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether the specified form may be viewed in PivotChart view. **True** if PivotChart view is allowed. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Form.AllowPivotTableView",
        "file_name": "Access.Form.AllowPivotTableView.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether the specified form may be viewed in PivotTable view. **True** if PivotTable view is allowed. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Form.Application",
        "file_name": "Access.Form.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Form.ApplyFilter",
        "file_name": "Access.Form.ApplyFilter.md",
        "kind": "event",
        "main": "Occurs when a filter is applied to a form.\n",
        "Parameters": [
            "Cancel",
            "ApplyType"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.AutoCenter",
        "file_name": "Access.Form.AutoCenter.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether a form will be centered automatically in the application window when the form is opened. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.AutoResize",
        "file_name": "Access.Form.AutoResize.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether a Form window opens automatically sized to display complete records. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.BeforeDelConfirm",
        "file_name": "Access.Form.BeforeDelConfirm(even).md",
        "kind": "event",
        "main": "The **BeforeDelConfirm** event occurs after the user deletes to the buffer one or more records, but before Microsoft Access displays a dialog box asking the user to confirm the deletions.\n",
        "Parameters": [
            "Cancel",
            "Response"
        ],
        "Return_value": [
            "BeforeDelConfirm"
        ]
    },
    {
        "api_name": "Access.Form.BeforeDelConfirm",
        "file_name": "Access.Form.BeforeDelConfirm(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[BeforeDelConfirm](Access.Form.BeforeDelConfirm(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.BeforeDelConfirm(even).md"
        ]
    },
    {
        "api_name": "Access.Form.BeforeInsert",
        "file_name": "Access.Form.BeforeInsert(even).md",
        "kind": "event",
        "main": "The **BeforeInsert** event occurs when the user types the first character in a new record, but before the record is actually created.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeInsert"
        ]
    },
    {
        "api_name": "Access.Form.BeforeInsert",
        "file_name": "Access.Form.BeforeInsert(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[BeforeInsert](Access.Form.BeforeInsert(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.BeforeInsert(even).md"
        ]
    },
    {
        "api_name": "Access.Form.BeforeQuery",
        "file_name": "Access.Form.BeforeQuery(even).md",
        "kind": "event",
        "main": "Occurs when the specified PivotTable view queries its data source.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.BeforeQuery",
        "file_name": "Access.Form.BeforeQuery(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[BeforeQuery](Access.Form.BeforeQuery(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.BeforeQuery(even).md"
        ]
    },
    {
        "api_name": "Access.Form.BeforeRender",
        "file_name": "Access.Form.BeforeRender(even).md",
        "kind": "event",
        "main": "Occurs before any object in the specified PivotChart view has been rendered.\n",
        "Parameters": [
            "drawObject",
            "chartObject",
            "Cancel"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.BeforeRender",
        "file_name": "Access.Form.BeforeRender(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[BeforeRender](Access.Form.BeforeRender(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.BeforeRender(even).md"
        ]
    },
    {
        "api_name": "Access.Form.BeforeScreenTip",
        "file_name": "Access.Form.BeforeScreenTip(even).md",
        "kind": "event",
        "main": "Occurs before a ScreenTip is displayed for an element in a PivotChart view or PivotTable view.\n",
        "Parameters": [
            "ScreenTipText",
            "SourceObject"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.BeforeScreenTip",
        "file_name": "Access.Form.BeforeScreenTip(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[BeforeScreenTip](Access.Form.BeforeScreenTip(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.BeforeScreenTip(even).md"
        ]
    },
    {
        "api_name": "Access.Form.BeforeUpdate",
        "file_name": "Access.Form.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.Form.BeforeUpdate",
        "file_name": "Access.Form.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.Form.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.Bookmark",
        "file_name": "Access.Form.Bookmark.md",
        "kind": "property",
        "main": "Use the **Bookmark** property with forms to set a bookmark that uniquely identifies a particular record in the form's underlying table, query, or SQL statement. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Bookmark",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Form.BorderStyle",
        "file_name": "Access.Form.BorderStyle.md",
        "kind": "property",
        "main": "Specifies the type of border and border elements (title bar, **Control** menu, **Minimize** and **Maximize** buttons, or **Close** button) to use for the form. You typically use different border styles for normal forms, pop-up forms, and custom dialog boxes. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Control",
            "Minimize",
            "Maximize",
            "Close",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.Caption",
        "file_name": "Access.Form.Caption.md",
        "kind": "property",
        "main": "Gets or sets the text that appears in the title bar in Form view. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.ChartSpace",
        "file_name": "Access.Form.ChartSpace.md",
        "kind": "property",
        "main": "Returns a **ChartSpace** object. Read-only.\n_Obsolete : This property uses obsolete Office Web Components and hence will no longer work.\n",
        "Parameters": [],
        "Return_value": [
            "ChartSpace"
        ]
    },
    {
        "api_name": "Access.Form.Click",
        "file_name": "Access.Form.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.Form.Close",
        "file_name": "Access.Form.Close.md",
        "kind": "event",
        "main": "The **Close** event occurs when a form is closed and removed from the screen.\n",
        "Parameters": [],
        "Return_value": [
            "Close"
        ]
    },
    {
        "api_name": "Access.Form.CloseButton",
        "file_name": "Access.Form.CloseButton.md",
        "kind": "property",
        "main": "Specifies whether the **Close** button on a form is enabled. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Close",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.CommandBeforeExecute",
        "file_name": "Access.Form.CommandBeforeExecute(even).md",
        "kind": "event",
        "main": "Occurs before a specified command is executed. Use this event when you want to impose certain restrictions before a particular command is executed.\n",
        "Parameters": [
            "Command",
            "Cancel"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.CommandBeforeExecute",
        "file_name": "Access.Form.CommandBeforeExecute(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[CommandBeforeExecute](Access.Form.CommandBeforeExecute(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.CommandBeforeExecute(even).md"
        ]
    },
    {
        "api_name": "Access.Form.CommandChecked",
        "file_name": "Access.Form.CommandChecked(even).md",
        "kind": "event",
        "main": "Occurs when the specified Microsoft Office web component determines whether the specified command is selected.\n",
        "Parameters": [
            "Command",
            "Checked"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.CommandChecked",
        "file_name": "Access.Form.CommandChecked(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[CommandChecked](Access.Form.CommandChecked(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.CommandChecked(even).md"
        ]
    },
    {
        "api_name": "Access.Form.CommandEnabled",
        "file_name": "Access.Form.CommandEnabled(even).md",
        "kind": "event",
        "main": "Occurs when the specified Microsoft Office web component determines whether the specified command is enabled.\n",
        "Parameters": [
            "Command",
            "Enabled"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.CommandEnabled",
        "file_name": "Access.Form.CommandEnabled(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[CommandEnabled](Access.Form.CommandEnabled(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.CommandEnabled(even).md"
        ]
    },
    {
        "api_name": "Access.Form.CommandExecute",
        "file_name": "Access.Form.CommandExecute(even).md",
        "kind": "event",
        "main": "Occurs after the specified command is executed. Use this event when you want to execute a set of commands after a particular command is executed.\n",
        "Parameters": [
            "Command"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.CommandExecute",
        "file_name": "Access.Form.CommandExecute(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[CommandExecute](Access.Form.CommandExecute(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.CommandExecute(even).md"
        ]
    },
    {
        "api_name": "Access.Form.ControlBox",
        "file_name": "Access.Form.ControlBox.md",
        "kind": "property",
        "main": "Specifies whether a form has a **Control** menu in Form view and Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Control",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Controls",
        "file_name": "Access.Form.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.Form.Count",
        "file_name": "Access.Form.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.Current",
        "file_name": "Access.Form.Current.md",
        "kind": "event",
        "main": "Occurs when the focus moves to a record, making it the current record, or when the form is refreshed or requeried.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.CurrentRecord",
        "file_name": "Access.Form.CurrentRecord.md",
        "kind": "property",
        "main": "Use the **CurrentRecord** property to identify the current record in the recordset being viewed on a form. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentRecord",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.CurrentSectionLeft",
        "file_name": "Access.Form.CurrentSectionLeft.md",
        "kind": "property",
        "main": "Use this property to determine the distance in [twips](../language/glossary/vbe-glossary.md#twip) from the left side of the current section to the left side of the form. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.CurrentSectionTop",
        "file_name": "Access.Form.CurrentSectionTop.md",
        "kind": "property",
        "main": "Use this property to determine the distance in [twips](../language/glossary/vbe-glossary.md#twip) from the top edge of the current section to the top edge of the form. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.CurrentView",
        "file_name": "Access.Form.CurrentView.md",
        "kind": "property",
        "main": "Use the **CurrentView** property to determine how a form is currently displayed. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentView",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.Cycle",
        "file_name": "Access.Form.Cycle.md",
        "kind": "property",
        "main": "Use the **Cycle** property to specify what happens when you press the Tab key and the focus is in the last control on a bound form. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Cycle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.DataChange",
        "file_name": "Access.Form.DataChange(even).md",
        "kind": "event",
        "main": "Occurs when certain properties are changed or when certain methods are executed in the specified PivotTable view.\n",
        "Parameters": [
            "Reason"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.DataChange",
        "file_name": "Access.Form.DataChange(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[DataChange](Access.Form.DataChange(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.DataChange(even).md"
        ]
    },
    {
        "api_name": "Access.Form.DataEntry",
        "file_name": "Access.Form.DataEntry.md",
        "kind": "property",
        "main": "Use the **DataEntry** property to specify whether a bound form opens to allow data entry only. The **Data Entry** property doesn't determine whether records can be added; it only determines whether existing records are displayed. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "DataEntry",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.DataSetChange",
        "file_name": "Access.Form.DataSetChange(even).md",
        "kind": "event",
        "main": "Occurs whenever the specified PivotTable view is data-bound and the data set changes; for example, when a filter operation takes place. This event also occurs when initial data is available from the data source.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.DataSetChange",
        "file_name": "Access.Form.DataSetChange(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[DataSetChange](Access.Form.DataSetChange(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.DataSetChange(even).md"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetAlternateBackColor",
        "file_name": "Access.Form.DatasheetAlternateBackColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on alternate rows of a form's datasheet. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetBackColor",
        "file_name": "Access.Form.DatasheetBackColor.md",
        "kind": "property",
        "main": "Use the **DatasheetBackColor** property in [Visual Basic](../access/Concepts/Settings/set-properties-by-using-visual-basic.md) to specify or determine the background color of an entire table, query, or form in Datasheet view within a Microsoft Access database. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetBackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetBorderLineStyle",
        "file_name": "Access.Form.DatasheetBorderLineStyle.md",
        "kind": "property",
        "main": "Returns or sets a **Byte** indicating the line style to use for the border of the specified datasheet. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetCellsEffect",
        "file_name": "Access.Form.DatasheetCellsEffect.md",
        "kind": "property",
        "main": "Use the **DatasheetCellsEffect** property to specify whether special effects are applied to cells in a datasheet. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetCellsEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetColumnHeaderUnderlineStyle",
        "file_name": "Access.Form.DatasheetColumnHeaderUnderlineStyle.md",
        "kind": "property",
        "main": "Returns or sets a **Byte** indicating the line style to use for the bottom edge of the column headers on the specified datasheet. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetFontHeight",
        "file_name": "Access.Form.DatasheetFontHeight.md",
        "kind": "property",
        "main": "Use the **DatasheetFontHeight** property to specify the font point size used to display and print field names and data in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetFontHeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetFontItalic",
        "file_name": "Access.Form.DatasheetFontItalic.md",
        "kind": "property",
        "main": "Use the **DatasheetFontItalic** property to specify an italicized appearance for field names and data in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetFontItalic",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetFontName",
        "file_name": "Access.Form.DatasheetFontName.md",
        "kind": "property",
        "main": "Use the **DatasheetFontName** property to specify the font used to display and print field names and data in Datasheet view. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetFontName",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetFontUnderline",
        "file_name": "Access.Form.DatasheetFontUnderline.md",
        "kind": "property",
        "main": "Use the **DatasheetFontUnderline** property to specify an underlined appearance for field names and data in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetFontUnderline",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetFontWeight",
        "file_name": "Access.Form.DatasheetFontWeight.md",
        "kind": "property",
        "main": "Use the **DatasheetFontWeight** property to specify the line width of the font used to display and print characters for field names and data in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetFontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetForeColor",
        "file_name": "Access.Form.DatasheetForeColor.md",
        "kind": "property",
        "main": "Use the **DatasheetForeColor** property in Visual Basic to specify or determine the color of all text in a table, query, or form in Datasheet view within an Access database. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetGridlinesBehavior",
        "file_name": "Access.Form.DatasheetGridlinesBehavior.md",
        "kind": "property",
        "main": "Use the **DatasheetGridlinesBehavior** property to specify which gridlines will appear in Datasheet view. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetGridlinesBehavior",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.DatasheetGridlinesColor",
        "file_name": "Access.Form.DatasheetGridlinesColor.md",
        "kind": "property",
        "main": "Use the **DatasheetGridlinesColor** property to specify the color of gridlines in a datasheet. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "DatasheetGridlinesColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.DblClick",
        "file_name": "Access.Form.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.Form.Deactivate",
        "file_name": "Access.Form.Deactivate.md",
        "kind": "event",
        "main": "The **Deactivate** event occurs when a form loses the focus to a Table, Query, Form, Report, Macro, or Module window, or to the Database window.\n",
        "Parameters": [],
        "Return_value": [
            "Deactivate"
        ]
    },
    {
        "api_name": "Access.Form.DefaultControl",
        "file_name": "Access.Form.DefaultControl.md",
        "kind": "property",
        "main": "The **DefaultControl** property returns a **[Control](Access.Control.md)** object with which you can set the default properties for a particular type of control on a particular form. Read-only.\n",
        "Parameters": [
            "ControlType"
        ],
        "Return_value": [
            "DefaultControl",
            "Access.Control.md"
        ]
    },
    {
        "api_name": "Access.Form.DefaultView",
        "file_name": "Access.Form.DefaultView.md",
        "kind": "property",
        "main": "Use the **DefaultView** property to specify the opening view of a form. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DefaultView",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.Delete",
        "file_name": "Access.Form.Delete.md",
        "kind": "event",
        "main": "Occurs when the user performs some action, such as pressing the Delete key, to delete a record, but before the record is actually deleted.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.Dirty",
        "file_name": "Access.Form.Dirty(even).md",
        "kind": "event",
        "main": "The **Dirty** event occurs when the contents of the specified control changes.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Dirty"
        ]
    },
    {
        "api_name": "Access.Form.Dirty",
        "file_name": "Access.Form.Dirty(property).md",
        "kind": "property",
        "main": "Use the **Dirty** property to determine whether the current record has been modified since it was last saved. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Dirty",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.DisplayOnSharePointSite",
        "file_name": "Access.Form.DisplayOnSharePointSite.md",
        "kind": "property",
        "main": "Gets or sets whether the specified form can be made available as a view on a Microsoft SharePoint Foundation site. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.DividingLines",
        "file_name": "Access.Form.DividingLines.md",
        "kind": "property",
        "main": "Use the **DividingLines** property to specify whether dividing lines will separate sections on a form or records displayed on a continuous form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "DividingLines",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Error",
        "file_name": "Access.Form.Error.md",
        "kind": "event",
        "main": "The **Error** event occurs when a run-time error is produced in Microsoft Access when a form has the focus.\n",
        "Parameters": [
            "DataErr",
            "Response"
        ],
        "Return_value": [
            "Error"
        ]
    },
    {
        "api_name": "Access.Form.FastLaserPrinting",
        "file_name": "Access.Form.FastLaserPrinting.md",
        "kind": "property",
        "main": "Use the **FastLaserPrinting** property to specify whether lines and rectangles are replaced by text character lines, similar to the underscore ( _ ) and vertical bar ( | ) characters, when you print a form by using most laser printers. Replacing lines and rectangles with text character lines can make printing much faster. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FastLaserPrinting",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.FetchDefaults",
        "file_name": "Access.Form.FetchDefaults.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether Microsoft Access shows default values for new rows on the specified form before the row is saved. **True** if Access shows the default values for new rows on the specified form. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Form.Filter",
        "file_name": "Access.Form.Filter(even).md",
        "kind": "event",
        "main": "Occurs when the user opens a filter window by choosing **Filter by Form**, **Advanced Filter/Sort**, or **Server Filter By Form**.\n",
        "Parameters": [
            "Cancel",
            "FilterType"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.Filter",
        "file_name": "Access.Form.Filter(property).md",
        "kind": "property",
        "main": "Use the **Filter** property to specify a subset of records to be displayed when a filter is applied to a form, report, query, or table. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Filter",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.FilterOn",
        "file_name": "Access.Form.FilterOn.md",
        "kind": "property",
        "main": "Use the **FilterOn** property to specify or determine whether the **Filter** property for a form or report is applied. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FilterOn",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.FilterOnLoad",
        "file_name": "Access.Form.FilterOnLoad.md",
        "kind": "property",
        "main": "Gets or sets whether the filter specified by the **[Filter](Access.Form.Filter(property).md)** property is applied when the form is loaded. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Form.Filter(property).md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.FitToScreen",
        "file_name": "Access.Form.FitToScreen.md",
        "kind": "property",
        "main": "Gets or sets whether the width of the form is reduced to fit the width of the screen. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Form",
        "file_name": "Access.Form.Form.md",
        "kind": "property",
        "main": "Use the **Form** property to refer to a form or to refer to the form associated with a subformcontrol. Read-only **Form**.\n",
        "Parameters": [],
        "Return_value": [
            "Form"
        ]
    },
    {
        "api_name": "Access.Form.FrozenColumns",
        "file_name": "Access.Form.FrozenColumns.md",
        "kind": "property",
        "main": "Use the **FrozenColumns** property to determine how many columns in a datasheet are frozen. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FrozenColumns",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.GotFocus",
        "file_name": "Access.Form.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.Form.GoToPage",
        "file_name": "Access.Form.GoToPage.md",
        "kind": "method",
        "main": "The **GoToPage** method moves the focus to the first control on a specified page in the active form.\n",
        "Parameters": [
            "PageNumber",
            "Right",
            "Down"
        ],
        "Return_value": [
            "GoToPage"
        ]
    },
    {
        "api_name": "Access.Form.GridX",
        "file_name": "Access.Form.GridX.md",
        "kind": "property",
        "main": "Use the **GridX** property (along with the **GridY** property) to specify the horizontal and vertical divisions of the alignment grid in form Design view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "GridX",
            "GridY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.GridY",
        "file_name": "Access.Form.GridY.md",
        "kind": "property",
        "main": "Use the **GridY** property (along with the **GridX** property) to specify the horizontal and vertical divisions of the alignment grid in form Design view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "GridY",
            "GridX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.HasModule",
        "file_name": "Access.Form.HasModule.md",
        "kind": "property",
        "main": "Use the **HasModule** property to specify or determine whether a form or report has a class module. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HasModule",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.HelpContextId",
        "file_name": "Access.Form.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.HelpFile",
        "file_name": "Access.Form.HelpFile.md",
        "kind": "property",
        "main": "The name of a help file associated with a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.HorizontalDatasheetGridlineStyle",
        "file_name": "Access.Form.HorizontalDatasheetGridlineStyle.md",
        "kind": "property",
        "main": "Returns or sets a **Byte** indicating the line style to use for horizontal gridlines on the specified datasheet. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.Hwnd",
        "file_name": "Access.Form.Hwnd.md",
        "kind": "property",
        "main": "Use the **hWnd** property to determine the handle (a unique **Long Integer** value) assigned by Windows to the current window. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "hWnd",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.InputParameters",
        "file_name": "Access.Form.InputParameters.md",
        "kind": "property",
        "main": "Use the **InputParameters** property to specify or determine the input parameters that are passed to a SQL statement in the **RecordSource** property of a form or report, or a stored procedure when used as the record source within a Microsoft Access project (.adp). Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "InputParameters",
            "RecordSource",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.InsideHeight",
        "file_name": "Access.Form.InsideHeight.md",
        "kind": "property",
        "main": "Use the **InsideHeight** property (along with the **InsideWidth** property) to determine the height and width (in \n[twips](../language/glossary/vbe-glossary.md#twip)) of the window containing a form. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "InsideHeight",
            "InsideWidth",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.InsideWidth",
        "file_name": "Access.Form.InsideWidth.md",
        "kind": "property",
        "main": "Use the **InsideWidth** property (along with the **InsideHeight** property) to determine the height and width (in [twips](../language/glossary/vbe-glossary.md#twip)) of the window containing a form. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "InsideWidth",
            "InsideHeight",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.KeyDown",
        "file_name": "Access.Form.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Form.KeyPress",
        "file_name": "Access.Form.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Form.KeyPreview",
        "file_name": "Access.Form.KeyPreview.md",
        "kind": "property",
        "main": "Use the **KeyPreview** property to specify whether the form-level keyboard event procedures are invoked before a control's keyboard event procedures. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "KeyPreview",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.KeyUp",
        "file_name": "Access.Form.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Form.LayoutForPrint",
        "file_name": "Access.Form.LayoutForPrint.md",
        "kind": "property",
        "main": "Use the **LayoutForPrint** property to specify whether the form uses printer or screen fonts. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "LayoutForPrint",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Load",
        "file_name": "Access.Form.Load.md",
        "kind": "event",
        "main": "Occurs when a form is opened and its records are displayed.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.LostFocus",
        "file_name": "Access.Form.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.Form.MaxRecButton",
        "file_name": "Access.Form.MaxRecButton.md",
        "kind": "property",
        "main": "Use the **MaxRecButton** property to specify or determine if the maximum record limit button is available on the navigation bar of a form in Datasheet view or Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "MaxRecButton",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.MaxRecords",
        "file_name": "Access.Form.MaxRecords.md",
        "kind": "property",
        "main": "Specifies the maximum number of records by a query or view. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Form",
        "Events": [
            "Activate",
            "AfterDelConfirm",
            "AfterFinalRender",
            "AfterInsert",
            "AfterLayout",
            "AfterRender",
            "AfterUpdate",
            "ApplyFilter",
            "BeforeDelConfirm",
            "BeforeInsert",
            "BeforeQuery",
            "BeforeRender",
            "BeforeScreenTip",
            "BeforeUpdate",
            "Click",
            "Close",
            "CommandBeforeExecute",
            "CommandChecked",
            "CommandEnabled",
            "CommandExecute",
            "Current",
            "DataChange",
            "DataSetChange",
            "DblClick",
            "Deactivate",
            "Delete",
            "Dirty",
            "Error",
            "Filter",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "Load",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "MouseWheel",
            "OnConnect",
            "OnDisconnect",
            "Open",
            "PivotTableChange",
            "Query",
            "Resize",
            "SelectionChange",
            "Timer",
            "Undo",
            "Unload",
            "ViewChange"
        ],
        "file_name": "Access.Form.md",
        "kind": "object",
        "main": "A **Form** object refers to a particular Microsoft Access form.\n",
        "Methods": [
            "GoToPage",
            "Move",
            "Recalc",
            "Refresh",
            "Repaint",
            "Requery",
            "SetFocus",
            "Undo"
        ],
        "Properties": [
            "ActiveControl",
            "AfterDelConfirm",
            "AfterFinalRender",
            "AfterInsert",
            "AfterLayout",
            "AfterRender",
            "AfterUpdate",
            "AllowAdditions",
            "AllowDatasheetView",
            "AllowDeletions",
            "AllowEdits",
            "AllowFilters",
            "AllowFormView",
            "AllowLayoutView",
            "AllowPivotChartView",
            "AllowPivotTableView",
            "Application",
            "AutoCenter",
            "AutoResize",
            "BeforeDelConfirm",
            "BeforeInsert",
            "BeforeQuery",
            "BeforeRender",
            "BeforeScreenTip",
            "BeforeUpdate",
            "Bookmark",
            "BorderStyle",
            "Caption",
            "ChartSpace",
            "CloseButton",
            "CommandBeforeExecute",
            "CommandChecked",
            "CommandEnabled",
            "CommandExecute",
            "ControlBox",
            "Controls",
            "Count",
            "CurrentRecord",
            "CurrentSectionLeft",
            "CurrentSectionTop",
            "CurrentView",
            "Cycle",
            "DataChange",
            "DataEntry",
            "DataSetChange",
            "DatasheetAlternateBackColor",
            "DatasheetBackColor",
            "DatasheetBorderLineStyle",
            "DatasheetCellsEffect",
            "DatasheetColumnHeaderUnderlineStyle",
            "DatasheetFontHeight",
            "DatasheetFontItalic",
            "DatasheetFontName",
            "DatasheetFontUnderline",
            "DatasheetFontWeight",
            "DatasheetForeColor",
            "DatasheetGridlinesBehavior",
            "DatasheetGridlinesColor",
            "DefaultControl",
            "DefaultView",
            "Dirty",
            "DisplayOnSharePointSite",
            "DividingLines",
            "FastLaserPrinting",
            "FetchDefaults",
            "Filter",
            "FilterOn",
            "FilterOnLoad",
            "FitToScreen",
            "Form",
            "FrozenColumns",
            "GridX",
            "GridY",
            "HasModule",
            "HelpContextId",
            "HelpFile",
            "HorizontalDatasheetGridlineStyle",
            "Hwnd",
            "InputParameters",
            "InsideHeight",
            "InsideWidth",
            "KeyPreview",
            "LayoutForPrint",
            "MaxRecButton",
            "MaxRecords",
            "MenuBar",
            "MinMaxButtons",
            "Modal",
            "Module",
            "MouseWheel",
            "Moveable",
            "Name",
            "NavigationButtons",
            "NavigationCaption",
            "NewRecord",
            "OnActivate",
            "OnApplyFilter",
            "OnClick",
            "OnClose",
            "OnConnect",
            "OnCurrent",
            "OnDblClick",
            "OnDeactivate",
            "OnDelete",
            "OnDirty",
            "OnDisconnect",
            "OnError",
            "OnFilter",
            "OnGotFocus",
            "OnInsert",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLoad",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnOpen",
            "OnResize",
            "OnTimer",
            "OnUndo",
            "OnUnload",
            "OpenArgs",
            "OrderBy",
            "OrderByOn",
            "OrderByOnLoad",
            "Orientation",
            "Page",
            "Pages",
            "Painting",
            "PaintPalette",
            "PaletteSource",
            "Parent",
            "Picture",
            "PictureAlignment",
            "PictureData",
            "PicturePalette",
            "PictureSizeMode",
            "PictureTiling",
            "PictureType",
            "PivotTable",
            "PivotTableChange",
            "PopUp",
            "Printer",
            "Properties",
            "PrtDevMode",
            "PrtDevNames",
            "PrtMip",
            "Query",
            "RecordLocks",
            "RecordSelectors",
            "Recordset",
            "RecordsetClone",
            "RecordsetType",
            "RecordSource",
            "RecordSourceQualifier",
            "ResyncCommand",
            "RibbonName",
            "RowHeight",
            "ScrollBars",
            "Section",
            "SelectionChange",
            "SelHeight",
            "SelLeft",
            "SelTop",
            "SelWidth",
            "ServerFilter",
            "ServerFilterByForm",
            "ShortcutMenu",
            "ShortcutMenuBar",
            "SplitFormDatasheet",
            "SplitFormOrientation",
            "SplitFormPrinting",
            "SplitFormSize",
            "SplitFormSplitterBar",
            "SplitFormSplitterBarSave",
            "SubdatasheetExpanded",
            "SubdatasheetHeight",
            "Tag",
            "TimerInterval",
            "Toolbar",
            "UniqueTable",
            "UseDefaultPrinter",
            "VerticalDatasheetGridlineStyle",
            "ViewChange",
            "ViewsAllowed",
            "Visible",
            "Width",
            "WindowHeight",
            "WindowLeft",
            "WindowTop",
            "WindowWidth"
        ]
    },
    {
        "api_name": "Access.Form.MenuBar",
        "file_name": "Access.Form.MenuBar.md",
        "kind": "property",
        "main": "Specifies a custom menu to display for a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.MinMaxButtons",
        "file_name": "Access.Form.MinMaxButtons.md",
        "kind": "property",
        "main": "Use the **MinMaxButtons** property to specify whether the **Maximize** and **Minimize** buttons will be visible on a form. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "MinMaxButtons",
            "Maximize",
            "Minimize",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.Modal",
        "file_name": "Access.Form.Modal.md",
        "kind": "property",
        "main": "Use the **Modal** property to specify whether a form opens as a modal window. When a form opens as a modal window, you must close the window before you can move the focus to another object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Modal",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Module",
        "file_name": "Access.Form.Module.md",
        "kind": "property",
        "main": "Use the **Module** property to specify a form module. Read-only **Module** object.\n",
        "Parameters": [],
        "Return_value": [
            "Module"
        ]
    },
    {
        "api_name": "Access.Form.MouseDown",
        "file_name": "Access.Form.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.Form.MouseMove",
        "file_name": "Access.Form.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.Form.MouseUp",
        "file_name": "Access.Form.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.Form.MouseWheel",
        "file_name": "Access.Form.MouseWheel(even).md",
        "kind": "event",
        "main": "Occurs when the user rolls the mouse wheel in Form view, Split Form view, Datasheet view, Layout view, PivotChart view, or PivotTable view.\n",
        "Parameters": [
            "Page",
            "Count"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.MouseWheel",
        "file_name": "Access.Form.MouseWheel(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[MouseWheel](access.form.mousewheel(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "access.form.mousewheel(even).md"
        ]
    },
    {
        "api_name": "Access.Form.Move",
        "file_name": "Access.Form.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.Moveable",
        "file_name": "Access.Form.Moveable.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether the specified form can be moved by the user; **True** if it can be moved. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Form.Name",
        "file_name": "Access.Form.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.NavigationButtons",
        "file_name": "Access.Form.NavigationButtons.md",
        "kind": "property",
        "main": "Use the **NavigationButtons** property to specify whether navigation buttons and a record number box are displayed on a form. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "NavigationButtons",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.NavigationCaption",
        "file_name": "Access.Form.NavigationCaption.md",
        "kind": "property",
        "main": "Gets or sets the text that appears to the left of the form's navigation buttons. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.NewRecord",
        "file_name": "Access.Form.NewRecord.md",
        "kind": "property",
        "main": "Use the **NewRecord** property to determine whether the current record is a new record. Read-only **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "NewRecord",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.OnActivate",
        "file_name": "Access.Form.OnActivate.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Activate** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnApplyFilter",
        "file_name": "Access.Form.OnApplyFilter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Apply Filter** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnClick",
        "file_name": "Access.Form.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnClose",
        "file_name": "Access.Form.OnClose.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Close** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnConnect",
        "file_name": "Access.Form.OnConnect(even).md",
        "kind": "event",
        "main": "Occurs when the specified PivotTable view connects to a data source.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.OnConnect",
        "file_name": "Access.Form.OnConnect(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[OnConnect](Access.Form.OnConnect(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.OnConnect(even).md"
        ]
    },
    {
        "api_name": "Access.Form.OnCurrent",
        "file_name": "Access.Form.OnCurrent.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Current** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnDblClick",
        "file_name": "Access.Form.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnDeactivate",
        "file_name": "Access.Form.OnDeactivate.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Deactivate** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnDelete",
        "file_name": "Access.Form.OnDelete.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Delete** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnDirty",
        "file_name": "Access.Form.OnDirty.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dirty** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnDisconnect",
        "file_name": "Access.Form.OnDisconnect(even).md",
        "kind": "event",
        "main": "Occurs when the specified PivotTable view disconnects from a data source.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.OnDisconnect",
        "file_name": "Access.Form.OnDisconnect(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[OnDisconnect](Access.Form.OnDisconnect(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.OnDisconnect(even).md"
        ]
    },
    {
        "api_name": "Access.Form.OnError",
        "file_name": "Access.Form.OnError.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Error** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnFilter",
        "file_name": "Access.Form.OnFilter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Filter** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnGotFocus",
        "file_name": "Access.Form.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnInsert",
        "file_name": "Access.Form.OnInsert.md",
        "kind": "property",
        "main": "Sets or returns the value of the **Before Insert** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnKeyDown",
        "file_name": "Access.Form.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnKeyPress",
        "file_name": "Access.Form.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnKeyUp",
        "file_name": "Access.Form.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnLoad",
        "file_name": "Access.Form.OnLoad.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Load** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnLostFocus",
        "file_name": "Access.Form.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnMouseDown",
        "file_name": "Access.Form.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnMouseMove",
        "file_name": "Access.Form.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnMouseUp",
        "file_name": "Access.Form.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnOpen",
        "file_name": "Access.Form.OnOpen.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Open** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnResize",
        "file_name": "Access.Form.OnResize.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Resize** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnTimer",
        "file_name": "Access.Form.OnTimer.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Timer** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OnUndo",
        "file_name": "Access.Form.OnUndo.md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[Undo](access.form.undo(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "access.form.undo(even).md"
        ]
    },
    {
        "api_name": "Access.Form.OnUnload",
        "file_name": "Access.Form.OnUnload.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Unload** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.Open",
        "file_name": "Access.Form.Open.md",
        "kind": "event",
        "main": "The **Open** event occurs when a form is opened, but before the first record is displayed.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Open"
        ]
    },
    {
        "api_name": "Access.Form.OpenArgs",
        "file_name": "Access.Form.OpenArgs.md",
        "kind": "property",
        "main": "Determines the string expression specified by the _OpenArgs_ argument of the **OpenForm** method that opened a form. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OpenForm",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Form.OrderBy",
        "file_name": "Access.Form.OrderBy.md",
        "kind": "property",
        "main": "Use the **OrderBy** property to specify how you want to sort records in a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "OrderBy",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.OrderByOn",
        "file_name": "Access.Form.OrderByOn.md",
        "kind": "property",
        "main": "Use the **OrderByOn** property to specify whether an object's **OrderBy** property setting is applied. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "OrderByOn",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.OrderByOnLoad",
        "file_name": "Access.Form.OrderByOnLoad.md",
        "kind": "property",
        "main": "Gets or sets whether the sorting specified by the **[OrderBy](Access.Form.OrderBy.md)** property is applied when the form is loaded. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Form.OrderBy.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Orientation",
        "file_name": "Access.Form.Orientation.md",
        "kind": "property",
        "main": "Use the **Orientation** property to specify or determine the view orientation. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Orientation",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.Page",
        "file_name": "Access.Form.Page.md",
        "kind": "property",
        "main": "The **Page** property specifies the current page number when a form is being printed. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Page",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.Pages",
        "file_name": "Access.Form.Pages.md",
        "kind": "property",
        "main": "Use the **Pages** property to return information needed to print page numbers in a form. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Pages",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.Painting",
        "file_name": "Access.Form.Painting.md",
        "kind": "property",
        "main": "Use the **Painting** property to specify whether a form is repainted. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Painting",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.PaintPalette",
        "file_name": "Access.Form.PaintPalette.md",
        "kind": "property",
        "main": "Use the **PaintPalette** property to specify a palette to be used by a form. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PaintPalette",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Form.PaletteSource",
        "file_name": "Access.Form.PaletteSource.md",
        "kind": "property",
        "main": "Use the **PaletteSource** property to specify the palette for a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "PaletteSource",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.Parent",
        "file_name": "Access.Form.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.Picture",
        "file_name": "Access.Form.Picture.md",
        "kind": "property",
        "main": "Use the **Picture** property to specify a bitmap or other type of graphic to be used as a background picture on a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Picture",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.PictureAlignment",
        "file_name": "Access.Form.PictureAlignment.md",
        "kind": "property",
        "main": "Use the **PictureAlignment** property to specify where a background picture will appear in an image control or on a form or report. Read/write **Byte**.Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "PictureAlignment",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.PictureData",
        "file_name": "Access.Form.PictureData.md",
        "kind": "property",
        "main": "Use the **PictureData** property to copy the picture to another object that supports the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Form.PicturePalette",
        "file_name": "Access.Form.PicturePalette.md",
        "kind": "property",
        "main": "Use the **PicturePalette** property to specify a palette to be used by a form. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PicturePalette",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Form.PictureSizeMode",
        "file_name": "Access.Form.PictureSizeMode.md",
        "kind": "property",
        "main": "Use the **PictureSizeMode** property to specify how a picture for a form or report is sized. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureSizeMode",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.PictureTiling",
        "file_name": "Access.Form.PictureTiling.md",
        "kind": "property",
        "main": "Use the **PictureTiling** property to specify whether a background picture is tiled across the entire image control, Form window, form, or page of a report. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureTiling",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.PictureType",
        "file_name": "Access.Form.PictureType.md",
        "kind": "property",
        "main": "Use the **PictureType** property to specify whether Microsoft Access stores an object's picture as a linked or an embedded object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.PivotTable",
        "file_name": "Access.Form.PivotTable.md",
        "kind": "property",
        "main": "Returns a **PivotTable** object representing a PivotTable view on a form. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "PivotTable"
        ]
    },
    {
        "api_name": "Access.Form.PivotTableChange",
        "file_name": "Access.Form.PivotTableChange(even).md",
        "kind": "event",
        "main": "Occurs whenever the specified PivotTable view field, field set, or total is added or deleted.\n",
        "Parameters": [
            "Reason"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.PivotTableChange",
        "file_name": "Access.Form.PivotTableChange(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[PivotTableChange](access.form.pivottablechange(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "access.form.pivottablechange(even).md"
        ]
    },
    {
        "api_name": "Access.Form.PopUp",
        "file_name": "Access.Form.PopUp.md",
        "kind": "property",
        "main": "Specifies whether a form opens as a pop-up window. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Printer",
        "file_name": "Access.Form.Printer.md",
        "kind": "property",
        "main": "Returns or sets a **[Printer](Access.Printer.md)** object representing the default printer on the current system. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Printer.md"
        ]
    },
    {
        "api_name": "Access.Form.Properties",
        "file_name": "Access.Form.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Form.PrtDevMode",
        "file_name": "Access.Form.PrtDevMode.md",
        "kind": "property",
        "main": "Use the **PrtDevMode** property to set or return printing device mode information specified for a form or report in the **Print** dialog box. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PrtDevMode",
            "Print",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Form.PrtDevNames",
        "file_name": "Access.Form.PrtDevNames.md",
        "kind": "property",
        "main": "Use the **PrtDevNames** property to set or return information about the printer selected in the **Print** dialog box for a form or report. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PrtDevNames",
            "Print",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Form.PrtMip",
        "file_name": "Access.Form.PrtMip.md",
        "kind": "property",
        "main": "Use the **PrtMip** property in Visual Basic to set or return the device mode information specified for a form or report in the **Print** dialog box.\n",
        "Parameters": [],
        "Return_value": [
            "PrtMip",
            "Print"
        ]
    },
    {
        "api_name": "Access.Form.Query",
        "file_name": "Access.Form.Query(even).md",
        "kind": "event",
        "main": "Occurs whenever the specified PivotTable view query becomes necessary. The query may not occur immediately; it may be delayed until the new data is displayed.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.Query",
        "file_name": "Access.Form.Query(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[Query](Access.Form.Query(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.Query(even).md"
        ]
    },
    {
        "api_name": "Access.Form.Recalc",
        "file_name": "Access.Form.Recalc.md",
        "kind": "method",
        "main": "The **Recalc** method immediately updates all calculated controls on a form.\n",
        "Parameters": [],
        "Return_value": [
            "Recalc"
        ]
    },
    {
        "api_name": "Access.Form.RecordLocks",
        "file_name": "Access.Form.RecordLocks.md",
        "kind": "property",
        "main": "Use the **RecordLocks** property to determine how records are locked and what happens when two users try to edit the same record at the same time. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "RecordLocks"
        ]
    },
    {
        "api_name": "Access.Form.RecordSelectors",
        "file_name": "Access.Form.RecordSelectors.md",
        "kind": "property",
        "main": "Use the **RecordSelectors** property to specify whether a form displays record selectors in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "RecordSelectors",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Recordset",
        "file_name": "Access.Form.Recordset.md",
        "kind": "property",
        "main": "Returns or sets the ADO **Recordset** or DAO **Recordset** object that represents the record source for the specified object. Read/write **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Recordset",
            "Object"
        ]
    },
    {
        "api_name": "Access.Form.RecordsetClone",
        "file_name": "Access.Form.RecordsetClone.md",
        "kind": "property",
        "main": "Use the **RecordsetClone** property to refer to a form's **Recordset** object specified by the form's **[RecordSource](Access.Form.RecordSource.md)** property. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "RecordsetClone",
            "Access.Form.RecordSource.md"
        ]
    },
    {
        "api_name": "Access.Form.RecordSource",
        "file_name": "Access.Form.RecordSource.md",
        "kind": "property",
        "main": "Use the **RecordSource** property to specify the source of the data for a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "RecordSource",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.RecordSourceQualifier",
        "file_name": "Access.Form.RecordSourceQualifier.md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating the SQL Server owner name of the record source for the specified form. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.Refresh",
        "file_name": "Access.Form.Refresh.md",
        "kind": "method",
        "main": "The **Refresh** method immediately updates the records in the underlying record source for a specified form or datasheet to reflect changes made to the data by you and other users in a multiuser environment.\n",
        "Parameters": [],
        "Return_value": [
            "Refresh"
        ]
    },
    {
        "api_name": "Access.Form.Repaint",
        "file_name": "Access.Form.Repaint.md",
        "kind": "method",
        "main": "The **Repaint** method completes any pending screen updates for a specified form. When performed on a form, the **Repaint** method also completes any pending recalculations of the form's controls.\n",
        "Parameters": [],
        "Return_value": [
            "Repaint"
        ]
    },
    {
        "api_name": "Access.Form.Requery",
        "file_name": "Access.Form.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified form by requerying the source of data for the form.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.Form.Resize",
        "file_name": "Access.Form.Resize.md",
        "kind": "event",
        "main": "The **Resize** event occurs when a form is opened and whenever the size of a form changes.\n",
        "Parameters": [],
        "Return_value": [
            "Resize"
        ]
    },
    {
        "api_name": "Access.Form.ResyncCommand",
        "file_name": "Access.Form.ResyncCommand.md",
        "kind": "property",
        "main": "Use the **ResyncCommand** property to specify or determine the SQL statement or stored procedure that will be used in an updateable snapshot of a table. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ResyncCommand",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.RibbonName",
        "file_name": "Access.Form.RibbonName.md",
        "kind": "property",
        "main": "Gets or sets the name of the customized ribbon to be displayed when the specified form is loaded. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.RowHeight",
        "file_name": "Access.Form.RowHeight.md",
        "kind": "property",
        "main": "Use the **RowHeight** property to specify the height of all rows in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "RowHeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.ScrollBars",
        "file_name": "Access.Form.ScrollBars.md",
        "kind": "property",
        "main": "Use the **ScrollBars** property to specify whether scroll bars appear on a form. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ScrollBars",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.Section",
        "file_name": "Access.Form.Section.md",
        "kind": "property",
        "main": "Use the **Section** property to identify a section of a form and provide access to the properties of that section. Read-only **Section** object.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Section"
        ]
    },
    {
        "api_name": "Access.Form.SelectionChange",
        "file_name": "Access.Form.SelectionChange(even).md",
        "kind": "event",
        "main": "Occurs whenever the user makes a new selection in a PivotChart view or PivotTable view.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.SelectionChange",
        "file_name": "Access.Form.SelectionChange(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[SelectionChange](Access.Form.SelectionChange(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.SelectionChange(even).md"
        ]
    },
    {
        "api_name": "Access.Form.SelHeight",
        "file_name": "Access.Form.SelHeight.md",
        "kind": "property",
        "main": "Use the **SelHeight** property to specify or determine the number of selected rows (records) in the current selection rectangle in a table, query, or form datasheet, or the number of selected records in a continuous form. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "SelHeight",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.SelLeft",
        "file_name": "Access.Form.SelLeft.md",
        "kind": "property",
        "main": "Use the **SelLeft** property to specify or determine which column (field) is leftmost in the current selection rectangle. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "SelLeft",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.SelTop",
        "file_name": "Access.Form.SelTop.md",
        "kind": "property",
        "main": "Use the **SelTop** property to specify or determine which row (record) is topmost in the current selection rectangle in a table, query, or form datasheet, or which selected record is topmost in a continuous form. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "SelTop",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.SelWidth",
        "file_name": "Access.Form.SelWidth.md",
        "kind": "property",
        "main": "Use the **SelWidth** property to specify or determine the number of selected columns (fields) in the current selection rectangle. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "SelWidth",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.ServerFilter",
        "file_name": "Access.Form.ServerFilter.md",
        "kind": "property",
        "main": "Use the **ServerFilter** property to specify a subset of records to be displayed when a server filter is applied to a form within a Microsoft Access project (.adp) or database. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ServerFilter",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.ServerFilterByForm",
        "file_name": "Access.Form.ServerFilterByForm.md",
        "kind": "property",
        "main": "Use the **ServerFilterByForm** property to specify or determine whether a form is opened in the Server Filter By Form window. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ServerFilterByForm",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.SetFocus",
        "file_name": "Access.Form.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.Form.ShortcutMenu",
        "file_name": "Access.Form.ShortcutMenu.md",
        "kind": "property",
        "main": "Use the **ShortcutMenu** property to specify whether a shortcut menu is displayed when you right-click an object on a form. For example, you might want to disable a shortcut menu to prevent the user from changing the form's underlying record source by using one of the filtering commands on the form's shortcut menu. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenu",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.ShortcutMenuBar",
        "file_name": "Access.Form.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.Form.SplitFormDatasheet",
        "file_name": "Access.Form.SplitFormDatasheet.md",
        "kind": "property",
        "main": "Gets or sets whether the user can edit records in the datasheet when a form is displayed in Split Form view. Read/write **[AcSplitFormDatasheet](Access.AcSplitFormDatasheet.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcSplitFormDatasheet.md"
        ]
    },
    {
        "api_name": "Access.Form.SplitFormOrientation",
        "file_name": "Access.Form.SplitFormOrientation.md",
        "kind": "property",
        "main": "Gets or sets the position of the datasheet relative to the form when the form is displayed in Split Form view. Read/write **[AcSplitFormOrientation](Access.AcSplitFormOrientation.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcSplitFormOrientation.md"
        ]
    },
    {
        "api_name": "Access.Form.SplitFormPrinting",
        "file_name": "Access.Form.SplitFormPrinting.md",
        "kind": "property",
        "main": "Gets or sets whether the contents of the form or the datasheet are printed when printing a form displayed in Split Form view. Read/write **[AcSplitFormPrinting](Access.AcSplitFormPrinting.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcSplitFormPrinting.md"
        ]
    },
    {
        "api_name": "Access.Form.SplitFormSize",
        "file_name": "Access.Form.SplitFormSize.md",
        "kind": "property",
        "main": "Gets or sets the size in [twips](../language/glossary/vbe-glossary.md#twip) of the form when it's displayed in Split Form view. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.SplitFormSplitterBar",
        "file_name": "Access.Form.SplitFormSplitterBar.md",
        "kind": "property",
        "main": "Gets or sets whether the splitter bar is available when the form is displayed in Split Form mode. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.SplitFormSplitterBarSave",
        "file_name": "Access.Form.SplitFormSplitterBarSave.md",
        "kind": "property",
        "main": "Gets or sets whether the location of the splitter bar is saved when a form that's displayed in Split Form mode is closed. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.SubdatasheetExpanded",
        "file_name": "Access.Form.SubdatasheetExpanded.md",
        "kind": "property",
        "main": "Use the **SubdatasheetExpanded** property to specify or determine the saved state of all subdatasheets within a table or query. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "SubdatasheetExpanded",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.SubdatasheetHeight",
        "file_name": "Access.Form.SubdatasheetHeight.md",
        "kind": "property",
        "main": "Use the **SubdatasheetHeight** property to specify or determine the default display height of a subdatasheet when expanded. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "SubdatasheetHeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.Tag",
        "file_name": "Access.Form.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.Timer",
        "file_name": "Access.Form.Timer.md",
        "kind": "event",
        "main": "The **Timer** event occurs for a form at regular intervals as specified by the form's **[TimerInterval](Access.Form.TimerInterval.md)** property.\n",
        "Parameters": [],
        "Return_value": [
            "Timer",
            "Access.Form.TimerInterval.md"
        ]
    },
    {
        "api_name": "Access.Form.TimerInterval",
        "file_name": "Access.Form.TimerInterval.md",
        "kind": "property",
        "main": "Use the **TimerInterval** property to specify the interval, in milliseconds, between **[Timer](Access.Form.Timer.md)** events on a form. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "TimerInterval",
            "Access.Form.Timer.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Form.Toolbar",
        "file_name": "Access.Form.Toolbar.md",
        "kind": "property",
        "main": "Specifies a custom toolbar to display for a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Form.Undo",
        "file_name": "Access.Form.Undo(even).md",
        "kind": "event",
        "main": "Occurs when the user undoes a change.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.Undo",
        "file_name": "Access.Form.Undo(method).md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.Form.UniqueTable",
        "file_name": "Access.Form.UniqueTable.md",
        "kind": "property",
        "main": "Specifies the table to be updateable when a form is bound to a multiple table view or stored procedure within a Microsoft Access project (.adp).\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.Unload",
        "file_name": "Access.Form.Unload.md",
        "kind": "event",
        "main": "The **Unload** event occurs after a form is closed but before it's removed from the screen. When the form is reloaded, Microsoft Access redisplays the form and reinitializes the contents of all its controls.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Unload"
        ]
    },
    {
        "api_name": "Access.Form.UseDefaultPrinter",
        "file_name": "Access.Form.UseDefaultPrinter.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether the specified form uses the default printer for the system; **True** if the form or report uses the default printer. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Form.VerticalDatasheetGridlineStyle",
        "file_name": "Access.Form.VerticalDatasheetGridlineStyle.md",
        "kind": "property",
        "main": "Returns or sets a **Byte** indicating the line style to use for vertical gridlines on the specified datasheet. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.ViewChange",
        "file_name": "Access.Form.ViewChange(even).md",
        "kind": "event",
        "main": "Occurs whenever the specified PivotChart view or PivotTable view is redrawn.\n",
        "Parameters": [
            "Reason"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Form.ViewChange",
        "file_name": "Access.Form.ViewChange(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[ViewChange](Access.Form.ViewChange(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Access.Form.ViewChange(even).md"
        ]
    },
    {
        "api_name": "Access.Form.ViewsAllowed",
        "file_name": "Access.Form.ViewsAllowed.md",
        "kind": "property",
        "main": "Use the **ViewsAllowed** property to specify whether users can switch between Datasheet view and Form view by choosing the **Form view** or **Datasheet view** command on the **View** menu, or by choosing the arrow next to the **View** button and choosing **Form view** or **Datasheet view**. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ViewsAllowed",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Form.Visible",
        "file_name": "Access.Form.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Form.Width",
        "file_name": "Access.Form.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.WindowHeight",
        "file_name": "Access.Form.WindowHeight.md",
        "kind": "property",
        "main": "Returns the height of a form in [twips](../language/glossary/vbe-glossary.md#twip). Read-only **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.WindowLeft",
        "file_name": "Access.Form.WindowLeft.md",
        "kind": "property",
        "main": "Returns an **Integer** indicating the screen position in [twips](../language/glossary/vbe-glossary.md#twip) of the left edge of a form relative to the left edge of the Microsoft Access window. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.WindowTop",
        "file_name": "Access.Form.WindowTop.md",
        "kind": "property",
        "main": "Returns an **Integer** indicating the screen position in [twips](../language/glossary/vbe-glossary.md#twip) of the top edge of a form relative to the top of the Microsoft Access window. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Form.WindowWidth",
        "file_name": "Access.Form.WindowWidth.md",
        "kind": "property",
        "main": "Returns the width of a form in [twips](../language/glossary/vbe-glossary.md#twip). Read-only **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.FormatCondition.BackColor",
        "file_name": "Access.FormatCondition.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.FormatCondition.Delete",
        "file_name": "Access.FormatCondition.Delete.md",
        "kind": "method",
        "main": "Deletes the specified object.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.FormatCondition.Enabled",
        "file_name": "Access.FormatCondition.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **FormatCondition** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "FormatCondition",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.FormatCondition.Expression1",
        "file_name": "Access.FormatCondition.Expression1.md",
        "kind": "property",
        "main": "Use the **Expression1** property to return the values of a conditional format within a **FormatCondition** object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Expression1",
            "FormatCondition",
            "String"
        ]
    },
    {
        "api_name": "Access.FormatCondition.Expression2",
        "file_name": "Access.FormatCondition.Expression2.md",
        "kind": "property",
        "main": "Use the **Expression2** property to return the values of a conditional format within a **FormatCondition** object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Expression2",
            "FormatCondition",
            "String"
        ]
    },
    {
        "api_name": "Access.FormatCondition.FontBold",
        "file_name": "Access.FormatCondition.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.FormatCondition.FontItalic",
        "file_name": "Access.FormatCondition.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.FormatCondition.FontUnderline",
        "file_name": "Access.FormatCondition.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.FormatCondition.ForeColor",
        "file_name": "Access.FormatCondition.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.FormatCondition.LongestBarLimit",
        "file_name": "Access.FormatCondition.LongestBarLimit.md",
        "kind": "property",
        "main": "Gets or sets how the longest data bar is evaluated for the specified **FormatCondition**. Read/write **[AcFormatBarLimits](Access.AcFormatBarLimits.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "FormatCondition",
            "Access.AcFormatBarLimits.md"
        ]
    },
    {
        "api_name": "Access.FormatCondition.LongestBarValue",
        "file_name": "Access.FormatCondition.LongestBarValue.md",
        "kind": "property",
        "main": "Gets or sets a numeric expression that specifies the value of the longest bar of a **FormatCondition**. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FormatCondition",
            "String"
        ]
    },
    {
        "api_name": "Access.FormatCondition",
        "Events": [],
        "file_name": "Access.FormatCondition.md",
        "kind": "object",
        "main": "The **FormatCondition** object represents a conditional format of a combo box or text box control and is a member of the **[FormatConditions](access.formatconditions.md)** collection.\n",
        "Methods": [
            "Delete",
            "Modify"
        ],
        "Properties": [
            "BackColor",
            "Enabled",
            "Expression1",
            "Expression2",
            "FontBold",
            "FontItalic",
            "FontUnderline",
            "ForeColor",
            "LongestBarLimit",
            "LongestBarValue",
            "Operator",
            "ShortestBarLimit",
            "ShortestBarValue",
            "ShowBarOnly",
            "Type"
        ]
    },
    {
        "api_name": "Access.FormatCondition.Modify",
        "file_name": "Access.FormatCondition.Modify.md",
        "kind": "method",
        "main": "Use the **Modify** method to change the format conditions of a **FormatCondition** object in the **[FormatConditions](Access.FormatConditions.md)** collection of a combo box or text box control.\n",
        "Parameters": [
            "Type",
            "Operator",
            "Expression1",
            "Expression2"
        ],
        "Return_value": [
            "Modify",
            "FormatCondition",
            "Access.FormatConditions.md"
        ]
    },
    {
        "api_name": "Access.FormatCondition.Operator",
        "file_name": "Access.FormatCondition.Operator.md",
        "kind": "property",
        "main": "Use the **Operator** property to return the operator value for the conditional format or data validation of a **FormatCondition** object. Read-only **[AcFormatConditionOperator](Access.AcFormatConditionOperator.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Operator",
            "FormatCondition",
            "Access.AcFormatConditionOperator.md"
        ]
    },
    {
        "api_name": "Access.FormatCondition.ShortestBarLimit",
        "file_name": "Access.FormatCondition.ShortestBarLimit.md",
        "kind": "property",
        "main": "Gets or sets how the shortest data bar is evaluated for the specified **FormatCondition**. Read/write **[AcFormatBarLimits](Access.AcFormatBarLimits.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "FormatCondition",
            "Access.AcFormatBarLimits.md"
        ]
    },
    {
        "api_name": "Access.FormatCondition.ShortestBarValue",
        "file_name": "Access.FormatCondition.ShortestBarValue.md",
        "kind": "property",
        "main": "Gets or sets a numeric expression that specifies the value of the shortest bar of a **FormatCondition**. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FormatCondition",
            "String"
        ]
    },
    {
        "api_name": "Access.FormatCondition.ShowBarOnly",
        "file_name": "Access.FormatCondition.ShowBarOnly.md",
        "kind": "property",
        "main": "Gets or sets whether the data bar or the data bar and its value are displayed. Set to **True** to display only the data bar. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.FormatCondition.Type",
        "file_name": "Access.FormatCondition.Type.md",
        "kind": "property",
        "main": "Returns the value of a **FormatCondition** object type. Read-only **[AcFormatConditionType](Access.AcFormatConditionType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "FormatCondition",
            "Access.AcFormatConditionType.md"
        ]
    },
    {
        "api_name": "Access.FormatConditions.Add",
        "file_name": "Access.FormatConditions.Add.md",
        "kind": "method",
        "main": "Use the **Add** method to add a conditional format as a **[FormatCondition](Access.FormatCondition.md)** object to the **FormatConditions** collection of a combo box or text box control.\n",
        "Parameters": [
            "Type",
            "Operator",
            "Expression1",
            "Expression2"
        ],
        "Return_value": [
            "Add",
            "Access.FormatCondition.md",
            "FormatConditions"
        ]
    },
    {
        "api_name": "Access.FormatConditions.Application",
        "file_name": "Access.FormatConditions.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.FormatConditions.Count",
        "file_name": "Access.FormatConditions.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.FormatConditions.Delete",
        "file_name": "Access.FormatConditions.Delete.md",
        "kind": "method",
        "main": "Deletes the specified object.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.FormatConditions.Item",
        "file_name": "Access.FormatConditions.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **FormatCondition**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "FormatCondition"
        ]
    },
    {
        "api_name": "Access.FormatConditions",
        "Events": [],
        "file_name": "Access.FormatConditions.md",
        "kind": "object",
        "main": "The **FormatConditions** collection represents the collection of conditional formats for a combo box or text box control. Each format is represented by a **[FormatCondition](Access.FormatCondition.md)** object.\n",
        "Methods": [
            "Add",
            "Delete"
        ],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.FormatConditions.Parent",
        "file_name": "Access.FormatConditions.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Forms.Application",
        "file_name": "Access.Forms.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Forms.Count",
        "file_name": "Access.Forms.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.Forms.Item",
        "file_name": "Access.Forms.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Form**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Form"
        ]
    },
    {
        "api_name": "Access.Forms",
        "Events": [],
        "file_name": "Access.Forms.md",
        "kind": "object",
        "main": "The **Forms** collection contains all the currently open forms in a Microsoft Access database.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Forms.Parent",
        "file_name": "Access.Forms.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.GroupLevel.Application",
        "file_name": "Access.GroupLevel.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.GroupLevel.ControlSource",
        "file_name": "Access.GroupLevel.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.GroupLevel.GroupFooter",
        "file_name": "Access.GroupLevel.GroupFooter.md",
        "kind": "property",
        "main": "Use the **GroupFooter** property to create a group footer for a selected field or expression in a report. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "GroupFooter",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.GroupLevel.GroupHeader",
        "file_name": "Access.GroupLevel.GroupHeader.md",
        "kind": "property",
        "main": "Use the **GroupHeader** property to create a group header for a selected field or expression in a report. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "GroupHeader",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.GroupLevel.GroupInterval",
        "file_name": "Access.GroupLevel.GroupInterval.md",
        "kind": "property",
        "main": "Use the **GroupInterval** property with the **[GroupOn](Access.GroupLevel.GroupOn.md)** property to specify how records are grouped in a report. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "GroupInterval",
            "Access.GroupLevel.GroupOn.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.GroupLevel.GroupOn",
        "file_name": "Access.GroupLevel.GroupOn.md",
        "kind": "property",
        "main": "Use the **GroupOn** property in a report to specify how to group data in a field or expression by data type. For example, this property lets you group a **Date** field by month. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "GroupOn",
            "Date",
            "Integer"
        ]
    },
    {
        "api_name": "Access.GroupLevel.KeepTogether",
        "file_name": "Access.GroupLevel.KeepTogether.md",
        "kind": "property",
        "main": "Use the **KeepTogether** property for a group in a report to keep parts of a group (including the group header, detail section, and group footer) together on the same page. For example, you might want a group header to always be printed on the same page with the first detail section. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "KeepTogether",
            "Byte"
        ]
    },
    {
        "api_name": "Access.GroupLevel",
        "Events": [],
        "file_name": "Access.GroupLevel.md",
        "kind": "object",
        "main": "Use the **GroupLevel** property in Visual Basic to refer to the group level that you are grouping or sorting on in a report.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "ControlSource",
            "GroupFooter",
            "GroupHeader",
            "GroupInterval",
            "GroupOn",
            "KeepTogether",
            "Parent",
            "Properties",
            "SortOrder"
        ]
    },
    {
        "api_name": "Access.GroupLevel.Parent",
        "file_name": "Access.GroupLevel.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.GroupLevel.Properties",
        "file_name": "Access.GroupLevel.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.GroupLevel.SortOrder",
        "file_name": "Access.GroupLevel.SortOrder.md",
        "kind": "property",
        "main": "You use the **SortOrder** property to specify the sort order for fields and expressions in a report. For example, if you are printing a list of suppliers, you can sort the records alphabetically by company name. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "SortOrder",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Hyperlink.Address",
        "file_name": "Access.Hyperlink.Address.md",
        "kind": "property",
        "main": "Use the **Address** property to specify or determine the path to an object, document, webpage, or other destination for a **Hyperlink** object associated with a command button, image control, or label control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Address",
            "Hyperlink",
            "String"
        ]
    },
    {
        "api_name": "Access.Hyperlink.AddToFavorites",
        "file_name": "Access.Hyperlink.AddToFavorites.md",
        "kind": "method",
        "main": "The **AddToFavorites** method adds a hyperlink address to the Favorites folder.\n",
        "Parameters": [],
        "Return_value": [
            "AddToFavorites"
        ]
    },
    {
        "api_name": "Access.Hyperlink.CreateNewDocument",
        "file_name": "Access.Hyperlink.CreateNewDocument.md",
        "kind": "method",
        "main": "Use the **CreateNewDocument** method to create a new document associated with a specified hyperlink.\n",
        "Parameters": [
            "FileName",
            "EditNow",
            "Overwrite"
        ],
        "Return_value": [
            "CreateNewDocument"
        ]
    },
    {
        "api_name": "Access.Hyperlink.EmailSubject",
        "file_name": "Access.Hyperlink.EmailSubject.md",
        "kind": "property",
        "main": "Use the **EmailSubject** property to specify or return the email subject line of a hyperlink to an object, document, webpage, or other destination for a command button, image control, or label control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "EmailSubject",
            "String"
        ]
    },
    {
        "api_name": "Access.Hyperlink.Follow",
        "file_name": "Access.Hyperlink.Follow.md",
        "kind": "method",
        "main": "The **Follow** method opens the document or webpage specified by a hyperlink address associated with a control on a form or report.\n",
        "Parameters": [
            "NewWindow",
            "AddHistory",
            "ExtraInfo",
            "Method",
            "HeaderInfo"
        ],
        "Return_value": [
            "Follow"
        ]
    },
    {
        "api_name": "Access.Hyperlink",
        "Events": [],
        "file_name": "Access.Hyperlink.md",
        "kind": "object",
        "main": "The **Hyperlink** object represents a hyperlink associated with a control on a form, report, or data access page.\n",
        "Methods": [],
        "Properties": [
            "Address",
            "EmailSubject",
            "ScreenTip",
            "SubAddress",
            "TextToDisplay"
        ]
    },
    {
        "api_name": "Access.Hyperlink.ScreenTip",
        "file_name": "Access.Hyperlink.ScreenTip.md",
        "kind": "property",
        "main": "Use the **ScreenTip** property to specify or determine the text that is displayed when you move the cursor over a hyperlink control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ScreenTip",
            "String"
        ]
    },
    {
        "api_name": "Access.Hyperlink.SubAddress",
        "file_name": "Access.Hyperlink.SubAddress.md",
        "kind": "property",
        "main": "Use the **SubAddress** property to specify or determine a location within the target document specified by the **[Address](Access.Hyperlink.Address.md)** property. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "SubAddress",
            "Access.Hyperlink.Address.md",
            "String"
        ]
    },
    {
        "api_name": "Access.Hyperlink.TextToDisplay",
        "file_name": "Access.Hyperlink.TextToDisplay.md",
        "kind": "property",
        "main": "Use the **TextToDisplay** property to specify or determine the display text for a hyperlink. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "TextToDisplay",
            "String"
        ]
    },
    {
        "api_name": "Access.Image.Application",
        "file_name": "Access.Image.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Image.BackColor",
        "file_name": "Access.Image.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.BackShade",
        "file_name": "Access.Image.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Image.BackStyle",
        "file_name": "Access.Image.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.BackThemeColorIndex",
        "file_name": "Access.Image.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.BackTint",
        "file_name": "Access.Image.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Image.BorderColor",
        "file_name": "Access.Image.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.BorderShade",
        "file_name": "Access.Image.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Image.BorderStyle",
        "file_name": "Access.Image.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.BorderThemeColorIndex",
        "file_name": "Access.Image.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.BorderTint",
        "file_name": "Access.Image.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Image.BorderWidth",
        "file_name": "Access.Image.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.BottomPadding",
        "file_name": "Access.Image.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the image control and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Image.Click",
        "file_name": "Access.Image.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n> [!NOTE] \n> The functionality for the **Image** object's **Click** and **DoubleClick** events has been deprecated. If you want an image with click/double-click events, use instead a **Button** control and associate an image with that control to provide better accessibility. **Button** controls are part of the Tab Order loop, but **Image** controls are not. Existing applications will not be affected by this change.\n",
        "Parameters": [],
        "Return_value": [
            "Click",
            "Image",
            "DoubleClick",
            "Button"
        ]
    },
    {
        "api_name": "Access.Image.Controls",
        "file_name": "Access.Image.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.Image.ControlTipText",
        "file_name": "Access.Image.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.Image.ControlType",
        "file_name": "Access.Image.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.DblClick",
        "file_name": "Access.Image.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n> [!NOTE] \n> The functionality for the **Image** object's **Click** and **DoubleClick** events has been deprecated. If you want an image with click/double-click events, use instead a **Button** control and associate an image with that control to provide better accessibility. **Button** controls are part of the Tab Order loop, but **Image** controls are not. Existing applications will not be affected by this change.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick",
            "Image",
            "DoubleClick",
            "Button"
        ]
    },
    {
        "api_name": "Access.Image.DisplayWhen",
        "file_name": "Access.Image.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.EventProcPrefix",
        "file_name": "Access.Image.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Image.GridlineColor",
        "file_name": "Access.Image.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified image control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.GridlineShade",
        "file_name": "Access.Image.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.Image.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.Image.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Image.GridlineStyleBottom",
        "file_name": "Access.Image.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified image control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.GridlineStyleLeft",
        "file_name": "Access.Image.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified image control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.GridlineStyleRight",
        "file_name": "Access.Image.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified image control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.GridlineStyleTop",
        "file_name": "Access.Image.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified image control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.GridlineThemeColorIndex",
        "file_name": "Access.Image.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.Image.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.Image.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.GridlineTint",
        "file_name": "Access.Image.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.Image.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.Image.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Image.GridlineWidthBottom",
        "file_name": "Access.Image.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified image control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.GridlineWidthLeft",
        "file_name": "Access.Image.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified image control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.GridlineWidthRight",
        "file_name": "Access.Image.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified image control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.GridlineWidthTop",
        "file_name": "Access.Image.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified image control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.Height",
        "file_name": "Access.Image.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Image.HelpContextId",
        "file_name": "Access.Image.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.HorizontalAnchor",
        "file_name": "Access.Image.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the image is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Image.Hyperlink",
        "file_name": "Access.Image.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.Image.HyperlinkAddress",
        "file_name": "Access.Image.HyperlinkAddress.md",
        "kind": "property",
        "main": "Use the **HyperlinkAddress** property to specify or determine the path to an object, document, webpage, or other destination for a hyperlink associated with the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "HyperlinkAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.Image.HyperlinkSubAddress",
        "file_name": "Access.Image.HyperlinkSubAddress.md",
        "kind": "property",
        "main": "Use the **HyperlinkSubAddress** property to specify or determine a location within the target document specified by the **HyperlinkAddress** property. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "HyperlinkSubAddress",
            "HyperlinkAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.Image.ImageHeight",
        "file_name": "Access.Image.ImageHeight.md",
        "kind": "property",
        "main": "Use the **ImageHeight** property to determine the height in [twips](../language/glossary/vbe-glossary.md#twip) of the picture in an image control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ImageHeight",
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.ImageWidth",
        "file_name": "Access.Image.ImageWidth.md",
        "kind": "property",
        "main": "Use the **ImageWidth** property to determine the width in [twips](../language/glossary/vbe-glossary.md#twip) of a picture in an image control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ImageWidth",
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.InSelection",
        "file_name": "Access.Image.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Image.IsVisible",
        "file_name": "Access.Image.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Image.Layout",
        "file_name": "Access.Image.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified image control. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.Image.LayoutID",
        "file_name": "Access.Image.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified image control. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Image.Left",
        "file_name": "Access.Image.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Image.LeftPadding",
        "file_name": "Access.Image.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the image control and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Image",
        "Events": [
            "Click",
            "DblClick",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.Image.md",
        "kind": "object",
        "main": "This object corresponds to an image control. The image control can add a picture to a form or report. For example, you could include an image control for a logo on an **Invoice** report.\n> [!NOTE] \n> The functionality for the **Image** object's **Click** and **DoubleClick** events has been deprecated. If you want an image with click/double-click events, use instead a **Button** control and associate an image with that control to provide better accessibility. **Button** controls are part of the Tab Order loop, but **Image** controls are not. Existing applications will not be affected by this change.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "Application",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Controls",
            "ControlTipText",
            "ControlType",
            "DisplayWhen",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "Hyperlink",
            "HyperlinkAddress",
            "HyperlinkSubAddress",
            "ImageHeight",
            "ImageWidth",
            "InSelection",
            "IsVisible",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Name",
            "ObjectPalette",
            "OldBorderStyle",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "Parent",
            "Picture",
            "PictureAlignment",
            "PictureData",
            "PictureTiling",
            "PictureType",
            "Properties",
            "RightPadding",
            "Section",
            "ShortcutMenuBar",
            "SizeMode",
            "SpecialEffect",
            "Tag",
            "Top",
            "TopPadding",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.Image.MouseDown",
        "file_name": "Access.Image.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.Image.MouseMove",
        "file_name": "Access.Image.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.Image.MouseUp",
        "file_name": "Access.Image.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.Image.Move",
        "file_name": "Access.Image.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Image.Name",
        "file_name": "Access.Image.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Image.ObjectPalette",
        "file_name": "Access.Image.ObjectPalette.md",
        "kind": "property",
        "main": "The **ObjectPalette** property specifies the palette in the application used to create a bitmap or other graphic that is loaded into the specified control by using the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectPalette",
            "Picture",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Image.OldBorderStyle",
        "file_name": "Access.Image.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.OldValue",
        "file_name": "Access.Image.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Image.OnClick",
        "file_name": "Access.Image.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Image.OnDblClick",
        "file_name": "Access.Image.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Image.OnMouseDown",
        "file_name": "Access.Image.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Image.OnMouseMove",
        "file_name": "Access.Image.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Image.OnMouseUp",
        "file_name": "Access.Image.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Image.Parent",
        "file_name": "Access.Image.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Image.Picture",
        "file_name": "Access.Image.Picture.md",
        "kind": "property",
        "main": "Use the **Picture** property to specify a bitmap or other type of graphic to be displayed on the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Picture",
            "String"
        ]
    },
    {
        "api_name": "Access.Image.PictureAlignment",
        "file_name": "Access.Image.PictureAlignment.md",
        "kind": "property",
        "main": "Use the **PictureAlignment** property to specify where a background picture will appear in an image control or on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureAlignment",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.PictureData",
        "file_name": "Access.Image.PictureData.md",
        "kind": "property",
        "main": "Use the **PictureData** property to copy the picture to another object that supports the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Image.PictureTiling",
        "file_name": "Access.Image.PictureTiling.md",
        "kind": "property",
        "main": "Use the **PictureTiling** property to specify whether a background picture is tiled across the entire image control, Form window, form, or page of a report. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureTiling",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Image.PictureType",
        "file_name": "Access.Image.PictureType.md",
        "kind": "property",
        "main": "Use the **PictureType** property to specify whether Microsoft Access stores an object's picture as a linked or an embedded object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.Properties",
        "file_name": "Access.Image.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Image.Requery",
        "file_name": "Access.Image.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.Image.RightPadding",
        "file_name": "Access.Image.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the image control and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Image.Section",
        "file_name": "Access.Image.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Image.SetFocus",
        "file_name": "Access.Image.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.Image.ShortcutMenuBar",
        "file_name": "Access.Image.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.Image.SizeMode",
        "file_name": "Access.Image.SizeMode.md",
        "kind": "property",
        "main": "Use the **SizeMode** property to specify how to size a picture or other object in a bound object frame, an unbound object frame, or an image control.\n",
        "Parameters": [],
        "Return_value": [
            "SizeMode"
        ]
    },
    {
        "api_name": "Access.Image.SizeToFit",
        "file_name": "Access.Image.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.Image.SpecialEffect",
        "file_name": "Access.Image.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Image.Tag",
        "file_name": "Access.Image.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Image.Top",
        "file_name": "Access.Image.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Image.TopPadding",
        "file_name": "Access.Image.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the image control and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Image.VerticalAnchor",
        "file_name": "Access.Image.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified image is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Image.Visible",
        "file_name": "Access.Image.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Image.Width",
        "file_name": "Access.Image.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecification.Application",
        "file_name": "Access.ImportExportSpecification.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecification.Delete",
        "file_name": "Access.ImportExportSpecification.Delete.md",
        "kind": "method",
        "main": "Deletes the specified **ImportExportSpecification** object from the **[ImportExportSpecifications](Access.ImportExportSpecifications.md)** collection.\n",
        "Parameters": [],
        "Return_value": [
            "ImportExportSpecification",
            "Access.ImportExportSpecifications.md"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecification.Description",
        "file_name": "Access.ImportExportSpecification.Description.md",
        "kind": "property",
        "main": "Gets or sets a **String** that describes the specified **ImportExportSpecification** object. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "ImportExportSpecification"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecification.Execute",
        "file_name": "Access.ImportExportSpecification.Execute.md",
        "kind": "method",
        "main": "Executes the specified import or export specification.\n",
        "Parameters": [
            "OverwritePrompt"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ImportExportSpecification",
        "Events": [],
        "file_name": "Access.ImportExportSpecification.md",
        "kind": "object",
        "main": "Represents a saved import or export operation.\n",
        "Methods": [
            "Delete",
            "Execute"
        ],
        "Properties": [
            "Application",
            "Description",
            "Name",
            "Parent",
            "XML"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecification.Name",
        "file_name": "Access.ImportExportSpecification.Name.md",
        "kind": "property",
        "main": "Gets or sets the name of the specified **ImportExportSpecification** object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ImportExportSpecification",
            "String"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecification.Parent",
        "file_name": "Access.ImportExportSpecification.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecification.XML",
        "file_name": "Access.ImportExportSpecification.XML.md",
        "kind": "property",
        "main": "Gets or sets the Extensible Markup Language (XML) string that defines an **ImportExportSpecification** object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ImportExportSpecification",
            "String"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecifications.Add",
        "file_name": "Access.ImportExportSpecifications.Add.md",
        "kind": "method",
        "main": "Adds a new **[ImportExportSpecification](Access.ImportExportSpecification.md)** object to the **ImportExportSpecifications** collection.\n",
        "Parameters": [
            "Name",
            "SpecificationDefinition"
        ],
        "Return_value": [
            "Access.ImportExportSpecification.md",
            "ImportExportSpecifications"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecifications.Application",
        "file_name": "Access.ImportExportSpecifications.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecifications.Count",
        "file_name": "Access.ImportExportSpecifications.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecifications.Item",
        "file_name": "Access.ImportExportSpecifications.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **ImportExportSpecification**.\n",
        "Parameters": [],
        "Return_value": [
            "Item",
            "ImportExportSpecification"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecifications",
        "Events": [],
        "file_name": "Access.ImportExportSpecifications.md",
        "kind": "object",
        "main": "Represents the collection of available **[ImportExportSpecification](Access.ImportExportSpecification.md)** objects.\n",
        "Methods": [
            "Add"
        ],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.ImportExportSpecifications.Parent",
        "file_name": "Access.ImportExportSpecifications.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.Label.Application",
        "file_name": "Access.Label.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Label.BackColor",
        "file_name": "Access.Label.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.BackShade",
        "file_name": "Access.Label.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Label.BackStyle",
        "file_name": "Access.Label.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.BackThemeColorIndex",
        "file_name": "Access.Label.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.BackTint",
        "file_name": "Access.Label.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Label.BorderColor",
        "file_name": "Access.Label.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.BorderShade",
        "file_name": "Access.Label.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Label.BorderStyle",
        "file_name": "Access.Label.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.BorderThemeColorIndex",
        "file_name": "Access.Label.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.BorderTint",
        "file_name": "Access.Label.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Label.BorderWidth",
        "file_name": "Access.Label.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.BottomMargin",
        "file_name": "Access.Label.BottomMargin.md",
        "kind": "property",
        "main": "Along with the **LeftMargin**, **RightMargin**, and **TopMargin** properties, specifies the location of information displayed within a label control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LeftMargin",
            "RightMargin",
            "TopMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.BottomPadding",
        "file_name": "Access.Label.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the label and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.Caption",
        "file_name": "Access.Label.Caption.md",
        "kind": "property",
        "main": "Gets or sets the text that appears in the control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Label.Click",
        "file_name": "Access.Label.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.Label.ControlTipText",
        "file_name": "Access.Label.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.Label.ControlType",
        "file_name": "Access.Label.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.DblClick",
        "file_name": "Access.Label.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.Label.DisplayWhen",
        "file_name": "Access.Label.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.EventProcPrefix",
        "file_name": "Access.Label.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Label.FontBold",
        "file_name": "Access.Label.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Label.FontItalic",
        "file_name": "Access.Label.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Label.FontName",
        "file_name": "Access.Label.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.Label.FontSize",
        "file_name": "Access.Label.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.FontUnderline",
        "file_name": "Access.Label.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Label.FontWeight",
        "file_name": "Access.Label.FontWeight.md",
        "kind": "property",
        "main": "Use the **FontWeight** property to specify the line width that Windows uses to display and print characters in a control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.ForeColor",
        "file_name": "Access.Label.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.ForeShade",
        "file_name": "Access.Label.ForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Label.ForeThemeColorIndex",
        "file_name": "Access.Label.ForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **ForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.ForeTint",
        "file_name": "Access.Label.ForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Label.GridlineColor",
        "file_name": "Access.Label.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified label. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.GridlineShade",
        "file_name": "Access.Label.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.Label.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.Label.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Label.GridlineStyleBottom",
        "file_name": "Access.Label.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified label. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.GridlineStyleLeft",
        "file_name": "Access.Label.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified label. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.GridlineStyleRight",
        "file_name": "Access.Label.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified label. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.GridlineStyleTop",
        "file_name": "Access.Label.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified label. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.GridlineThemeColorIndex",
        "file_name": "Access.Label.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.Label.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.Label.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.GridlineTint",
        "file_name": "Access.Label.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.Label.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.Label.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Label.GridlineWidthBottom",
        "file_name": "Access.Label.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified label. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.GridlineWidthLeft",
        "file_name": "Access.Label.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified label. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.GridlineWidthRight",
        "file_name": "Access.Label.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified label. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.GridlineWidthTop",
        "file_name": "Access.Label.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified label. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.Height",
        "file_name": "Access.Label.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.HelpContextId",
        "file_name": "Access.Label.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.HorizontalAnchor",
        "file_name": "Access.Label.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the label is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Label.Hyperlink",
        "file_name": "Access.Label.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.Label.HyperlinkAddress",
        "file_name": "Access.Label.HyperlinkAddress.md",
        "kind": "property",
        "main": "Use the **HyperlinkAddress** property to specify or determine the path to an object, document, webpage, or other destination for a hyperlink associated with the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "HyperlinkAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.Label.HyperlinkSubAddress",
        "file_name": "Access.Label.HyperlinkSubAddress.md",
        "kind": "property",
        "main": "Use the **HyperlinkSubAddress** property to specify or determine a location within the target document specified by the **HyperlinkAddress** property. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "HyperlinkSubAddress",
            "HyperlinkAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.Label.InSelection",
        "file_name": "Access.Label.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Label.IsVisible",
        "file_name": "Access.Label.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Label.Layout",
        "file_name": "Access.Label.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified label. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.Label.LayoutID",
        "file_name": "Access.Label.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified label. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.Left",
        "file_name": "Access.Label.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.LeftMargin",
        "file_name": "Access.Label.LeftMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **RightMargin**, and **BottomMargin** properties, specifies the location of information displayed within a label control. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "RightMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.LeftPadding",
        "file_name": "Access.Label.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the label and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.LineSpacing",
        "file_name": "Access.Label.LineSpacing.md",
        "kind": "property",
        "main": "Use the **LineSpacing** property to specify or determine the location of information displayed within a label or text box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LineSpacing",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label",
        "Events": [
            "Click",
            "DblClick",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.Label.md",
        "kind": "object",
        "main": "This object corresponds to a label control. Labels on a form or report display descriptive text such as titles, captions, or brief instructions.\n",
        "Methods": [
            "Move",
            "SizeToFit"
        ],
        "Properties": [
            "Application",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomMargin",
            "BottomPadding",
            "Caption",
            "ControlTipText",
            "ControlType",
            "DisplayWhen",
            "EventProcPrefix",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "FontWeight",
            "ForeColor",
            "ForeShade",
            "ForeThemeColorIndex",
            "ForeTint",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "Hyperlink",
            "HyperlinkAddress",
            "HyperlinkSubAddress",
            "InSelection",
            "IsVisible",
            "Layout",
            "LayoutID",
            "Left",
            "LeftMargin",
            "LeftPadding",
            "LineSpacing",
            "Name",
            "NumeralShapes",
            "OldBorderStyle",
            "OnClick",
            "OnDblClick",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "Parent",
            "Properties",
            "ReadingOrder",
            "RightMargin",
            "RightPadding",
            "Section",
            "ShortcutMenuBar",
            "SmartTags",
            "SpecialEffect",
            "Tag",
            "TextAlign",
            "ThemeFontIndex",
            "Top",
            "TopMargin",
            "TopPadding",
            "Vertical",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.Label.MouseDown",
        "file_name": "Access.Label.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.Label.MouseMove",
        "file_name": "Access.Label.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.Label.MouseUp",
        "file_name": "Access.Label.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.Label.Move",
        "file_name": "Access.Label.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Label.Name",
        "file_name": "Access.Label.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Label.NumeralShapes",
        "file_name": "Access.Label.NumeralShapes.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Label.OldBorderStyle",
        "file_name": "Access.Label.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.OnClick",
        "file_name": "Access.Label.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Label.OnDblClick",
        "file_name": "Access.Label.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Label.OnMouseDown",
        "file_name": "Access.Label.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Label.OnMouseMove",
        "file_name": "Access.Label.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Label.OnMouseUp",
        "file_name": "Access.Label.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Label.Parent",
        "file_name": "Access.Label.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Label.Properties",
        "file_name": "Access.Label.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Label.ReadingOrder",
        "file_name": "Access.Label.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.RightMargin",
        "file_name": "Access.Label.RightMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **LeftMargin**, and **BottomMargin** properties, specifies the location of information displayed within a label control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "LeftMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.RightPadding",
        "file_name": "Access.Label.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the label and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.Section",
        "file_name": "Access.Label.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.ShortcutMenuBar",
        "file_name": "Access.Label.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.Label.SizeToFit",
        "file_name": "Access.Label.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.Label.SmartTags",
        "file_name": "Access.Label.SmartTags.md",
        "kind": "property",
        "main": "Returns a **[SmartTags](Access.SmartTags.md)** collection that represents the collection of smart tags that have been added to a control. \n",
        "Parameters": [],
        "Return_value": [
            "Access.SmartTags.md"
        ]
    },
    {
        "api_name": "Access.Label.SpecialEffect",
        "file_name": "Access.Label.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.Tag",
        "file_name": "Access.Label.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Label.TextAlign",
        "file_name": "Access.Label.TextAlign.md",
        "kind": "property",
        "main": "The **TextAlign** property specifies the text alignment in new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "TextAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Label.ThemeFontIndex",
        "file_name": "Access.Label.ThemeFontIndex.md",
        "kind": "property",
        "main": "Gets or sets the font index that represents a font in the applied theme associated with the **FontName** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Long"
        ]
    },
    {
        "api_name": "Access.Label.Top",
        "file_name": "Access.Label.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.TopMargin",
        "file_name": "Access.Label.TopMargin.md",
        "kind": "property",
        "main": "Along with the **LeftMargin**, **RightMargin**, and **BottomMargin** properties, specifies the location of information displayed within a label control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LeftMargin",
            "RightMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.TopPadding",
        "file_name": "Access.Label.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the label and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Label.Vertical",
        "file_name": "Access.Label.Vertical.md",
        "kind": "property",
        "main": "Use the **Vertical** property to set a form control for vertical display and editing, or set a report control for vertical display and printing. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Vertical",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Label.VerticalAnchor",
        "file_name": "Access.Label.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified label is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Label.Visible",
        "file_name": "Access.Label.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Label.Width",
        "file_name": "Access.Label.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Line.Application",
        "file_name": "Access.Line.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Line.BorderColor",
        "file_name": "Access.Line.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Line.BorderShade",
        "file_name": "Access.Line.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Line.BorderStyle",
        "file_name": "Access.Line.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Line.BorderThemeColorIndex",
        "file_name": "Access.Line.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Line.BorderTint",
        "file_name": "Access.Line.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Line.BorderWidth",
        "file_name": "Access.Line.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Line.ControlType",
        "file_name": "Access.Line.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Line.DisplayWhen",
        "file_name": "Access.Line.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Line.EventProcPrefix",
        "file_name": "Access.Line.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Line.Height",
        "file_name": "Access.Line.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Line.HorizontalAnchor",
        "file_name": "Access.Line.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the line is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Line.InSelection",
        "file_name": "Access.Line.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Line.IsVisible",
        "file_name": "Access.Line.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Line.Left",
        "file_name": "Access.Line.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Line.LineSlant",
        "file_name": "Access.Line.LineSlant.md",
        "kind": "property",
        "main": "You use the **LineSlant** property to specify whether a line control slants from upper-left to lower-right or from upper-right to lower-left. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "LineSlant",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Line",
        "Events": [],
        "file_name": "Access.Line.md",
        "kind": "object",
        "main": "The line control displays a horizontal, vertical, or diagonal line on a form or report.\n",
        "Methods": [
            "Move",
            "SizeToFit"
        ],
        "Properties": [
            "Application",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "ControlType",
            "DisplayWhen",
            "EventProcPrefix",
            "Height",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "Left",
            "LineSlant",
            "Name",
            "OldBorderStyle",
            "Parent",
            "Properties",
            "Section",
            "SpecialEffect",
            "Tag",
            "Top",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.Line.Move",
        "file_name": "Access.Line.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Line.Name",
        "file_name": "Access.Line.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Line.OldBorderStyle",
        "file_name": "Access.Line.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Line.Parent",
        "file_name": "Access.Line.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Line.Properties",
        "file_name": "Access.Line.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Line.Section",
        "file_name": "Access.Line.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Line.SizeToFit",
        "file_name": "Access.Line.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.Line.SpecialEffect",
        "file_name": "Access.Line.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Line.Tag",
        "file_name": "Access.Line.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Line.Top",
        "file_name": "Access.Line.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Line.VerticalAnchor",
        "file_name": "Access.Line.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified line is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Line.Visible",
        "file_name": "Access.Line.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Line.Width",
        "file_name": "Access.Line.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.AddColon",
        "file_name": "Access.ListBox.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.AddItem",
        "file_name": "Access.ListBox.AddItem.md",
        "kind": "method",
        "main": "Adds a new item to the list of values displayed by the specified list box control.\n",
        "Parameters": [
            "Item",
            "Index"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ListBox.AfterUpdate",
        "file_name": "Access.ListBox.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.ListBox.AfterUpdate",
        "file_name": "Access.ListBox.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.listbox.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.AllowValueListEdits",
        "file_name": "Access.ListBox.AllowValueListEdits.md",
        "kind": "property",
        "main": "Gets or sets whether the **Edit List Items** command is available when the user right-clicks a list box. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.Application",
        "file_name": "Access.ListBox.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.ListBox.AutoLabel",
        "file_name": "Access.ListBox.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.BackColor",
        "file_name": "Access.ListBox.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.BackShade",
        "file_name": "Access.ListBox.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ListBox.BackThemeColorIndex",
        "file_name": "Access.ListBox.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.BackTint",
        "file_name": "Access.ListBox.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ListBox.BeforeUpdate",
        "file_name": "Access.ListBox.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.ListBox.BeforeUpdate",
        "file_name": "Access.ListBox.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.ListBox.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.BorderColor",
        "file_name": "Access.ListBox.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.BorderShade",
        "file_name": "Access.ListBox.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ListBox.BorderStyle",
        "file_name": "Access.ListBox.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.BorderThemeColorIndex",
        "file_name": "Access.ListBox.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.BorderTint",
        "file_name": "Access.ListBox.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ListBox.BorderWidth",
        "file_name": "Access.ListBox.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.BottomPadding",
        "file_name": "Access.ListBox.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the list box and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.BoundColumn",
        "file_name": "Access.ListBox.BoundColumn.md",
        "kind": "property",
        "main": "When you make a selection from a list box, the **BoundColumn** property tells Microsoft Access which column's values to use as the value of the control. If the control is bound to a field, the value in the column specified by the **BoundColumn** property is stored in the field named in the **ControlSource** property. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BoundColumn",
            "ControlSource",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.Click",
        "file_name": "Access.ListBox.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.ListBox.Column",
        "file_name": "Access.ListBox.Column.md",
        "kind": "property",
        "main": "Use the **Column** property to refer to a specific column or column and row combination in a multiple-column combo box or list box. Read-only **Variant**.\n",
        "Parameters": [
            "Index",
            "Row"
        ],
        "Return_value": [
            "Column",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ListBox.ColumnCount",
        "file_name": "Access.ListBox.ColumnCount.md",
        "kind": "property",
        "main": "Use the **ColumnCount** property to specify the number of columns displayed in a list box or in the list box portion of a combo box, or sent to OLE objects in a chart control or unbound object frame. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnCount",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.ColumnHeads",
        "file_name": "Access.ListBox.ColumnHeads.md",
        "kind": "property",
        "main": "Use the **ColumnHeads** property to display a single row of column headings for list boxes, combo boxes, and OLE objects that accept column headings. You can also use this property to create a label for each entry in a chart control. What is actually displayed as the first-row column heading depends on the object's **RowSourceType** property setting. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHeads",
            "RowSourceType",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.ColumnHidden",
        "file_name": "Access.ListBox.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.ColumnOrder",
        "file_name": "Access.ListBox.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.ColumnWidth",
        "file_name": "Access.ListBox.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.ColumnWidths",
        "file_name": "Access.ListBox.ColumnWidths.md",
        "kind": "property",
        "main": "Use the **ColumnWidths** property to specify the width of each column in a multiple-column list box. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidths",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.Controls",
        "file_name": "Access.ListBox.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.ListBox.ControlSource",
        "file_name": "Access.ListBox.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.ControlTipText",
        "file_name": "Access.ListBox.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.ControlType",
        "file_name": "Access.ListBox.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.DblClick",
        "file_name": "Access.ListBox.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.ListBox.DefaultValue",
        "file_name": "Access.ListBox.DefaultValue.md",
        "kind": "property",
        "main": "Specifies a value that is automatically entered in a field when a new record is created. For example, in an **Addresses** table, you can set the default value for the **City** field to New York. When users add a record to the table, they can either accept this value or enter the name of a different city. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Addresses",
            "City",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.DisplayWhen",
        "file_name": "Access.ListBox.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.Enabled",
        "file_name": "Access.ListBox.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.Enter",
        "file_name": "Access.ListBox.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.ListBox.EventProcPrefix",
        "file_name": "Access.ListBox.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.Exit",
        "file_name": "Access.ListBox.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.ListBox.FontBold",
        "file_name": "Access.ListBox.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.FontItalic",
        "file_name": "Access.ListBox.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.FontName",
        "file_name": "Access.ListBox.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.FontSize",
        "file_name": "Access.ListBox.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.FontUnderline",
        "file_name": "Access.ListBox.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.FontWeight",
        "file_name": "Access.ListBox.FontWeight.md",
        "kind": "property",
        "main": "Use the **FontWeight** property to specify the line width that Windows uses to display and print characters in a control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.ForeColor",
        "file_name": "Access.ListBox.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.ForeShade",
        "file_name": "Access.ListBox.ForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ListBox.ForeThemeColorIndex",
        "file_name": "Access.ListBox.ForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **ForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.ForeTint",
        "file_name": "Access.ListBox.ForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ListBox.GotFocus",
        "file_name": "Access.ListBox.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineColor",
        "file_name": "Access.ListBox.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified list box. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineShade",
        "file_name": "Access.ListBox.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.ListBox.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ListBox.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineStyleBottom",
        "file_name": "Access.ListBox.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified list box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineStyleLeft",
        "file_name": "Access.ListBox.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified list box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineStyleRight",
        "file_name": "Access.ListBox.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified list box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineStyleTop",
        "file_name": "Access.ListBox.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified list box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineThemeColorIndex",
        "file_name": "Access.ListBox.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.ListBox.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ListBox.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineTint",
        "file_name": "Access.ListBox.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.ListBox.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ListBox.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineWidthBottom",
        "file_name": "Access.ListBox.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified list box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineWidthLeft",
        "file_name": "Access.ListBox.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified list box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineWidthRight",
        "file_name": "Access.ListBox.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified list box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.GridlineWidthTop",
        "file_name": "Access.ListBox.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified list box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.Height",
        "file_name": "Access.ListBox.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.HelpContextId",
        "file_name": "Access.ListBox.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.HideDuplicates",
        "file_name": "Access.ListBox.HideDuplicates.md",
        "kind": "property",
        "main": "Use the **HideDuplicates** property to hide a control on a report when its value is the same as in the preceding record. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HideDuplicates",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.HorizontalAnchor",
        "file_name": "Access.ListBox.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the list box is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.ListBox.Hyperlink",
        "file_name": "Access.ListBox.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.ListBox.IMEHold",
        "file_name": "Access.ListBox.IMEHold.md",
        "kind": "property",
        "main": "Use the **IMEHold/Hold KanjiConversionMode** property to show whether the Kanji Conversion Mode is maintained when the control loses the focus. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.IMEMode",
        "file_name": "Access.ListBox.IMEMode.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ListBox.IMESentenceMode",
        "file_name": "Access.ListBox.IMESentenceMode.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ListBox.InheritValueList",
        "file_name": "Access.ListBox.InheritValueList.md",
        "kind": "property",
        "main": "Gets or sets whether a list box's value list is inherited from its field. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.InSelection",
        "file_name": "Access.ListBox.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.IsVisible",
        "file_name": "Access.ListBox.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.ItemData",
        "file_name": "Access.ListBox.ItemData.md",
        "kind": "property",
        "main": "The **ItemData** property returns the data in the bound column for the specified row in a list box. Read-only **Variant**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "ItemData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ListBox.ItemsSelected",
        "file_name": "Access.ListBox.ItemsSelected.md",
        "kind": "property",
        "main": "Use the **ItemsSelected** property to return a read-only reference to the hidden **ItemsSelected** collection. This hidden collection can be used to access data in the selected rows of a multiselect list box control.\n",
        "Parameters": [],
        "Return_value": [
            "ItemsSelected"
        ]
    },
    {
        "api_name": "Access.ListBox.KeyDown",
        "file_name": "Access.ListBox.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ListBox.KeyPress",
        "file_name": "Access.ListBox.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ListBox.KeyUp",
        "file_name": "Access.ListBox.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ListBox.LabelAlign",
        "file_name": "Access.ListBox.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.LabelX",
        "file_name": "Access.ListBox.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.LabelY",
        "file_name": "Access.ListBox.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.Layout",
        "file_name": "Access.ListBox.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified list box. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.ListBox.LayoutID",
        "file_name": "Access.ListBox.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified list box. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.Left",
        "file_name": "Access.ListBox.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.LeftPadding",
        "file_name": "Access.ListBox.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the list box and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.ListCount",
        "file_name": "Access.ListBox.ListCount.md",
        "kind": "property",
        "main": "Use the **ListCount** property to determine the number of rows in a list box. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ListCount",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.ListIndex",
        "file_name": "Access.ListBox.ListIndex.md",
        "kind": "property",
        "main": "Use the **ListIndex** property to determine which item is selected in a list box. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ListIndex",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.ListItemsEditForm",
        "file_name": "Access.ListBox.ListItemsEditForm.md",
        "kind": "property",
        "main": "Gets or sets the name of the form that is displayed when the user chooses **Edit List Items**. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.Locked",
        "file_name": "Access.ListBox.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.LostFocus",
        "file_name": "Access.ListBox.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.ListBox",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.ListBox.md",
        "kind": "object",
        "main": "This object corresponds to a list box control. The list box control displays a list of values or alternatives.\n",
        "Methods": [
            "AddItem",
            "Move",
            "RemoveItem",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "AddColon",
            "AfterUpdate",
            "AllowValueListEdits",
            "Application",
            "AutoLabel",
            "BackColor",
            "BackShade",
            "BackThemeColorIndex",
            "BackTint",
            "BeforeUpdate",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "BoundColumn",
            "Column",
            "ColumnCount",
            "ColumnHeads",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "ColumnWidths",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DefaultValue",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "FontWeight",
            "ForeColor",
            "ForeShade",
            "ForeThemeColorIndex",
            "ForeTint",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HideDuplicates",
            "HorizontalAnchor",
            "Hyperlink",
            "IMEHold",
            "IMEMode",
            "IMESentenceMode",
            "InheritValueList",
            "InSelection",
            "IsVisible",
            "ItemData",
            "ItemsSelected",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "ListCount",
            "ListIndex",
            "ListItemsEditForm",
            "Locked",
            "MultiSelect",
            "Name",
            "NumeralShapes",
            "OldBorderStyle",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "Parent",
            "Properties",
            "ReadingOrder",
            "Recordset",
            "RightPadding",
            "RowSource",
            "RowSourceType",
            "ScrollBarAlign",
            "Section",
            "Selected",
            "ShortcutMenuBar",
            "ShowOnlyRowSourceValues",
            "SmartTags",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "ThemeFontIndex",
            "Top",
            "TopPadding",
            "ValidationRule",
            "ValidationText",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.ListBox.MouseDown",
        "file_name": "Access.ListBox.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.ListBox.MouseMove",
        "file_name": "Access.ListBox.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.ListBox.MouseUp",
        "file_name": "Access.ListBox.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.ListBox.Move",
        "file_name": "Access.ListBox.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ListBox.MultiSelect",
        "file_name": "Access.ListBox.MultiSelect.md",
        "kind": "property",
        "main": "Use the **MultiSelect** property to specify whether a user can make multiple selections in a list box on a form and how the multiple selections can be made. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "MultiSelect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.Name",
        "file_name": "Access.ListBox.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.NumeralShapes",
        "file_name": "Access.ListBox.NumeralShapes.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ListBox.OldBorderStyle",
        "file_name": "Access.ListBox.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.OldValue",
        "file_name": "Access.ListBox.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ListBox.OnClick",
        "file_name": "Access.ListBox.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnDblClick",
        "file_name": "Access.ListBox.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnEnter",
        "file_name": "Access.ListBox.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnExit",
        "file_name": "Access.ListBox.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnGotFocus",
        "file_name": "Access.ListBox.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnKeyDown",
        "file_name": "Access.ListBox.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnKeyPress",
        "file_name": "Access.ListBox.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnKeyUp",
        "file_name": "Access.ListBox.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnLostFocus",
        "file_name": "Access.ListBox.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnMouseDown",
        "file_name": "Access.ListBox.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnMouseMove",
        "file_name": "Access.ListBox.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.OnMouseUp",
        "file_name": "Access.ListBox.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.Parent",
        "file_name": "Access.ListBox.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ListBox.Properties",
        "file_name": "Access.ListBox.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.ListBox.ReadingOrder",
        "file_name": "Access.ListBox.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.Recordset",
        "file_name": "Access.ListBox.Recordset.md",
        "kind": "property",
        "main": "Returns or sets the ADO **Recordset** or DAO **Recordset** object that represents the record source for the specified object. Read/write **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Recordset",
            "Object"
        ]
    },
    {
        "api_name": "Access.ListBox.RemoveItem",
        "file_name": "Access.ListBox.RemoveItem.md",
        "kind": "method",
        "main": "Removes an item from the list of values displayed by the specified list box control.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ListBox.Requery",
        "file_name": "Access.ListBox.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.ListBox.RightPadding",
        "file_name": "Access.ListBox.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the list box and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.RowSource",
        "file_name": "Access.ListBox.RowSource.md",
        "kind": "property",
        "main": "Use the **RowSource** property (along with the **RowSourceType** property) to tell Microsoft Access how to provide data to the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "RowSource",
            "RowSourceType",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.RowSourceType",
        "file_name": "Access.ListBox.RowSourceType.md",
        "kind": "property",
        "main": "Use the **RowSourceType** property (along with the **RowSource** property) to tell Microsoft Access how to provide data to the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "RowSourceType",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.ScrollBarAlign",
        "file_name": "Access.ListBox.ScrollBarAlign.md",
        "kind": "property",
        "main": "Use the **ScrollBarAlign** property to specify or determine the alignment of a vertical scroll bar. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ScrollBarAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.Section",
        "file_name": "Access.ListBox.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.Selected",
        "file_name": "Access.ListBox.Selected.md",
        "kind": "property",
        "main": "Use the **Selected** property in Visual Basic to determine if an item in a list box is selected. Read/write **Long**.\n",
        "Parameters": [
            "lRow"
        ],
        "Return_value": [
            "Selected",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.SetFocus",
        "file_name": "Access.ListBox.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.ListBox.ShortcutMenuBar",
        "file_name": "Access.ListBox.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.ShowOnlyRowSourceValues",
        "file_name": "Access.ListBox.ShowOnlyRowSourceValues.md",
        "kind": "property",
        "main": "Gets or sets whether the list box can display values that aren't specified by the **RowSource** property. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "RowSource",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.SizeToFit",
        "file_name": "Access.ListBox.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.ListBox.SmartTags",
        "file_name": "Access.ListBox.SmartTags.md",
        "kind": "property",
        "main": "Returns a **[SmartTags](Access.SmartTags.md)** collection that represents the collection of smart tags that have been added to a control. \n",
        "Parameters": [],
        "Return_value": [
            "Access.SmartTags.md"
        ]
    },
    {
        "api_name": "Access.ListBox.SpecialEffect",
        "file_name": "Access.ListBox.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ListBox.StatusBarText",
        "file_name": "Access.ListBox.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.TabIndex",
        "file_name": "Access.ListBox.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.TabStop",
        "file_name": "Access.ListBox.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.Tag",
        "file_name": "Access.ListBox.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.ThemeFontIndex",
        "file_name": "Access.ListBox.ThemeFontIndex.md",
        "kind": "property",
        "main": "Gets or sets the font index that represents a font in the applied theme associated with the **FontName** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Long"
        ]
    },
    {
        "api_name": "Access.ListBox.Top",
        "file_name": "Access.ListBox.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.TopPadding",
        "file_name": "Access.ListBox.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the list box and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ListBox.Undo",
        "file_name": "Access.ListBox.Undo.md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.ListBox.ValidationRule",
        "file_name": "Access.ListBox.ValidationRule.md",
        "kind": "property",
        "main": "Use the **ValidationRule** property to specify requirements for data entered into a record, field, or control. When data is entered that violates the **ValidationRule** setting, you can use the **ValidationText** property to specify the message to be displayed to the user. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationRule",
            "ValidationText",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.ValidationText",
        "file_name": "Access.ListBox.ValidationText.md",
        "kind": "property",
        "main": "Use the **ValidationText** property to specify a message to be displayed to the user when data is entered that violates a **ValidationRule** setting for a record, field, or control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationText",
            "ValidationRule",
            "String"
        ]
    },
    {
        "api_name": "Access.ListBox.Value",
        "file_name": "Access.ListBox.Value.md",
        "kind": "property",
        "main": "Determines or specifies which value or option in the list box is selected. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.ListBox.VerticalAnchor",
        "file_name": "Access.ListBox.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified list box is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.ListBox.Visible",
        "file_name": "Access.ListBox.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ListBox.Width",
        "file_name": "Access.ListBox.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ActionName",
        "file_name": "Access.MacroError.ActionName.md",
        "kind": "property",
        "main": "Gets the name of the macro action that was executing when an error occurred. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.MacroError.Arguments",
        "file_name": "Access.MacroError.Arguments.md",
        "kind": "property",
        "main": "Gets the arguments specified for the macro action that was executing when an error occurred. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.MacroError.Condition",
        "file_name": "Access.MacroError.Condition.md",
        "kind": "property",
        "main": "Gets the condition of the macro action that was executing when an error occurred. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.MacroError.Description",
        "file_name": "Access.MacroError.Description.md",
        "kind": "property",
        "main": "Gets the text that represents the current error message. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.MacroError.MacroName",
        "file_name": "Access.MacroError.MacroName.md",
        "kind": "property",
        "main": "Gets the name of the macro that was running when an error occurred. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.MacroError",
        "Events": [],
        "file_name": "Access.MacroError.md",
        "kind": "object",
        "main": "Represents the properties of a run-time error that occurs in a macro.\n",
        "Methods": [],
        "Properties": [
            "ActionName",
            "Arguments",
            "Condition",
            "Description",
            "MacroName",
            "Number"
        ]
    },
    {
        "api_name": "Access.MacroError.Number",
        "file_name": "Access.MacroError.Number.md",
        "kind": "property",
        "main": "Gets the current error number. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Module.AddFromFile",
        "file_name": "Access.Module.AddFromFile.md",
        "kind": "method",
        "main": "The **AddFromFile** method adds the contents of a text file to a **Module** object. The **Module** object may represent a standard module or a class module.\n",
        "Parameters": [
            "FileName"
        ],
        "Return_value": [
            "AddFromFile",
            "Module"
        ]
    },
    {
        "api_name": "Access.Module.AddFromString",
        "file_name": "Access.Module.AddFromString.md",
        "kind": "method",
        "main": "The **AddFromString** method adds a string to a **Module** object. The **Module** object may represent a standard module or a class module.\n",
        "Parameters": [
            "String"
        ],
        "Return_value": [
            "AddFromString",
            "Module"
        ]
    },
    {
        "api_name": "Access.Module.Application",
        "file_name": "Access.Module.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Module.CountOfDeclarationLines",
        "file_name": "Access.Module.CountOfDeclarationLines.md",
        "kind": "property",
        "main": "The **CountOfDeclarationLines** property returns a **Long** value indicating the number of lines of code in the Declarations section in a standard module or class module. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "CountOfDeclarationLines",
            "Long"
        ]
    },
    {
        "api_name": "Access.Module.CountOfLines",
        "file_name": "Access.Module.CountOfLines.md",
        "kind": "property",
        "main": "The **CountOfLines** property returns a **Long** value indicating the number of lines of code in a standard module or class module. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "CountOfLines",
            "Long"
        ]
    },
    {
        "api_name": "Access.Module.CreateEventProc",
        "file_name": "Access.Module.CreateEventProc.md",
        "kind": "method",
        "main": "The **CreateEventProc** method creates an event procedure in a class module.\n",
        "Parameters": [
            "EventName",
            "ObjectName"
        ],
        "Return_value": [
            "CreateEventProc"
        ]
    },
    {
        "api_name": "Access.Module.DeleteLines",
        "file_name": "Access.Module.DeleteLines.md",
        "kind": "method",
        "main": "The **DeleteLines** method deletes lines from a standard module or a class module.\n",
        "Parameters": [
            "StartLine",
            "Count"
        ],
        "Return_value": [
            "DeleteLines"
        ]
    },
    {
        "api_name": "Access.Module.Find",
        "file_name": "Access.Module.Find.md",
        "kind": "method",
        "main": "Finds specified text in a standard module or class module.\n",
        "Parameters": [
            "Target",
            "StartLine",
            "StartColumn",
            "EndLine",
            "EndColumn",
            "WholeWord",
            "MatchCase",
            "PatternSearch"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Module.InsertLines",
        "file_name": "Access.Module.InsertLines.md",
        "kind": "method",
        "main": "The **InsertLines** method inserts a line or group of lines of code in a standard module or a class module.\n",
        "Parameters": [
            "Line",
            "String"
        ],
        "Return_value": [
            "InsertLines"
        ]
    },
    {
        "api_name": "Access.Module.InsertText",
        "file_name": "Access.Module.InsertText.md",
        "kind": "method",
        "main": "The **InsertText** method inserts a specified string of text into a standard module or a class module.\n",
        "Parameters": [
            "Text"
        ],
        "Return_value": [
            "InsertText"
        ]
    },
    {
        "api_name": "Access.Module.Lines",
        "file_name": "Access.Module.Lines.md",
        "kind": "property",
        "main": "The **Lines** property returns a string containing the contents of a specified line or lines in a standard module or a class module. Read-only **String**.\n",
        "Parameters": [
            "Line",
            "NumLines"
        ],
        "Return_value": [
            "Lines",
            "String"
        ]
    },
    {
        "api_name": "Access.Module",
        "Events": [],
        "file_name": "Access.Module.md",
        "kind": "object",
        "main": "A **Module** object refers to a standard module or a class module.\n",
        "Methods": [
            "AddFromFile",
            "AddFromString",
            "CreateEventProc",
            "DeleteLines",
            "Find",
            "InsertLines",
            "InsertText",
            "ReplaceLine"
        ],
        "Properties": [
            "Application",
            "CountOfDeclarationLines",
            "CountOfLines",
            "Lines",
            "Name",
            "Parent",
            "ProcBodyLine",
            "ProcCountLines",
            "ProcOfLine",
            "ProcStartLine",
            "Type"
        ]
    },
    {
        "api_name": "Access.Module.Name",
        "file_name": "Access.Module.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Module.Parent",
        "file_name": "Access.Module.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Module.ProcBodyLine",
        "file_name": "Access.Module.ProcBodyLine.md",
        "kind": "property",
        "main": "The **ProcBodyLine** property returns the number of the line at which the body of a specified procedure begins in a standard module or a class module. Read-only **Long**.\n",
        "Parameters": [
            "ProcName",
            "ProcKind"
        ],
        "Return_value": [
            "ProcBodyLine",
            "Long"
        ]
    },
    {
        "api_name": "Access.Module.ProcCountLines",
        "file_name": "Access.Module.ProcCountLines.md",
        "kind": "property",
        "main": "The **ProcCountLines** property returns the number of lines in a specified procedure in a standard module or a class module. Read-only **Long**.\n",
        "Parameters": [
            "ProcName",
            "ProcKind"
        ],
        "Return_value": [
            "ProcCountLines",
            "Long"
        ]
    },
    {
        "api_name": "Access.Module.ProcOfLine",
        "file_name": "Access.Module.ProcOfLine.md",
        "kind": "property",
        "main": "The **ProcOfLine** property returns the name of the procedure that contains a specified line in a standard module or a class module. Read-only string.\n",
        "Parameters": [
            "Line",
            "ProcKind"
        ],
        "Return_value": [
            "ProcOfLine"
        ]
    },
    {
        "api_name": "Access.Module.ProcStartLine",
        "file_name": "Access.Module.ProcStartLine.md",
        "kind": "property",
        "main": "The **ProcStartLine** property returns a value identifying the line at which a specified procedure begins in a standard module or a class module. Read-only **Long**.\n",
        "Parameters": [
            "ProcName",
            "ProcKind"
        ],
        "Return_value": [
            "ProcStartLine",
            "Long"
        ]
    },
    {
        "api_name": "Access.Module.ReplaceLine",
        "file_name": "Access.Module.ReplaceLine.md",
        "kind": "method",
        "main": "The **ReplaceLine** method replaces a specified line in a standard module or a class module.\n",
        "Parameters": [
            "Line",
            "String"
        ],
        "Return_value": [
            "ReplaceLine"
        ]
    },
    {
        "api_name": "Access.Module.Type",
        "file_name": "Access.Module.Type.md",
        "kind": "property",
        "main": "Indicates whether a module is a standard module or a class module. Read-only **[AcModuleType](Access.AcModuleType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcModuleType.md"
        ]
    },
    {
        "api_name": "Access.Modules.Application",
        "file_name": "Access.Modules.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Modules.Count",
        "file_name": "Access.Modules.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.Modules.Item",
        "file_name": "Access.Modules.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Module**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Module"
        ]
    },
    {
        "api_name": "Access.Modules",
        "Events": [],
        "file_name": "Access.Modules.md",
        "kind": "object",
        "main": "The **Modules** collection contains all open standard modules and class modules in a Microsoft Access database.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Modules.Parent",
        "file_name": "Access.Modules.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.NavigationButton.AddColon",
        "file_name": "Access.NavigationButton.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Alignment",
        "file_name": "Access.NavigationButton.Alignment.md",
        "kind": "property",
        "main": "Gets or sets how the specified button's caption and picture are aligned. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Application",
        "file_name": "Access.NavigationButton.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.NavigationButton.AutoLabel",
        "file_name": "Access.NavigationButton.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.AutoRepeat",
        "file_name": "Access.NavigationButton.AutoRepeat.md",
        "kind": "property",
        "main": "Use the **AutoRepeat** property to specify whether an event procedure or macro runs repeatedly while a command button on a form remains pressed in. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AutoRepeat",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BackColor",
        "file_name": "Access.NavigationButton.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BackShade",
        "file_name": "Access.NavigationButton.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BackStyle",
        "file_name": "Access.NavigationButton.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BackThemeColorIndex",
        "file_name": "Access.NavigationButton.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BackTint",
        "file_name": "Access.NavigationButton.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Bevel",
        "file_name": "Access.NavigationButton.Bevel.md",
        "kind": "property",
        "main": "Gets or sets the bevel effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BorderColor",
        "file_name": "Access.NavigationButton.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BorderShade",
        "file_name": "Access.NavigationButton.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BorderStyle",
        "file_name": "Access.NavigationButton.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BorderThemeColorIndex",
        "file_name": "Access.NavigationButton.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BorderTint",
        "file_name": "Access.NavigationButton.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BorderWidth",
        "file_name": "Access.NavigationButton.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.BottomPadding",
        "file_name": "Access.NavigationButton.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the button and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Caption",
        "file_name": "Access.NavigationButton.Caption.md",
        "kind": "property",
        "main": "Gets or sets the text that appears in the control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Click",
        "file_name": "Access.NavigationButton.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Controls",
        "file_name": "Access.NavigationButton.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ControlTipText",
        "file_name": "Access.NavigationButton.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ControlType",
        "file_name": "Access.NavigationButton.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.CursorOnHover",
        "file_name": "Access.NavigationButton.CursorOnHover.md",
        "kind": "property",
        "main": "Gets or sets the type of mouse cursor displayed when the user rests the pointer on a button. Read/write **[AcCursorOnHover](Access.AcCursorOnHover.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcCursorOnHover.md"
        ]
    },
    {
        "api_name": "Access.NavigationButton.DblClick",
        "file_name": "Access.NavigationButton.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.NavigationButton.DisplayWhen",
        "file_name": "Access.NavigationButton.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Enabled",
        "file_name": "Access.NavigationButton.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Enter",
        "file_name": "Access.NavigationButton.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.NavigationButton.EventProcPrefix",
        "file_name": "Access.NavigationButton.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Exit",
        "file_name": "Access.NavigationButton.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.NavigationButton.FontBold",
        "file_name": "Access.NavigationButton.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.FontItalic",
        "file_name": "Access.NavigationButton.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.FontName",
        "file_name": "Access.NavigationButton.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.FontSize",
        "file_name": "Access.NavigationButton.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.FontUnderline",
        "file_name": "Access.NavigationButton.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.FontWeight",
        "file_name": "Access.NavigationButton.FontWeight.md",
        "kind": "property",
        "main": "Use the **FontWeight** property to specify the line width that Windows uses to display and print characters in a control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ForeColor",
        "file_name": "Access.NavigationButton.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ForeShade",
        "file_name": "Access.NavigationButton.ForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ForeThemeColorIndex",
        "file_name": "Access.NavigationButton.ForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **ForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ForeTint",
        "file_name": "Access.NavigationButton.ForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Glow",
        "file_name": "Access.NavigationButton.Glow.md",
        "kind": "property",
        "main": "Gets or sets the glow effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GotFocus",
        "file_name": "Access.NavigationButton.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Gradient",
        "file_name": "Access.NavigationButton.Gradient.md",
        "kind": "property",
        "main": "Gets or sets the gradient fill applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineColor",
        "file_name": "Access.NavigationButton.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified button. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineShade",
        "file_name": "Access.NavigationButton.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.NavigationButton.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.NavigationButton.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineStyleBottom",
        "file_name": "Access.NavigationButton.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineStyleLeft",
        "file_name": "Access.NavigationButton.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineStyleRight",
        "file_name": "Access.NavigationButton.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineStyleTop",
        "file_name": "Access.NavigationButton.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineThemeColorIndex",
        "file_name": "Access.NavigationButton.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.NavigationButton.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.NavigationButton.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineTint",
        "file_name": "Access.NavigationButton.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.NavigationButton.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.NavigationButton.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineWidthBottom",
        "file_name": "Access.NavigationButton.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineWidthLeft",
        "file_name": "Access.NavigationButton.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineWidthRight",
        "file_name": "Access.NavigationButton.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.GridlineWidthTop",
        "file_name": "Access.NavigationButton.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Height",
        "file_name": "Access.NavigationButton.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HelpContextId",
        "file_name": "Access.NavigationButton.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HorizontalAnchor",
        "file_name": "Access.NavigationButton.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the button is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HoverColor",
        "file_name": "Access.NavigationButton.HoverColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on the control when the user rests the mouse cursor over it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HoverForeColor",
        "file_name": "Access.NavigationButton.HoverForeColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the text displayed on the control when the user rests the mouse cursor over it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HoverForeShade",
        "file_name": "Access.NavigationButton.HoverForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **HoverForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HoverForeThemeColorIndex",
        "file_name": "Access.NavigationButton.HoverForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **HoverForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HoverForeTint",
        "file_name": "Access.NavigationButton.HoverForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **HoverForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HoverShade",
        "file_name": "Access.NavigationButton.HoverShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **HoverColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HoverThemeColorIndex",
        "file_name": "Access.NavigationButton.HoverThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **HoverColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HoverTint",
        "file_name": "Access.NavigationButton.HoverTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **HoverColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Hyperlink",
        "file_name": "Access.NavigationButton.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HyperlinkAddress",
        "file_name": "Access.NavigationButton.HyperlinkAddress.md",
        "kind": "property",
        "main": "Use the **HyperlinkAddress** property to specify or determine the path to an object, document, webpage, or other destination for a hyperlink associated with the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "HyperlinkAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.HyperlinkSubAddress",
        "file_name": "Access.NavigationButton.HyperlinkSubAddress.md",
        "kind": "property",
        "main": "Use the **HyperlinkSubAddress** property to specify or determine a location within the target document specified by the **HyperlinkAddress** property. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "HyperlinkSubAddress",
            "HyperlinkAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.InSelection",
        "file_name": "Access.NavigationButton.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.IsVisible",
        "file_name": "Access.NavigationButton.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.KeyDown",
        "file_name": "Access.NavigationButton.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.NavigationButton.KeyPress",
        "file_name": "Access.NavigationButton.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.NavigationButton.KeyUp",
        "file_name": "Access.NavigationButton.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.NavigationButton.LabelAlign",
        "file_name": "Access.NavigationButton.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.LabelX",
        "file_name": "Access.NavigationButton.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.LabelY",
        "file_name": "Access.NavigationButton.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Layout",
        "file_name": "Access.NavigationButton.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified button. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.NavigationButton.LayoutID",
        "file_name": "Access.NavigationButton.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified button. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Left",
        "file_name": "Access.NavigationButton.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.LeftPadding",
        "file_name": "Access.NavigationButton.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the button and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.LostFocus",
        "file_name": "Access.NavigationButton.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.NavigationButton",
        "Events": [
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.NavigationButton.md",
        "kind": "object",
        "main": "This object represents a navigation button in a navigation control on a form.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "AddColon",
            "Alignment",
            "Application",
            "AutoLabel",
            "AutoRepeat",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "Bevel",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Caption",
            "Controls",
            "ControlTipText",
            "ControlType",
            "CursorOnHover",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "FontWeight",
            "ForeColor",
            "ForeShade",
            "ForeThemeColorIndex",
            "ForeTint",
            "Glow",
            "Gradient",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "HoverColor",
            "HoverForeColor",
            "HoverForeShade",
            "HoverForeThemeColorIndex",
            "HoverForeTint",
            "HoverShade",
            "HoverThemeColorIndex",
            "HoverTint",
            "Hyperlink",
            "HyperlinkAddress",
            "HyperlinkSubAddress",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Name",
            "NavigationTargetName",
            "NavigationWhereClause",
            "ObjectPalette",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnPush",
            "Parent",
            "ParentTab",
            "Picture",
            "PictureCaptionArrangement",
            "PictureData",
            "PictureType",
            "PressedColor",
            "PressedForeColor",
            "PressedForeShade",
            "PressedForeThemeColorIndex",
            "PressedForeTint",
            "PressedShade",
            "PressedThemeColorIndex",
            "PressedTint",
            "Properties",
            "QuickStyle",
            "QuickStyleMask",
            "ReadingOrder",
            "RightPadding",
            "Section",
            "Shadow",
            "Shape",
            "ShortcutMenuBar",
            "SoftEdges",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "ThemeFontIndex",
            "Top",
            "TopPadding",
            "Transparent",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.NavigationButton.MouseDown",
        "file_name": "Access.NavigationButton.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.NavigationButton.MouseMove",
        "file_name": "Access.NavigationButton.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.NavigationButton.MouseUp",
        "file_name": "Access.NavigationButton.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Move",
        "file_name": "Access.NavigationButton.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.NavigationButton.Name",
        "file_name": "Access.NavigationButton.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.NavigationTargetName",
        "file_name": "Access.NavigationButton.NavigationTargetName.md",
        "kind": "property",
        "main": "Gets or sets the name of the form or report to be displayed when the user chooses the specified navigation button. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.NavigationWhereClause",
        "file_name": "Access.NavigationButton.NavigationWhereClause.md",
        "kind": "property",
        "main": "Gets or sets the filter criteria applied when opening the form or report associated with the specified navigation button. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ObjectPalette",
        "file_name": "Access.NavigationButton.ObjectPalette.md",
        "kind": "property",
        "main": "The **ObjectPalette** property specifies the palette in the application used to create a bitmap or other graphic that is loaded into the specified control by using the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectPalette",
            "Picture",
            "Variant"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OldValue",
        "file_name": "Access.NavigationButton.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnClick",
        "file_name": "Access.NavigationButton.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnDblClick",
        "file_name": "Access.NavigationButton.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnEnter",
        "file_name": "Access.NavigationButton.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnExit",
        "file_name": "Access.NavigationButton.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnGotFocus",
        "file_name": "Access.NavigationButton.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnKeyDown",
        "file_name": "Access.NavigationButton.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnKeyPress",
        "file_name": "Access.NavigationButton.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnKeyUp",
        "file_name": "Access.NavigationButton.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnLostFocus",
        "file_name": "Access.NavigationButton.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnMouseDown",
        "file_name": "Access.NavigationButton.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnMouseMove",
        "file_name": "Access.NavigationButton.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnMouseUp",
        "file_name": "Access.NavigationButton.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.OnPush",
        "file_name": "Access.NavigationButton.OnPush.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window of a command button. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Parent",
        "file_name": "Access.NavigationButton.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.NavigationButton.ParentTab",
        "file_name": "Access.NavigationButton.ParentTab.md",
        "kind": "property",
        "main": "Gets the top-level navigation button associated with the specified navigation button. Read-only **NavigationButton**.\n",
        "Parameters": [],
        "Return_value": [
            "NavigationButton"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Picture",
        "file_name": "Access.NavigationButton.Picture.md",
        "kind": "property",
        "main": "Use the **Picture** property to specify a bitmap or other type of graphic to be displayed on the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Picture",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PictureCaptionArrangement",
        "file_name": "Access.NavigationButton.PictureCaptionArrangement.md",
        "kind": "property",
        "main": "Gets or sets how the specified button's caption is arranged in relation to its picture. Read/write **[AcPictureCaptionArrangement](Access.AcPictureCaptionArrangement.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPictureCaptionArrangement.md"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PictureData",
        "file_name": "Access.NavigationButton.PictureData.md",
        "kind": "property",
        "main": "Use the **PictureData** property to copy the picture to another object that supports the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PictureType",
        "file_name": "Access.NavigationButton.PictureType.md",
        "kind": "property",
        "main": "Use the **PictureType** property to specify whether Microsoft Access stores an object's picture as a linked or an embedded object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PressedColor",
        "file_name": "Access.NavigationButton.PressedColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on the control when the user chooses it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PressedForeColor",
        "file_name": "Access.NavigationButton.PressedForeColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the text displayed on the control when the user chooses it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PressedForeShade",
        "file_name": "Access.NavigationButton.PressedForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **PressedForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PressedForeThemeColorIndex",
        "file_name": "Access.NavigationButton.PressedForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **PressedForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PressedForeTint",
        "file_name": "Access.NavigationButton.PressedForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **PressedForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PressedShade",
        "file_name": "Access.NavigationButton.PressedShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **PressedColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PressedThemeColorIndex",
        "file_name": "Access.NavigationButton.PressedThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **PressedColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.PressedTint",
        "file_name": "Access.NavigationButton.PressedTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **PressedColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Properties",
        "file_name": "Access.NavigationButton.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.NavigationButton.QuickStyle",
        "file_name": "Access.NavigationButton.QuickStyle.md",
        "kind": "property",
        "main": "Gets or sets the quick style that is applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ReadingOrder",
        "file_name": "Access.NavigationButton.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Requery",
        "file_name": "Access.NavigationButton.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.NavigationButton.RightPadding",
        "file_name": "Access.NavigationButton.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the button and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Section",
        "file_name": "Access.NavigationButton.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.SetFocus",
        "file_name": "Access.NavigationButton.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Shadow",
        "file_name": "Access.NavigationButton.Shadow.md",
        "kind": "property",
        "main": "Gets or sets the shadow effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Shape",
        "file_name": "Access.NavigationButton.Shape.md",
        "kind": "property",
        "main": "Returns or sets the shape of the specified navigation button. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ShortcutMenuBar",
        "file_name": "Access.NavigationButton.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.SizeToFit",
        "file_name": "Access.NavigationButton.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.NavigationButton.SoftEdges",
        "file_name": "Access.NavigationButton.SoftEdges.md",
        "kind": "property",
        "main": "Gets or sets the soft edges effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.StatusBarText",
        "file_name": "Access.NavigationButton.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.TabIndex",
        "file_name": "Access.NavigationButton.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.TabStop",
        "file_name": "Access.NavigationButton.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Tag",
        "file_name": "Access.NavigationButton.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationButton.ThemeFontIndex",
        "file_name": "Access.NavigationButton.ThemeFontIndex.md",
        "kind": "property",
        "main": "Gets or sets the font index that represents a font in the applied theme associated with the **FontName** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Top",
        "file_name": "Access.NavigationButton.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.TopPadding",
        "file_name": "Access.NavigationButton.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the button and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Transparent",
        "file_name": "Access.NavigationButton.Transparent.md",
        "kind": "property",
        "main": "Use the **Transparent** property to specify whether a command button is solid or transparent. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Transparent",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.VerticalAnchor",
        "file_name": "Access.NavigationButton.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified button is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Visible",
        "file_name": "Access.NavigationButton.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationButton.Width",
        "file_name": "Access.NavigationButton.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.AfterUpdate",
        "file_name": "Access.NavigationControl.AfterUpdate.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Application",
        "file_name": "Access.NavigationControl.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.AutoTab",
        "file_name": "Access.NavigationControl.AutoTab.md",
        "kind": "property",
        "main": "Use the **AutoTab** property to specify whether an automatic tab occurs when the last character permitted by a text box control's input mask is entered. An automatic tab moves the focus to the next control in the form's tab order. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AutoTab",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BackColor",
        "file_name": "Access.NavigationControl.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BackShade",
        "file_name": "Access.NavigationControl.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BackStyle",
        "file_name": "Access.NavigationControl.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BackThemeColorIndex",
        "file_name": "Access.NavigationControl.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BackTint",
        "file_name": "Access.NavigationControl.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BeforeUpdate",
        "file_name": "Access.NavigationControl.BeforeUpdate.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BorderColor",
        "file_name": "Access.NavigationControl.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BorderShade",
        "file_name": "Access.NavigationControl.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BorderStyle",
        "file_name": "Access.NavigationControl.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BorderThemeColorIndex",
        "file_name": "Access.NavigationControl.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BorderTint",
        "file_name": "Access.NavigationControl.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BorderWidth",
        "file_name": "Access.NavigationControl.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.BottomPadding",
        "file_name": "Access.NavigationControl.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Change",
        "file_name": "Access.NavigationControl.Change.md",
        "kind": "event",
        "main": "The **Change** event occurs when the contents of the specified control change.\n",
        "Parameters": [],
        "Return_value": [
            "Change"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Click",
        "file_name": "Access.NavigationControl.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Controls",
        "file_name": "Access.NavigationControl.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.NavigationControl.ControlTipText",
        "file_name": "Access.NavigationControl.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.ControlType",
        "file_name": "Access.NavigationControl.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.DblClick",
        "file_name": "Access.NavigationControl.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Dirty",
        "file_name": "Access.NavigationControl.Dirty.md",
        "kind": "event",
        "main": "The **Dirty** event occurs when the contents of the specified control changes.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Dirty"
        ]
    },
    {
        "api_name": "Access.NavigationControl.DisplayWhen",
        "file_name": "Access.NavigationControl.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Enabled",
        "file_name": "Access.NavigationControl.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Enter",
        "file_name": "Access.NavigationControl.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.NavigationControl.EventProcPrefix",
        "file_name": "Access.NavigationControl.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Exit",
        "file_name": "Access.NavigationControl.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.NavigationControl.FilterLookup",
        "file_name": "Access.NavigationControl.FilterLookup.md",
        "kind": "property",
        "main": "Use the **FilterLookup** property to specify whether values appear in a bound text box control when using the Filter By Form or Server Filter By Form window. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "FilterLookup",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.FormatConditions",
        "file_name": "Access.NavigationControl.FormatConditions.md",
        "kind": "property",
        "main": "Use the **FormatConditions** property to return a read-only reference to the **[FormatConditions](Access.FormatConditions.md)** collection and its related properties.\n",
        "Parameters": [],
        "Return_value": [
            "FormatConditions",
            "Access.FormatConditions.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GotFocus",
        "file_name": "Access.NavigationControl.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineColor",
        "file_name": "Access.NavigationControl.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineShade",
        "file_name": "Access.NavigationControl.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.NavigationControl.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.NavigationControl.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineStyleBottom",
        "file_name": "Access.NavigationControl.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineStyleLeft",
        "file_name": "Access.NavigationControl.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineStyleRight",
        "file_name": "Access.NavigationControl.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineStyleTop",
        "file_name": "Access.NavigationControl.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineThemeColorIndex",
        "file_name": "Access.NavigationControl.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.NavigationControl.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.NavigationControl.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineTint",
        "file_name": "Access.NavigationControl.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.NavigationControl.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.NavigationControl.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineWidthBottom",
        "file_name": "Access.NavigationControl.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineWidthLeft",
        "file_name": "Access.NavigationControl.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineWidthRight",
        "file_name": "Access.NavigationControl.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.GridlineWidthTop",
        "file_name": "Access.NavigationControl.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Height",
        "file_name": "Access.NavigationControl.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.HelpContextId",
        "file_name": "Access.NavigationControl.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationControl.HorizontalAnchor",
        "file_name": "Access.NavigationControl.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the control is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Hyperlink",
        "file_name": "Access.NavigationControl.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.InSelection",
        "file_name": "Access.NavigationControl.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationControl.IsVisible",
        "file_name": "Access.NavigationControl.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationControl.KeyboardLanguage",
        "file_name": "Access.NavigationControl.KeyboardLanguage.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.NavigationControl.KeyDown",
        "file_name": "Access.NavigationControl.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.NavigationControl.KeyPress",
        "file_name": "Access.NavigationControl.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.NavigationControl.KeyUp",
        "file_name": "Access.NavigationControl.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Layout",
        "file_name": "Access.NavigationControl.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified control. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.LayoutID",
        "file_name": "Access.NavigationControl.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified control. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Left",
        "file_name": "Access.NavigationControl.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.LeftPadding",
        "file_name": "Access.NavigationControl.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.LineSpacing",
        "file_name": "Access.NavigationControl.LineSpacing.md",
        "kind": "property",
        "main": "Use the **LineSpacing** property to specify or determine the location of information displayed within a label or text box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LineSpacing",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.LostFocus",
        "file_name": "Access.NavigationControl.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.NavigationControl",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Change",
            "Click",
            "DblClick",
            "Dirty",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "Undo"
        ],
        "file_name": "Access.NavigationControl.md",
        "kind": "object",
        "main": "This object represents a navigation control on a form.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "Application",
            "AutoTab",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Controls",
            "ControlTipText",
            "ControlType",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FilterLookup",
            "FormatConditions",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "Hyperlink",
            "InSelection",
            "IsVisible",
            "KeyboardLanguage",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "LineSpacing",
            "Name",
            "NumeralShapes",
            "OldBorderStyle",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "Parent",
            "Properties",
            "ReadingOrder",
            "RightPadding",
            "ScrollBarAlign",
            "Section",
            "SelectedTab",
            "ShortcutMenuBar",
            "SmartTags",
            "Span",
            "SpecialEffect",
            "StatusBarText",
            "SubForm",
            "TabIndex",
            "Tabs",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.NavigationControl.MouseDown",
        "file_name": "Access.NavigationControl.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.NavigationControl.MouseMove",
        "file_name": "Access.NavigationControl.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.NavigationControl.MouseUp",
        "file_name": "Access.NavigationControl.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Move",
        "file_name": "Access.NavigationControl.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.NavigationControl.Name",
        "file_name": "Access.NavigationControl.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.NumeralShapes",
        "file_name": "Access.NavigationControl.NumeralShapes.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.NavigationControl.OldBorderStyle",
        "file_name": "Access.NavigationControl.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OldValue",
        "file_name": "Access.NavigationControl.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnClick",
        "file_name": "Access.NavigationControl.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnDblClick",
        "file_name": "Access.NavigationControl.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnGotFocus",
        "file_name": "Access.NavigationControl.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnKeyDown",
        "file_name": "Access.NavigationControl.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnKeyPress",
        "file_name": "Access.NavigationControl.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnKeyUp",
        "file_name": "Access.NavigationControl.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnLostFocus",
        "file_name": "Access.NavigationControl.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnMouseDown",
        "file_name": "Access.NavigationControl.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnMouseMove",
        "file_name": "Access.NavigationControl.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.OnMouseUp",
        "file_name": "Access.NavigationControl.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Parent",
        "file_name": "Access.NavigationControl.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.NavigationControl.Properties",
        "file_name": "Access.NavigationControl.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.ReadingOrder",
        "file_name": "Access.NavigationControl.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Requery",
        "file_name": "Access.NavigationControl.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.NavigationControl.RightPadding",
        "file_name": "Access.NavigationControl.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.ScrollBarAlign",
        "file_name": "Access.NavigationControl.ScrollBarAlign.md",
        "kind": "property",
        "main": "Use the **ScrollBarAlign** property to specify or determine the alignment of a vertical scroll bar. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ScrollBarAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Section",
        "file_name": "Access.NavigationControl.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.SelectedTab",
        "file_name": "Access.NavigationControl.SelectedTab.md",
        "kind": "property",
        "main": "Gets the active tab of the navigation control. Read-only **[NavigationButton](Access.NavigationButton.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.NavigationButton.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.SetFocus",
        "file_name": "Access.NavigationControl.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.NavigationControl.ShortcutMenuBar",
        "file_name": "Access.NavigationControl.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.SizeToFit",
        "file_name": "Access.NavigationControl.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.NavigationControl.SmartTags",
        "file_name": "Access.NavigationControl.SmartTags.md",
        "kind": "property",
        "main": "Returns a **[SmartTags](Access.SmartTags.md)** collection that represents the collection of smart tags that have been added to a control. \n",
        "Parameters": [],
        "Return_value": [
            "Access.SmartTags.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Span",
        "file_name": "Access.NavigationControl.Span.md",
        "kind": "property",
        "main": "Gets or sets the orientation of the navigation buttons. Read/write **[AcNavigationSpan](Access.AcNavigationSpan.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcNavigationSpan.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.SpecialEffect",
        "file_name": "Access.NavigationControl.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.NavigationControl.StatusBarText",
        "file_name": "Access.NavigationControl.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.SubForm",
        "file_name": "Access.NavigationControl.SubForm.md",
        "kind": "property",
        "main": "Gets or sets the name of the **[SubForm](Access.SubForm.md)** object used to display forms. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.SubForm.md",
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.TabIndex",
        "file_name": "Access.NavigationControl.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Tabs",
        "file_name": "Access.NavigationControl.Tabs.md",
        "kind": "property",
        "main": "Gets the collection of navigation buttons for the specified navigation control. Read-only **Children**.\n",
        "Parameters": [],
        "Return_value": [
            "Children"
        ]
    },
    {
        "api_name": "Access.NavigationControl.TabStop",
        "file_name": "Access.NavigationControl.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Tag",
        "file_name": "Access.NavigationControl.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Top",
        "file_name": "Access.NavigationControl.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.TopPadding",
        "file_name": "Access.NavigationControl.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Undo",
        "file_name": "Access.NavigationControl.Undo(event).md",
        "kind": "event",
        "main": "Occurs when the user undoes a change.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.NavigationControl.Undo",
        "file_name": "Access.NavigationControl.Undo(method).md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Value",
        "file_name": "Access.NavigationControl.Value.md",
        "kind": "property",
        "main": "Determines or specifies the text in the text box. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.NavigationControl.VerticalAnchor",
        "file_name": "Access.NavigationControl.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified control is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Visible",
        "file_name": "Access.NavigationControl.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.NavigationControl.Width",
        "file_name": "Access.NavigationControl.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Action",
        "file_name": "Access.ObjectFrame.Action.md",
        "kind": "property",
        "main": "Use the **Action** property in Visual Basic to specify the operation to perform on an OLE object. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Action",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Application",
        "file_name": "Access.ObjectFrame.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.AutoActivate",
        "file_name": "Access.ObjectFrame.AutoActivate.md",
        "kind": "property",
        "main": "Use the **AutoActivate** property to specify how the user can activate an OLE object. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "AutoActivate",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BackColor",
        "file_name": "Access.ObjectFrame.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BackShade",
        "file_name": "Access.ObjectFrame.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BackStyle",
        "file_name": "Access.ObjectFrame.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BackThemeColorIndex",
        "file_name": "Access.ObjectFrame.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BackTint",
        "file_name": "Access.ObjectFrame.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BorderColor",
        "file_name": "Access.ObjectFrame.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BorderShade",
        "file_name": "Access.ObjectFrame.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BorderStyle",
        "file_name": "Access.ObjectFrame.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BorderThemeColorIndex",
        "file_name": "Access.ObjectFrame.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BorderTint",
        "file_name": "Access.ObjectFrame.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BorderWidth",
        "file_name": "Access.ObjectFrame.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.BottomPadding",
        "file_name": "Access.ObjectFrame.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the object frame and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Class",
        "file_name": "Access.ObjectFrame.Class.md",
        "kind": "property",
        "main": "Use the **Class** property to specify or determine the class name of an embedded OLE object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Class",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Click",
        "file_name": "Access.ObjectFrame.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.ColumnCount",
        "file_name": "Access.ObjectFrame.ColumnCount.md",
        "kind": "property",
        "main": "Use the **ColumnCount** property to specify the number of columns displayed in a list box or in the list box portion of a combo box, or sent to OLE objects in a chart control or unbound object frame. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnCount",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.ColumnHeads",
        "file_name": "Access.ObjectFrame.ColumnHeads.md",
        "kind": "property",
        "main": "Use the **ColumnHeads** property to display a single row of column headings for list boxes, combo boxes, and OLE objects that accept column headings. You can also use this property to create a label for each entry in a chart control. What is actually displayed as the first-row column heading depends on the object's **RowSourceType** property setting. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHeads",
            "RowSourceType",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Controls",
        "file_name": "Access.ObjectFrame.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.ControlTipText",
        "file_name": "Access.ObjectFrame.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.ControlType",
        "file_name": "Access.ObjectFrame.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.DblClick",
        "file_name": "Access.ObjectFrame.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.DisplayType",
        "file_name": "Access.ObjectFrame.DisplayType.md",
        "kind": "property",
        "main": "Use the **DisplayType** property to specify whether Microsoft Access displays an OLE object's content or an icon. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayType",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.DisplayWhen",
        "file_name": "Access.ObjectFrame.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Enabled",
        "file_name": "Access.ObjectFrame.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Enter",
        "file_name": "Access.ObjectFrame.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.EventProcPrefix",
        "file_name": "Access.ObjectFrame.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Exit",
        "file_name": "Access.ObjectFrame.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GotFocus",
        "file_name": "Access.ObjectFrame.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineColor",
        "file_name": "Access.ObjectFrame.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified object frame. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineShade",
        "file_name": "Access.ObjectFrame.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.objectframe.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.objectframe.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineStyleBottom",
        "file_name": "Access.ObjectFrame.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified object frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineStyleLeft",
        "file_name": "Access.ObjectFrame.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified object frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineStyleRight",
        "file_name": "Access.ObjectFrame.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified object frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineStyleTop",
        "file_name": "Access.ObjectFrame.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified object frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineThemeColorIndex",
        "file_name": "Access.ObjectFrame.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.objectframe.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.objectframe.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineTint",
        "file_name": "Access.ObjectFrame.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.objectframe.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.objectframe.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineWidthBottom",
        "file_name": "Access.ObjectFrame.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified object frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineWidthLeft",
        "file_name": "Access.ObjectFrame.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified object frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineWidthRight",
        "file_name": "Access.ObjectFrame.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified object frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.GridlineWidthTop",
        "file_name": "Access.ObjectFrame.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified object frame. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Height",
        "file_name": "Access.ObjectFrame.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.HelpContextId",
        "file_name": "Access.ObjectFrame.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.HorizontalAnchor",
        "file_name": "Access.ObjectFrame.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the object frame is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.InSelection",
        "file_name": "Access.ObjectFrame.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.IsVisible",
        "file_name": "Access.ObjectFrame.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Item",
        "file_name": "Access.ObjectFrame.Item.md",
        "kind": "property",
        "main": "The **Item** property returns or sets a specific member of a collection. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Item",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Layout",
        "file_name": "Access.ObjectFrame.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified object frame. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.LayoutID",
        "file_name": "Access.ObjectFrame.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified object frame. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Left",
        "file_name": "Access.ObjectFrame.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.LeftPadding",
        "file_name": "Access.ObjectFrame.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the object frame and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.LinkChildFields",
        "file_name": "Access.ObjectFrame.LinkChildFields.md",
        "kind": "property",
        "main": "Use the **LinkChildFields** property (along with the **LinkMasterFields** property) to specify how Microsoft Access links records in a form or report to records in a subform, subreport, or embedded object, such as a chart. If these properties are set, Access automatically updates the related record in the subform when you change to a new record in a main form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "LinkChildFields",
            "LinkMasterFields",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.LinkMasterFields",
        "file_name": "Access.ObjectFrame.LinkMasterFields.md",
        "kind": "property",
        "main": "Use the **LinkMasterFields** property (along with the **LinkChildFields** property) to specify how Microsoft Access links records in a form or report to records in a subform, subreport, or embedded object, such as a chart. If these properties are set, Access automatically updates the related record in the subform when you change to a new record in a main form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "LinkMasterFields",
            "LinkChildFields",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Locked",
        "file_name": "Access.ObjectFrame.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.LostFocus",
        "file_name": "Access.ObjectFrame.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.ObjectFrame",
        "Events": [
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "GotFocus",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "Updated"
        ],
        "file_name": "Access.ObjectFrame.md",
        "kind": "object",
        "main": "This object corresponds to an unbound object frame. The unbound object frame control displays a picture, chart, or any OLE object not stored in a table.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "Action",
            "Application",
            "AutoActivate",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Class",
            "ColumnCount",
            "ColumnHeads",
            "Controls",
            "ControlTipText",
            "ControlType",
            "DisplayType",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "Item",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "LinkChildFields",
            "LinkMasterFields",
            "Locked",
            "Name",
            "Object",
            "ObjectPalette",
            "ObjectVerbs",
            "ObjectVerbsCount",
            "OldBorderStyle",
            "OldValue",
            "OLEClass",
            "OLEType",
            "OLETypeAllowed",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnUpdated",
            "Parent",
            "Properties",
            "RightPadding",
            "RowSource",
            "RowSourceType",
            "Scaling",
            "Section",
            "ShortcutMenuBar",
            "SizeMode",
            "SourceDoc",
            "SourceItem",
            "SourceObject",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "UpdateMethod",
            "UpdateOptions",
            "VarOleObject",
            "Verb",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.MouseDown",
        "file_name": "Access.ObjectFrame.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.MouseMove",
        "file_name": "Access.ObjectFrame.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.MouseUp",
        "file_name": "Access.ObjectFrame.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Move",
        "file_name": "Access.ObjectFrame.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ObjectFrame.Name",
        "file_name": "Access.ObjectFrame.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Object",
        "file_name": "Access.ObjectFrame.Object.md",
        "kind": "property",
        "main": "Use the **Object** property in Visual Basic to return a reference to the ActiveX object that is associated with a linked or embedded OLE object in a control. By using this reference, you can access the properties or invoke the methods of the OLE object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.ObjectPalette",
        "file_name": "Access.ObjectFrame.ObjectPalette.md",
        "kind": "property",
        "main": "The **ObjectPalette** property specifies the palette in the application used to create an OLE object. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectPalette",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.ObjectVerbs",
        "file_name": "Access.ObjectFrame.ObjectVerbs.md",
        "kind": "property",
        "main": "Use the **ObjectVerbs** property in Visual Basic to determine the list of verbs that an OLE object supports. Read-only **String**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "ObjectVerbs",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.ObjectVerbsCount",
        "file_name": "Access.ObjectFrame.ObjectVerbsCount.md",
        "kind": "property",
        "main": "Use the **ObjectVerbsCount** property in Visual Basic to determine the number of verbs supported by an OLE object. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectVerbsCount",
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OldBorderStyle",
        "file_name": "Access.ObjectFrame.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OldValue",
        "file_name": "Access.ObjectFrame.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OLEClass",
        "file_name": "Access.ObjectFrame.OLEClass.md",
        "kind": "property",
        "main": "Use the **OLEClass** property to obtain a description of the kind of OLE object contained in a chart control or an unbound object frame. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "OLEClass",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OLEType",
        "file_name": "Access.ObjectFrame.OLEType.md",
        "kind": "property",
        "main": "Use the **OLEType** property to determine if a control contains an OLE object, and if so, whether the object is linked or embedded. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "OLEType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OLETypeAllowed",
        "file_name": "Access.ObjectFrame.OLETypeAllowed.md",
        "kind": "property",
        "main": "Use the **OLETypeAllowed** property to specify the type of OLE object that a control can contain. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "OLETypeAllowed",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnClick",
        "file_name": "Access.ObjectFrame.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnDblClick",
        "file_name": "Access.ObjectFrame.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnEnter",
        "file_name": "Access.ObjectFrame.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnExit",
        "file_name": "Access.ObjectFrame.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnGotFocus",
        "file_name": "Access.ObjectFrame.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnLostFocus",
        "file_name": "Access.ObjectFrame.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnMouseDown",
        "file_name": "Access.ObjectFrame.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnMouseMove",
        "file_name": "Access.ObjectFrame.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnMouseUp",
        "file_name": "Access.ObjectFrame.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.OnUpdated",
        "file_name": "Access.ObjectFrame.OnUpdated.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Updated** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Parent",
        "file_name": "Access.ObjectFrame.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ObjectFrame.Properties",
        "file_name": "Access.ObjectFrame.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Requery",
        "file_name": "Access.ObjectFrame.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.RightPadding",
        "file_name": "Access.ObjectFrame.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the object frame and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.RowSource",
        "file_name": "Access.ObjectFrame.RowSource.md",
        "kind": "property",
        "main": "Use the **RowSource** property (along with the **RowSourceType** property) to tell Microsoft Access how to provide data to the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "RowSource",
            "RowSourceType",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.RowSourceType",
        "file_name": "Access.ObjectFrame.RowSourceType.md",
        "kind": "property",
        "main": "Use the **RowSourceType** property (along with the **RowSource** property) to tell Microsoft Access how to provide data to the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "RowSourceType",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Scaling",
        "file_name": "Access.ObjectFrame.Scaling.md",
        "kind": "property",
        "main": "Controls how the contents of an object frame control are displayed. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Section",
        "file_name": "Access.ObjectFrame.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.SetFocus",
        "file_name": "Access.ObjectFrame.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.ShortcutMenuBar",
        "file_name": "Access.ObjectFrame.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.SizeMode",
        "file_name": "Access.ObjectFrame.SizeMode.md",
        "kind": "property",
        "main": "Use the **SizeMode** property to specify how to size a picture or other object in a bound object frame, an unbound object frame, or an image control.\n",
        "Parameters": [],
        "Return_value": [
            "SizeMode"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.SizeToFit",
        "file_name": "Access.ObjectFrame.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.SourceDoc",
        "file_name": "Access.ObjectFrame.SourceDoc.md",
        "kind": "property",
        "main": "Use the **SourceDoc** property to specify the file to create a link to or to embed when you create a linked object or embedded object by using the **Action** property in Visual Basic. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "SourceDoc",
            "Action",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.SourceItem",
        "file_name": "Access.ObjectFrame.SourceItem.md",
        "kind": "property",
        "main": "Use the **SourceItem** property to specify the data within a file to be linked when you create a linked OLE object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "SourceItem",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.SourceObject",
        "file_name": "Access.ObjectFrame.SourceObject.md",
        "kind": "property",
        "main": "Use this property for linked unbound object frames to determine the complete path and file name of the file that contains the data linked to the object frame. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.SpecialEffect",
        "file_name": "Access.ObjectFrame.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.StatusBarText",
        "file_name": "Access.ObjectFrame.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.TabIndex",
        "file_name": "Access.ObjectFrame.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.TabStop",
        "file_name": "Access.ObjectFrame.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Tag",
        "file_name": "Access.ObjectFrame.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Top",
        "file_name": "Access.ObjectFrame.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.TopPadding",
        "file_name": "Access.ObjectFrame.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the object frame and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Updated",
        "file_name": "Access.ObjectFrame.Updated.md",
        "kind": "event",
        "main": "The **Updated** event occurs when an OLE object's data has been modified.\n",
        "Parameters": [
            "Code"
        ],
        "Return_value": [
            "Updated"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.UpdateMethod",
        "file_name": "Access.ObjectFrame.UpdateMethod.md",
        "kind": "property",
        "main": "> [!NOTE] \n> This property has been deprecated. Use the **[UpdateOptions](Access.ObjectFrame.UpdateOptions.md)** property to specify how a linked OLE object is updated.\n",
        "Parameters": [],
        "Return_value": [
            "Access.ObjectFrame.UpdateOptions.md"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.UpdateOptions",
        "file_name": "Access.ObjectFrame.UpdateOptions.md",
        "kind": "property",
        "main": "Use the **UpdateOptions** property to specify how a linked OLE object is updated. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "UpdateOptions",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.VarOleObject",
        "file_name": "Access.ObjectFrame.VarOleObject.md",
        "kind": "property",
        "main": "Gets a pointer to an **IOLEObject** that represents the memory address of an OLE object. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "IOLEObject",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Verb",
        "file_name": "Access.ObjectFrame.Verb.md",
        "kind": "property",
        "main": "Use the **Verb** property to specify the operation to perform when an OLE object is activated, which is permitted when the control's **Action** property is set to **acOLEActivate**. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Verb",
            "Action",
            "acOLEActivate",
            "Long"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.VerticalAnchor",
        "file_name": "Access.ObjectFrame.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified object frame is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Visible",
        "file_name": "Access.ObjectFrame.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ObjectFrame.Width",
        "file_name": "Access.ObjectFrame.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Operation.Execute",
        "file_name": "Access.Operation.Execute.md",
        "kind": "method",
        "main": "Executes the specified operation.\n",
        "Parameters": [
            "bstrParameters"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Operation",
        "Events": [],
        "file_name": "Access.Operation.md",
        "kind": "object",
        "main": "Represents an operation defined for an **[Entity](Access.Entity.md)** object.\n",
        "Methods": [
            "Execute"
        ],
        "Properties": [
            "Name",
            "Parent",
            "WSParameters"
        ]
    },
    {
        "api_name": "Access.Operation.Name",
        "file_name": "Access.Operation.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Operation.Parent",
        "file_name": "Access.Operation.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Operation.WSParameters",
        "file_name": "Access.Operation.WSParameters.md",
        "kind": "property",
        "main": "Gets the collection of parameters defined for the specified operation. Read-only **[WSParameters](Access.WSParameters.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.WSParameters.md"
        ]
    },
    {
        "api_name": "Access.Operations.Count",
        "file_name": "Access.Operations.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.Operations.Item",
        "file_name": "Access.Operations.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Object**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Object"
        ]
    },
    {
        "api_name": "Access.Operations",
        "Events": [],
        "file_name": "Access.Operations.md",
        "kind": "object",
        "main": "Represents the collection of operations defined for an **[Entity](Access.Entity.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Operations.Parent",
        "file_name": "Access.Operations.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.OptionButton.AddColon",
        "file_name": "Access.OptionButton.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.AfterUpdate",
        "file_name": "Access.OptionButton.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.OptionButton.AfterUpdate",
        "file_name": "Access.OptionButton.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.optionbutton.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.Application",
        "file_name": "Access.OptionButton.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.OptionButton.AutoLabel",
        "file_name": "Access.OptionButton.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.BeforeUpdate",
        "file_name": "Access.OptionButton.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.OptionButton.BeforeUpdate",
        "file_name": "Access.OptionButton.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.OptionButton.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.BorderColor",
        "file_name": "Access.OptionButton.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionButton.BorderShade",
        "file_name": "Access.OptionButton.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.OptionButton.BorderStyle",
        "file_name": "Access.OptionButton.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.BorderThemeColorIndex",
        "file_name": "Access.OptionButton.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionButton.BorderTint",
        "file_name": "Access.OptionButton.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.OptionButton.BorderWidth",
        "file_name": "Access.OptionButton.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.BottomPadding",
        "file_name": "Access.OptionButton.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the option button and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.Click",
        "file_name": "Access.OptionButton.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.OptionButton.ColumnHidden",
        "file_name": "Access.OptionButton.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.ColumnOrder",
        "file_name": "Access.OptionButton.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.ColumnWidth",
        "file_name": "Access.OptionButton.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.Controls",
        "file_name": "Access.OptionButton.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.OptionButton.ControlSource",
        "file_name": "Access.OptionButton.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.ControlTipText",
        "file_name": "Access.OptionButton.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.ControlType",
        "file_name": "Access.OptionButton.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.DblClick",
        "file_name": "Access.OptionButton.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.OptionButton.DefaultValue",
        "file_name": "Access.OptionButton.DefaultValue.md",
        "kind": "property",
        "main": "Specifies a value that is automatically entered in a field when a new record is created. For example, in an **Addresses** table, you can set the default value for the **City** field to New York. When users add a record to the table, they can either accept this value or enter the name of a different city. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Addresses",
            "City",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.DisplayWhen",
        "file_name": "Access.OptionButton.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.Enabled",
        "file_name": "Access.OptionButton.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.Enter",
        "file_name": "Access.OptionButton.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.OptionButton.EventProcPrefix",
        "file_name": "Access.OptionButton.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.Exit",
        "file_name": "Access.OptionButton.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.OptionButton.GotFocus",
        "file_name": "Access.OptionButton.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineColor",
        "file_name": "Access.OptionButton.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified option button. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineShade",
        "file_name": "Access.OptionButton.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.OptionButton.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.OptionButton.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineStyleBottom",
        "file_name": "Access.OptionButton.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified option button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineStyleLeft",
        "file_name": "Access.OptionButton.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified option button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineStyleRight",
        "file_name": "Access.OptionButton.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified option button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineStyleTop",
        "file_name": "Access.OptionButton.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified option button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineThemeColorIndex",
        "file_name": "Access.OptionButton.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.OptionButton.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.OptionButton.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineTint",
        "file_name": "Access.OptionButton.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.OptionButton.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.OptionButton.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineWidthBottom",
        "file_name": "Access.OptionButton.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified option button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineWidthLeft",
        "file_name": "Access.OptionButton.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified option button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineWidthRight",
        "file_name": "Access.OptionButton.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified option button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.GridlineWidthTop",
        "file_name": "Access.OptionButton.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified option button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.Height",
        "file_name": "Access.OptionButton.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.HelpContextId",
        "file_name": "Access.OptionButton.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionButton.HideDuplicates",
        "file_name": "Access.OptionButton.HideDuplicates.md",
        "kind": "property",
        "main": "Use the **HideDuplicates** property to hide a control on a report when its value is the same as in the preceding record. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HideDuplicates",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.HorizontalAnchor",
        "file_name": "Access.OptionButton.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the option button is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.OptionButton.InSelection",
        "file_name": "Access.OptionButton.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.IsVisible",
        "file_name": "Access.OptionButton.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.KeyDown",
        "file_name": "Access.OptionButton.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.OptionButton.KeyPress",
        "file_name": "Access.OptionButton.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.OptionButton.KeyUp",
        "file_name": "Access.OptionButton.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.OptionButton.LabelAlign",
        "file_name": "Access.OptionButton.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.LabelX",
        "file_name": "Access.OptionButton.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.LabelY",
        "file_name": "Access.OptionButton.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.Layout",
        "file_name": "Access.OptionButton.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified option button. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.OptionButton.LayoutID",
        "file_name": "Access.OptionButton.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified option button. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionButton.Left",
        "file_name": "Access.OptionButton.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.LeftPadding",
        "file_name": "Access.OptionButton.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the option button and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.Locked",
        "file_name": "Access.OptionButton.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.LostFocus",
        "file_name": "Access.OptionButton.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.OptionButton",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.OptionButton.md",
        "kind": "object",
        "main": "An option button on a form or report is a stand-alone control used to display a Yes/No value from an underlying record source.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "AddColon",
            "AfterUpdate",
            "Application",
            "AutoLabel",
            "BeforeUpdate",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DefaultValue",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HideDuplicates",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Locked",
            "Name",
            "OldBorderStyle",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OptionValue",
            "Parent",
            "Properties",
            "ReadingOrder",
            "RightPadding",
            "Section",
            "ShortcutMenuBar",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "TripleState",
            "ValidationRule",
            "ValidationText",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.OptionButton.MouseDown",
        "file_name": "Access.OptionButton.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.OptionButton.MouseMove",
        "file_name": "Access.OptionButton.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.OptionButton.MouseUp",
        "file_name": "Access.OptionButton.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.OptionButton.Move",
        "file_name": "Access.OptionButton.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.OptionButton.Name",
        "file_name": "Access.OptionButton.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OldBorderStyle",
        "file_name": "Access.OptionButton.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.OldValue",
        "file_name": "Access.OptionButton.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnClick",
        "file_name": "Access.OptionButton.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnDblClick",
        "file_name": "Access.OptionButton.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnEnter",
        "file_name": "Access.OptionButton.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnExit",
        "file_name": "Access.OptionButton.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnGotFocus",
        "file_name": "Access.OptionButton.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnKeyDown",
        "file_name": "Access.OptionButton.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnKeyPress",
        "file_name": "Access.OptionButton.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnKeyUp",
        "file_name": "Access.OptionButton.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnLostFocus",
        "file_name": "Access.OptionButton.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnMouseDown",
        "file_name": "Access.OptionButton.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnMouseMove",
        "file_name": "Access.OptionButton.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OnMouseUp",
        "file_name": "Access.OptionButton.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.OptionValue",
        "file_name": "Access.OptionButton.OptionValue.md",
        "kind": "property",
        "main": "Each control in an option group has a numeric value that you can set with the **OptionValue** property. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "OptionValue",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionButton.Parent",
        "file_name": "Access.OptionButton.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.OptionButton.Properties",
        "file_name": "Access.OptionButton.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.OptionButton.ReadingOrder",
        "file_name": "Access.OptionButton.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.Requery",
        "file_name": "Access.OptionButton.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.OptionButton.RightPadding",
        "file_name": "Access.OptionButton.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the option button and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.Section",
        "file_name": "Access.OptionButton.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.SetFocus",
        "file_name": "Access.OptionButton.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.OptionButton.ShortcutMenuBar",
        "file_name": "Access.OptionButton.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.SizeToFit",
        "file_name": "Access.OptionButton.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.OptionButton.SpecialEffect",
        "file_name": "Access.OptionButton.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionButton.StatusBarText",
        "file_name": "Access.OptionButton.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.TabIndex",
        "file_name": "Access.OptionButton.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.TabStop",
        "file_name": "Access.OptionButton.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.Tag",
        "file_name": "Access.OptionButton.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.Top",
        "file_name": "Access.OptionButton.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.TopPadding",
        "file_name": "Access.OptionButton.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the option button and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionButton.TripleState",
        "file_name": "Access.OptionButton.TripleState.md",
        "kind": "property",
        "main": "Use the **TripleState** property to specify how the specified control displays **Null** values. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TripleState",
            "Null",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.ValidationRule",
        "file_name": "Access.OptionButton.ValidationRule.md",
        "kind": "property",
        "main": "Use the **ValidationRule** property to specify requirements for data entered into a record, field, or control. When data is entered that violates the **ValidationRule** setting, you can use the **ValidationText** property to specify the message to be displayed to the user. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationRule",
            "ValidationText",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.ValidationText",
        "file_name": "Access.OptionButton.ValidationText.md",
        "kind": "property",
        "main": "Use the **ValidationText** property to specify a message to be displayed to the user when data is entered that violates a **ValidationRule** setting for a record, field, or control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationText",
            "ValidationRule",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionButton.Value",
        "file_name": "Access.OptionButton.Value.md",
        "kind": "property",
        "main": "Determines or specifies whether the specified option button is selected. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.OptionButton.VerticalAnchor",
        "file_name": "Access.OptionButton.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified option button is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.OptionButton.Visible",
        "file_name": "Access.OptionButton.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionButton.Width",
        "file_name": "Access.OptionButton.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.AddColon",
        "file_name": "Access.OptionGroup.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.AfterUpdate",
        "file_name": "Access.OptionGroup.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.OptionGroup.AfterUpdate",
        "file_name": "Access.OptionGroup.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.optiongroup.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Application",
        "file_name": "Access.OptionGroup.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.OptionGroup.AutoLabel",
        "file_name": "Access.OptionGroup.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BackColor",
        "file_name": "Access.OptionGroup.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BackShade",
        "file_name": "Access.OptionGroup.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BackStyle",
        "file_name": "Access.OptionGroup.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BackThemeColorIndex",
        "file_name": "Access.OptionGroup.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BackTint",
        "file_name": "Access.OptionGroup.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BeforeUpdate",
        "file_name": "Access.OptionGroup.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BeforeUpdate",
        "file_name": "Access.OptionGroup.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.OptionGroup.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BorderColor",
        "file_name": "Access.OptionGroup.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BorderShade",
        "file_name": "Access.OptionGroup.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BorderStyle",
        "file_name": "Access.OptionGroup.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BorderThemeColorIndex",
        "file_name": "Access.OptionGroup.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BorderTint",
        "file_name": "Access.OptionGroup.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.OptionGroup.BorderWidth",
        "file_name": "Access.OptionGroup.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Click",
        "file_name": "Access.OptionGroup.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ColumnHidden",
        "file_name": "Access.OptionGroup.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ColumnOrder",
        "file_name": "Access.OptionGroup.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ColumnWidth",
        "file_name": "Access.OptionGroup.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Controls",
        "file_name": "Access.OptionGroup.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ControlSource",
        "file_name": "Access.OptionGroup.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ControlTipText",
        "file_name": "Access.OptionGroup.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ControlType",
        "file_name": "Access.OptionGroup.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionGroup.DblClick",
        "file_name": "Access.OptionGroup.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.OptionGroup.DefaultValue",
        "file_name": "Access.OptionGroup.DefaultValue.md",
        "kind": "property",
        "main": "Specifies a value that is automatically entered in a field when a new record is created. For example, in an **Addresses** table, you can set the default value for the **City** field to New York. When users add a record to the table, they can either accept this value or enter the name of a different city. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Addresses",
            "City",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.DisplayWhen",
        "file_name": "Access.OptionGroup.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Enabled",
        "file_name": "Access.OptionGroup.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Enter",
        "file_name": "Access.OptionGroup.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.OptionGroup.EventProcPrefix",
        "file_name": "Access.OptionGroup.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Exit",
        "file_name": "Access.OptionGroup.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Height",
        "file_name": "Access.OptionGroup.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.HelpContextId",
        "file_name": "Access.OptionGroup.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.OptionGroup.HideDuplicates",
        "file_name": "Access.OptionGroup.HideDuplicates.md",
        "kind": "property",
        "main": "Use the **HideDuplicates** property to hide a control on a report when its value is the same as in the preceding record. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HideDuplicates",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.HorizontalAnchor",
        "file_name": "Access.OptionGroup.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the option group is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.OptionGroup.InSelection",
        "file_name": "Access.OptionGroup.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.IsVisible",
        "file_name": "Access.OptionGroup.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.LabelAlign",
        "file_name": "Access.OptionGroup.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionGroup.LabelX",
        "file_name": "Access.OptionGroup.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.LabelY",
        "file_name": "Access.OptionGroup.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Left",
        "file_name": "Access.OptionGroup.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Locked",
        "file_name": "Access.OptionGroup.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.OptionGroup.md",
        "kind": "object",
        "main": "An option group on a form or report displays a limited set of alternatives. An option group makes selecting a value easy because you can choose the value that you want. Only one option in an option group can be selected at a time.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "AddColon",
            "AfterUpdate",
            "Application",
            "AutoLabel",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BeforeUpdate",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DefaultValue",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "Height",
            "HelpContextId",
            "HideDuplicates",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Left",
            "Locked",
            "Name",
            "OldBorderStyle",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "Parent",
            "Properties",
            "Section",
            "ShortcutMenuBar",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "ValidationRule",
            "ValidationText",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.OptionGroup.MouseDown",
        "file_name": "Access.OptionGroup.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.OptionGroup.MouseMove",
        "file_name": "Access.OptionGroup.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.OptionGroup.MouseUp",
        "file_name": "Access.OptionGroup.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Move",
        "file_name": "Access.OptionGroup.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.OptionGroup.Name",
        "file_name": "Access.OptionGroup.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OldBorderStyle",
        "file_name": "Access.OptionGroup.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OldValue",
        "file_name": "Access.OptionGroup.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OnClick",
        "file_name": "Access.OptionGroup.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OnDblClick",
        "file_name": "Access.OptionGroup.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OnEnter",
        "file_name": "Access.OptionGroup.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OnExit",
        "file_name": "Access.OptionGroup.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OnMouseDown",
        "file_name": "Access.OptionGroup.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OnMouseMove",
        "file_name": "Access.OptionGroup.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.OnMouseUp",
        "file_name": "Access.OptionGroup.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Parent",
        "file_name": "Access.OptionGroup.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.OptionGroup.Properties",
        "file_name": "Access.OptionGroup.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Requery",
        "file_name": "Access.OptionGroup.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Section",
        "file_name": "Access.OptionGroup.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.SetFocus",
        "file_name": "Access.OptionGroup.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ShortcutMenuBar",
        "file_name": "Access.OptionGroup.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.SizeToFit",
        "file_name": "Access.OptionGroup.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.OptionGroup.SpecialEffect",
        "file_name": "Access.OptionGroup.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.OptionGroup.StatusBarText",
        "file_name": "Access.OptionGroup.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.TabIndex",
        "file_name": "Access.OptionGroup.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.TabStop",
        "file_name": "Access.OptionGroup.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Tag",
        "file_name": "Access.OptionGroup.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Top",
        "file_name": "Access.OptionGroup.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Undo",
        "file_name": "Access.OptionGroup.Undo.md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ValidationRule",
        "file_name": "Access.OptionGroup.ValidationRule.md",
        "kind": "property",
        "main": "Use the **ValidationRule** property to specify requirements for data entered into a record, field, or control. When data is entered that violates the **ValidationRule** setting, you can use the **ValidationText** property to specify the message to be displayed to the user. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationRule",
            "ValidationText",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.ValidationText",
        "file_name": "Access.OptionGroup.ValidationText.md",
        "kind": "property",
        "main": "Use the **ValidationText** property to specify a message to be displayed to the user when data is entered that violates a **ValidationRule** setting for a record, field, or control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationText",
            "ValidationRule",
            "String"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Value",
        "file_name": "Access.OptionGroup.Value.md",
        "kind": "property",
        "main": "Determines or specifies whether the specified option button is selected. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.OptionGroup.VerticalAnchor",
        "file_name": "Access.OptionGroup.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified option group is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Visible",
        "file_name": "Access.OptionGroup.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.OptionGroup.Width",
        "file_name": "Access.OptionGroup.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Page.Application",
        "file_name": "Access.Page.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Page.Caption",
        "file_name": "Access.Page.Caption.md",
        "kind": "property",
        "main": "Gets or sets the text that appears at the top of the page. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Page.Click",
        "file_name": "Access.Page.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.Page.Controls",
        "file_name": "Access.Page.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.Page.ControlTipText",
        "file_name": "Access.Page.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.Page.ControlType",
        "file_name": "Access.Page.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Page.DblClick",
        "file_name": "Access.Page.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.Page.Enabled",
        "file_name": "Access.Page.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Page.EventProcPrefix",
        "file_name": "Access.Page.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Page.Height",
        "file_name": "Access.Page.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Page.HelpContextId",
        "file_name": "Access.Page.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Page.InSelection",
        "file_name": "Access.Page.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Page.IsVisible",
        "file_name": "Access.Page.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Page.Left",
        "file_name": "Access.Page.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Page",
        "Events": [
            "Click",
            "DblClick",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.Page.md",
        "kind": "object",
        "main": "A **Page** object corresponds to an individual page on a tab control.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SetTabOrder",
            "SizeToFit"
        ],
        "Properties": [
            "Application",
            "Caption",
            "Controls",
            "ControlTipText",
            "ControlType",
            "Enabled",
            "EventProcPrefix",
            "Height",
            "HelpContextId",
            "InSelection",
            "IsVisible",
            "Left",
            "Name",
            "OnClick",
            "OnDblClick",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "PageIndex",
            "Parent",
            "Picture",
            "PictureData",
            "PictureType",
            "Properties",
            "Section",
            "ShortcutMenuBar",
            "StatusBarText",
            "Tag",
            "Top",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.Page.MouseDown",
        "file_name": "Access.Page.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.Page.MouseMove",
        "file_name": "Access.Page.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.Page.MouseUp",
        "file_name": "Access.Page.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.Page.Move",
        "file_name": "Access.Page.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Page.Name",
        "file_name": "Access.Page.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Page.OnClick",
        "file_name": "Access.Page.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Page.OnDblClick",
        "file_name": "Access.Page.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Page.OnMouseDown",
        "file_name": "Access.Page.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Page.OnMouseMove",
        "file_name": "Access.Page.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Page.OnMouseUp",
        "file_name": "Access.Page.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Page.PageIndex",
        "file_name": "Access.Page.PageIndex.md",
        "kind": "property",
        "main": "Use the **PageIndex** property to specify or determine the position of a **Page** object within a **[Pages](Access.Pages.md)** collection. The **PageIndex** property specifies the order in which the pages on a tab control appear. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "PageIndex",
            "Access.Pages.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Page.Parent",
        "file_name": "Access.Page.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Page.Picture",
        "file_name": "Access.Page.Picture.md",
        "kind": "property",
        "main": "Use the **Picture** property to specify a bitmap or other type of graphic to be displayed on the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Picture",
            "String"
        ]
    },
    {
        "api_name": "Access.Page.PictureData",
        "file_name": "Access.Page.PictureData.md",
        "kind": "property",
        "main": "Use the **PictureData** property to copy the picture to another object that supports the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Page.PictureType",
        "file_name": "Access.Page.PictureType.md",
        "kind": "property",
        "main": "Use the **PictureType** property to specify whether Microsoft Access stores an object's picture as a linked or an embedded object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Page.Properties",
        "file_name": "Access.Page.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Page.Requery",
        "file_name": "Access.Page.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.Page.Section",
        "file_name": "Access.Page.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Page.SetFocus",
        "file_name": "Access.Page.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.Page.SetTabOrder",
        "file_name": "Access.Page.SetTabOrder.md",
        "kind": "method",
        "main": "Resets the tab order of the controls in the specified **Page** to their default values.\n",
        "Parameters": [],
        "Return_value": [
            "Page"
        ]
    },
    {
        "api_name": "Access.Page.ShortcutMenuBar",
        "file_name": "Access.Page.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.Page.SizeToFit",
        "file_name": "Access.Page.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.Page.StatusBarText",
        "file_name": "Access.Page.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.Page.Tag",
        "file_name": "Access.Page.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Page.Top",
        "file_name": "Access.Page.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Page.Visible",
        "file_name": "Access.Page.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Page.Width",
        "file_name": "Access.Page.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.PageBreak.Application",
        "file_name": "Access.PageBreak.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.PageBreak.ControlType",
        "file_name": "Access.PageBreak.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.PageBreak.EventProcPrefix",
        "file_name": "Access.PageBreak.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.PageBreak.InSelection",
        "file_name": "Access.PageBreak.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.PageBreak.IsVisible",
        "file_name": "Access.PageBreak.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.PageBreak.Left",
        "file_name": "Access.PageBreak.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.PageBreak",
        "Events": [],
        "file_name": "Access.PageBreak.md",
        "kind": "object",
        "main": "This object corresponds to a page break control. The page break control marks the start of a new screen or printed page on a form or report.\n",
        "Methods": [
            "Move",
            "SizeToFit"
        ],
        "Properties": [
            "Application",
            "ControlType",
            "EventProcPrefix",
            "InSelection",
            "IsVisible",
            "Left",
            "Name",
            "Parent",
            "Properties",
            "Section",
            "Tag",
            "Top",
            "Visible"
        ]
    },
    {
        "api_name": "Access.PageBreak.Move",
        "file_name": "Access.PageBreak.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.PageBreak.Name",
        "file_name": "Access.PageBreak.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.PageBreak.Parent",
        "file_name": "Access.PageBreak.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.PageBreak.Properties",
        "file_name": "Access.PageBreak.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.PageBreak.Section",
        "file_name": "Access.PageBreak.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.PageBreak.SizeToFit",
        "file_name": "Access.PageBreak.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.PageBreak.Tag",
        "file_name": "Access.PageBreak.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.PageBreak.Top",
        "file_name": "Access.PageBreak.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.PageBreak.Visible",
        "file_name": "Access.PageBreak.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Pages.Add",
        "file_name": "Access.Pages.Add.md",
        "kind": "method",
        "main": "The **Add** method adds a new **[Page](Access.Page.md)** object to the **Pages** collection of a tab control.\n",
        "Parameters": [
            "Before"
        ],
        "Return_value": [
            "Add",
            "Access.Page.md",
            "Pages"
        ]
    },
    {
        "api_name": "Access.Pages.Count",
        "file_name": "Access.Pages.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.Pages.Item",
        "file_name": "Access.Pages.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Page**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Page"
        ]
    },
    {
        "api_name": "Access.Pages",
        "Events": [],
        "file_name": "Access.Pages.md",
        "kind": "object",
        "main": "The **Pages** collection contains all **[Page](Access.Page.md)** objects in a tab control.\n",
        "Methods": [
            "Add",
            "Remove"
        ],
        "Properties": [
            "Count",
            "Item"
        ]
    },
    {
        "api_name": "Access.Pages.Remove",
        "file_name": "Access.Pages.Remove.md",
        "kind": "method",
        "main": "The **Remove** method removes a **[Page](Access.Page.md)** object from the **Pages** collection of a tab control.\n",
        "Parameters": [
            "Item"
        ],
        "Return_value": [
            "Remove",
            "Access.Page.md",
            "Pages"
        ]
    },
    {
        "api_name": "Access.Printer.BottomMargin",
        "file_name": "Access.Printer.BottomMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **RightMargin**, and **LeftMargin** properties, specifies the margins for a printed page. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "RightMargin",
            "LeftMargin",
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer.ColorMode",
        "file_name": "Access.Printer.ColorMode.md",
        "kind": "property",
        "main": "Returns or sets an **[AcPrintColor](Access.AcPrintColor.md)** constant representing whether the specified printer should print output in color or monochrome. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPrintColor.md"
        ]
    },
    {
        "api_name": "Access.Printer.ColumnSpacing",
        "file_name": "Access.Printer.ColumnSpacing.md",
        "kind": "property",
        "main": "Returns or sets a **Long** representing the vertical space between detail sections in [twips](../language/glossary/vbe-glossary.md#twip). Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer.Copies",
        "file_name": "Access.Printer.Copies.md",
        "kind": "property",
        "main": "Returns or sets a **Long** indicating the number of copies to be printed. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer.DataOnly",
        "file_name": "Access.Printer.DataOnly.md",
        "kind": "property",
        "main": "**True** if Microsoft Access prints only the data from a table or query in Datasheet view and not the labels, control borders, gridlines, and display graphics. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Printer.DefaultSize",
        "file_name": "Access.Printer.DefaultSize.md",
        "kind": "property",
        "main": "**True** if the size of the detail section in Design view is used for printing; otherwise, the values of the **[ItemSizeHeight](Access.Printer.ItemSizeHeight.md)** and **[ItemSizeWidth](Access.Printer.ItemSizeWidth.md)** properties are used. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Access.Printer.ItemSizeHeight.md",
            "Access.Printer.ItemSizeWidth.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Printer.DeviceName",
        "file_name": "Access.Printer.DeviceName.md",
        "kind": "property",
        "main": "Returns a **String** indicating the name of the specified printer device. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Printer.DriverName",
        "file_name": "Access.Printer.DriverName.md",
        "kind": "property",
        "main": "Returns a **String** indicating the name of the driver used by the specified printer. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Printer.Duplex",
        "file_name": "Access.Printer.Duplex.md",
        "kind": "property",
        "main": "Returns or sets an **[AcPrintDuplex](Access.AcPrintDuplex.md)** constant indicating how the specified printer handles duplex printing. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPrintDuplex.md"
        ]
    },
    {
        "api_name": "Access.Printer.ItemLayout",
        "file_name": "Access.Printer.ItemLayout.md",
        "kind": "property",
        "main": "Returns or sets an **[AcPrintItemLayout](Access.AcPrintItemLayout.md)** constant indicating whether the printer lays columns across, then down, or down, then across. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPrintItemLayout.md"
        ]
    },
    {
        "api_name": "Access.Printer.ItemsAcross",
        "file_name": "Access.Printer.ItemsAcross.md",
        "kind": "property",
        "main": "Returns or sets a **Long** indicating the number of columns to print across a page for multiple-column reports or labels. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer.ItemSizeHeight",
        "file_name": "Access.Printer.ItemSizeHeight.md",
        "kind": "property",
        "main": "Returns or sets a **Long** indicating the height of the detail section of a form or report in [twips](../language/glossary/vbe-glossary.md#twip). Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer.ItemSizeWidth",
        "file_name": "Access.Printer.ItemSizeWidth.md",
        "kind": "property",
        "main": "Returns or sets a **Long** indicating the width of the detail section of a form or report in [twips](../language/glossary/vbe-glossary.md#twip). Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer.LeftMargin",
        "file_name": "Access.Printer.LeftMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **RightMargin**, and **BottomMargin** properties, specifies the margins for a printed page. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "RightMargin",
            "BottomMargin",
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer",
        "Events": [],
        "file_name": "Access.Printer.md",
        "kind": "object",
        "main": "A **Printer** object corresponds to a printer available on your system.\n",
        "Methods": [],
        "Properties": [
            "BottomMargin",
            "ColorMode",
            "ColumnSpacing",
            "Copies",
            "DataOnly",
            "DefaultSize",
            "DeviceName",
            "DriverName",
            "Duplex",
            "ItemLayout",
            "ItemsAcross",
            "ItemSizeHeight",
            "ItemSizeWidth",
            "LeftMargin",
            "Orientation",
            "PaperBin",
            "PaperSize",
            "Port",
            "PrintQuality",
            "RightMargin",
            "RowSpacing",
            "TopMargin"
        ]
    },
    {
        "api_name": "Access.Printer.Orientation",
        "file_name": "Access.Printer.Orientation.md",
        "kind": "property",
        "main": "Gets or sets an **[AcPrintOrientation](Access.AcPrintOrientation.md)** constant that represents the print orientation. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPrintOrientation.md"
        ]
    },
    {
        "api_name": "Access.Printer.PaperBin",
        "file_name": "Access.Printer.PaperBin.md",
        "kind": "property",
        "main": "Returns or sets an **[AcPrintPaperBin](Access.AcPrintPaperBin.md)** constant indicating which paper bin the specified printer should use. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPrintPaperBin.md"
        ]
    },
    {
        "api_name": "Access.Printer.PaperSize",
        "file_name": "Access.Printer.PaperSize.md",
        "kind": "property",
        "main": "Returns or sets an **[AcPrintPaperSize](Access.AcPrintPaperSize.md)** constant indicating the paper size to use when printing. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPrintPaperSize.md"
        ]
    },
    {
        "api_name": "Access.Printer.Port",
        "file_name": "Access.Printer.Port.md",
        "kind": "property",
        "main": "Returns a **String** indicating the port name of the specified printer. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Printer.PrintQuality",
        "file_name": "Access.Printer.PrintQuality.md",
        "kind": "property",
        "main": "Returns or sets an **[AcPrintObjQuality](Access.AcPrintObjQuality.md)** constant indicating the resolution at which the specified printer should print jobs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcPrintObjQuality.md"
        ]
    },
    {
        "api_name": "Access.Printer.RightMargin",
        "file_name": "Access.Printer.RightMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **LeftMargin**, and **BottomMargin** properties, specifies the margins for a printed page. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "LeftMargin",
            "BottomMargin",
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer.RowSpacing",
        "file_name": "Access.Printer.RowSpacing.md",
        "kind": "property",
        "main": "Returns or sets a **Long** indicating the horizontal space between detail sections in [twips](../language/glossary/vbe-glossary.md#twip). Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Printer.TopMargin",
        "file_name": "Access.Printer.TopMargin.md",
        "kind": "property",
        "main": "Along with the **LeftMargin**, **RightMargin**, and **BottomMargin** properties, specifies the margins for a printed page. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "LeftMargin",
            "RightMargin",
            "BottomMargin",
            "Long"
        ]
    },
    {
        "api_name": "Access.Printers.Application",
        "file_name": "Access.Printers.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Printers.Count",
        "file_name": "Access.Printers.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.Printers.Item",
        "file_name": "Access.Printers.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Printer**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Printer"
        ]
    },
    {
        "api_name": "Access.Printers",
        "Events": [],
        "file_name": "Access.Printers.md",
        "kind": "object",
        "main": "The **Printers** collection contains **[Printer](Access.Printer.md)** objects representing all the printers available on the current system.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Printers.Parent",
        "file_name": "Access.Printers.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Properties.Application",
        "file_name": "Access.Properties.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Properties.Count",
        "file_name": "Access.Properties.Count.md",
        "kind": "property",
        "main": "Returns the number of objects in the specified collection. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Properties.Item",
        "file_name": "Access.Properties.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Object**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Object"
        ]
    },
    {
        "api_name": "Access.Properties",
        "Events": [],
        "file_name": "Access.Properties.md",
        "kind": "object",
        "main": "The **Properties** collection contains all the built-in properties in an instance of an open form, report, or control. These properties uniquely characterize that instance of the object.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Properties.Parent",
        "file_name": "Access.Properties.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Rectangle.Application",
        "file_name": "Access.Rectangle.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Rectangle.BackColor",
        "file_name": "Access.Rectangle.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Rectangle.BackShade",
        "file_name": "Access.Rectangle.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Rectangle.BackStyle",
        "file_name": "Access.Rectangle.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Rectangle.BackThemeColorIndex",
        "file_name": "Access.Rectangle.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Rectangle.BackTint",
        "file_name": "Access.Rectangle.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Rectangle.BorderColor",
        "file_name": "Access.Rectangle.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Rectangle.BorderShade",
        "file_name": "Access.Rectangle.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Rectangle.BorderStyle",
        "file_name": "Access.Rectangle.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Rectangle.BorderThemeColorIndex",
        "file_name": "Access.Rectangle.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Rectangle.BorderTint",
        "file_name": "Access.Rectangle.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Rectangle.BorderWidth",
        "file_name": "Access.Rectangle.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Rectangle.Click",
        "file_name": "Access.Rectangle.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.Rectangle.ControlType",
        "file_name": "Access.Rectangle.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Rectangle.DblClick",
        "file_name": "Access.Rectangle.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.Rectangle.DisplayWhen",
        "file_name": "Access.Rectangle.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Rectangle.EventProcPrefix",
        "file_name": "Access.Rectangle.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Rectangle.Height",
        "file_name": "Access.Rectangle.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Rectangle.HorizontalAnchor",
        "file_name": "Access.Rectangle.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the rectangle is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Rectangle.InSelection",
        "file_name": "Access.Rectangle.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Rectangle.IsVisible",
        "file_name": "Access.Rectangle.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Rectangle.Left",
        "file_name": "Access.Rectangle.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Rectangle",
        "Events": [
            "Click",
            "DblClick",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.Rectangle.md",
        "kind": "object",
        "main": "This object corresponds to a rectangle control. The rectangle control displays a rectangle on a form or report.\n",
        "Methods": [
            "Move",
            "SizeToFit"
        ],
        "Properties": [
            "Application",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "ControlType",
            "DisplayWhen",
            "EventProcPrefix",
            "Height",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "Left",
            "Name",
            "OldBorderStyle",
            "OnClick",
            "OnDblClick",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "Parent",
            "Properties",
            "Section",
            "SpecialEffect",
            "Tag",
            "Top",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.Rectangle.MouseDown",
        "file_name": "Access.Rectangle.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.Rectangle.MouseMove",
        "file_name": "Access.Rectangle.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.Rectangle.MouseUp",
        "file_name": "Access.Rectangle.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.Rectangle.Move",
        "file_name": "Access.Rectangle.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Rectangle.Name",
        "file_name": "Access.Rectangle.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Rectangle.OldBorderStyle",
        "file_name": "Access.Rectangle.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Rectangle.OnClick",
        "file_name": "Access.Rectangle.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Rectangle.OnDblClick",
        "file_name": "Access.Rectangle.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Rectangle.OnMouseDown",
        "file_name": "Access.Rectangle.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Rectangle.OnMouseMove",
        "file_name": "Access.Rectangle.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Rectangle.OnMouseUp",
        "file_name": "Access.Rectangle.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Rectangle.Parent",
        "file_name": "Access.Rectangle.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Rectangle.Properties",
        "file_name": "Access.Rectangle.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Rectangle.Section",
        "file_name": "Access.Rectangle.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Rectangle.SizeToFit",
        "file_name": "Access.Rectangle.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.Rectangle.SpecialEffect",
        "file_name": "Access.Rectangle.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Rectangle.Tag",
        "file_name": "Access.Rectangle.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Rectangle.Top",
        "file_name": "Access.Rectangle.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Rectangle.VerticalAnchor",
        "file_name": "Access.Rectangle.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified rectangle is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.Rectangle.Visible",
        "file_name": "Access.Rectangle.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Rectangle.Width",
        "file_name": "Access.Rectangle.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Reference.BuiltIn",
        "file_name": "Access.Reference.BuiltIn.md",
        "kind": "property",
        "main": "The **BuiltIn** property returns a **Boolean** value indicating whether a **Reference** object points to a default reference that's necessary for Microsoft Access to function properly. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "BuiltIn",
            "Boolean",
            "Reference"
        ]
    },
    {
        "api_name": "Access.Reference.Collection",
        "file_name": "Access.Reference.Collection.md",
        "kind": "property",
        "main": "The **Collection** property returns a reference to the collection that contains an object. Read-only **[References](Access.References.md)** object.\n",
        "Parameters": [],
        "Return_value": [
            "Collection",
            "Access.References.md"
        ]
    },
    {
        "api_name": "Access.Reference.FullPath",
        "file_name": "Access.Reference.FullPath.md",
        "kind": "property",
        "main": "The **FullPath** property returns a string containing the path and file name of the referenced type library.\n",
        "Parameters": [],
        "Return_value": [
            "FullPath"
        ]
    },
    {
        "api_name": "Access.Reference.Guid",
        "file_name": "Access.Reference.Guid.md",
        "kind": "property",
        "main": "The **GUID** property of a **Reference** object returns a GUID that identifies a type library in the Windows Registry. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "GUID",
            "Reference",
            "String"
        ]
    },
    {
        "api_name": "Access.Reference.IsBroken",
        "file_name": "Access.Reference.IsBroken.md",
        "kind": "property",
        "main": "The **IsBroken** property returns a **Boolean** value indicating whether a **Reference** object points to a valid reference in the Windows Registry. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsBroken",
            "Boolean",
            "Reference"
        ]
    },
    {
        "api_name": "Access.Reference.Kind",
        "file_name": "Access.Reference.Kind.md",
        "kind": "property",
        "main": "The **Kind** property indicates the type of reference that a **Reference** object represents. Read-only **vbext_RefKind**.\n",
        "Parameters": [],
        "Return_value": [
            "Kind",
            "Reference",
            "vbext_RefKind"
        ]
    },
    {
        "api_name": "Access.Reference.Major",
        "file_name": "Access.Reference.Major.md",
        "kind": "property",
        "main": "The **Major** property of a **Reference** object returns a read-only **Long** value indicating the major version number of an application to which you have set a reference.\n",
        "Parameters": [],
        "Return_value": [
            "Major",
            "Reference",
            "Long"
        ]
    },
    {
        "api_name": "Access.Reference",
        "Events": [],
        "file_name": "Access.Reference.md",
        "kind": "object",
        "main": "The **Reference** object refers to a reference set to another application's or project's type library.\n",
        "Methods": [],
        "Properties": [
            "BuiltIn",
            "Collection",
            "FullPath",
            "Guid",
            "IsBroken",
            "Kind",
            "Major",
            "Minor",
            "Name"
        ]
    },
    {
        "api_name": "Access.Reference.Minor",
        "file_name": "Access.Reference.Minor.md",
        "kind": "property",
        "main": "The **Minor** property of a **Reference** object returns a **Long** value indicating the minor version number of the application to which you have set a reference.\n",
        "Parameters": [],
        "Return_value": [
            "Minor",
            "Reference",
            "Long"
        ]
    },
    {
        "api_name": "Access.Reference.Name",
        "file_name": "Access.Reference.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.References.AddFromFile",
        "file_name": "Access.References.AddFromFile.md",
        "kind": "method",
        "main": "The **AddFromFile** method creates a reference to a type library in a specified file. \n",
        "Parameters": [
            "FileName"
        ],
        "Return_value": [
            "AddFromFile"
        ]
    },
    {
        "api_name": "Access.References.AddFromGuid",
        "file_name": "Access.References.AddFromGuid.md",
        "kind": "method",
        "main": "The **AddFromGUID** method creates a **[Reference](Access.Reference.md)** object based on the GUID that identifies a type library. **Reference** object.\n",
        "Parameters": [
            "Guid",
            "Major",
            "Minor"
        ],
        "Return_value": [
            "AddFromGUID",
            "Access.Reference.md"
        ]
    },
    {
        "api_name": "Access.References.Count",
        "file_name": "Access.References.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.References.Item",
        "file_name": "Access.References.Item.md",
        "kind": "method",
        "main": "The **Item** method returns a specific member of a collection either by position or by key. **Reference** object.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Item",
            "Reference"
        ]
    },
    {
        "api_name": "Access.References.ItemAdded",
        "file_name": "Access.References.ItemAdded.md",
        "kind": "event",
        "main": "The **ItemAdded** event occurs when a reference is added to the project from Visual Basic.\n",
        "Parameters": [
            "Reference"
        ],
        "Return_value": [
            "ItemAdded"
        ]
    },
    {
        "api_name": "Access.References.ItemRemoved",
        "file_name": "Access.References.ItemRemoved.md",
        "kind": "event",
        "main": "The **ItemRemoved** event occurs when a reference is removed from the project.\n",
        "Parameters": [
            "Reference"
        ],
        "Return_value": [
            "ItemRemoved"
        ]
    },
    {
        "api_name": "Access.References",
        "Events": [
            "ItemAdded",
            "ItemRemoved"
        ],
        "file_name": "Access.References.md",
        "kind": "object",
        "main": "The **References** collection contains **[Reference](access.reference.md)** objects representing each reference that's currently set.\n",
        "Methods": [
            "AddFromFile",
            "AddFromGuid",
            "Item",
            "Remove"
        ],
        "Properties": [
            "Count",
            "Parent"
        ]
    },
    {
        "api_name": "Access.References.Parent",
        "file_name": "Access.References.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.References.Remove",
        "file_name": "Access.References.Remove.md",
        "kind": "method",
        "main": "The **Remove** method removes a **[Reference](Access.Reference.md)** object from the **References** collection.\n",
        "Parameters": [
            "Reference"
        ],
        "Return_value": [
            "Remove",
            "Access.Reference.md",
            "References"
        ]
    },
    {
        "api_name": "Access.Report.Activate",
        "file_name": "Access.Report.Activate.md",
        "kind": "event",
        "main": "The **Activate** event occurs when a report receives the focus and becomes the active window.\n",
        "Parameters": [],
        "Return_value": [
            "Activate"
        ]
    },
    {
        "api_name": "Access.Report.ActiveControl",
        "file_name": "Access.Report.ActiveControl.md",
        "kind": "property",
        "main": "Use the **ActiveControl** property together with the **[Screen](Access.Screen.md)** object to identify or refer to the control that has the focus. Read-only **Control** object.\n",
        "Parameters": [],
        "Return_value": [
            "ActiveControl",
            "Access.Screen.md"
        ]
    },
    {
        "api_name": "Access.Report.AllowLayoutView",
        "file_name": "Access.Report.AllowLayoutView.md",
        "kind": "property",
        "main": "Gets or sets whether the specified report can be used in Layout view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.AllowReportView",
        "file_name": "Access.Report.AllowReportView.md",
        "kind": "property",
        "main": "Gets or sets whether the user is allowed to enter Report view while using the specified report. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Application",
        "file_name": "Access.Report.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Report.ApplyFilter",
        "file_name": "Access.Report.ApplyFilter.md",
        "kind": "event",
        "main": "Occurs when a filter is applied to a report.\n",
        "Parameters": [
            "Cancel",
            "ApplyType"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Report.AutoCenter",
        "file_name": "Access.Report.AutoCenter.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether a report will be centered automatically in the application window when the form is opened. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.AutoResize",
        "file_name": "Access.Report.AutoResize.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether a Report window opens automatically sized to display complete records. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.BorderStyle",
        "file_name": "Access.Report.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.Caption",
        "file_name": "Access.Report.Caption.md",
        "kind": "property",
        "main": "Gets or sets the title of the report in Print Preview. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.Circle",
        "file_name": "Access.Report.Circle.md",
        "kind": "method",
        "main": "The **Circle** method draws a circle, an ellipse, or an arc on a **Report** object when the **Print** event occurs.\n",
        "Parameters": [
            "Step",
            "Radius",
            "Color",
            "Start",
            "End",
            "Aspect"
        ],
        "Return_value": [
            "Circle",
            "Report",
            "Print"
        ]
    },
    {
        "api_name": "Access.Report.Click",
        "file_name": "Access.Report.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over a report.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.Report.Close",
        "file_name": "Access.Report.Close.md",
        "kind": "event",
        "main": "The **Close** event occurs when a report is closed and removed from the screen.\n",
        "Parameters": [],
        "Return_value": [
            "Close"
        ]
    },
    {
        "api_name": "Access.Report.CloseButton",
        "file_name": "Access.Report.CloseButton.md",
        "kind": "property",
        "main": "Specifies whether the **Close** button on a form is enabled. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Close",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.ControlBox",
        "file_name": "Access.Report.ControlBox.md",
        "kind": "property",
        "main": "Specifies whether a report has a **Control** menu in Report view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Control",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Controls",
        "file_name": "Access.Report.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.Report.Count",
        "file_name": "Access.Report.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.Current",
        "file_name": "Access.Report.Current.md",
        "kind": "event",
        "main": "Occurs when the focus moves to a record, making it the current record, or when the report is refreshed or requeried.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Report.CurrentRecord",
        "file_name": "Access.Report.CurrentRecord.md",
        "kind": "property",
        "main": "Use the **CurrentRecord** property to identify the current record in the recordset being viewed. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentRecord",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.CurrentView",
        "file_name": "Access.Report.CurrentView.md",
        "kind": "property",
        "main": "Use the **CurrentView** property to determine how a report is currently displayed. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentView",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.CurrentX",
        "file_name": "Access.Report.CurrentX.md",
        "kind": "property",
        "main": "Use the **CurrentX** property (along with the **CurrentY** property) to specify the horizontal and vertical coordinates for the starting position of the next printing and drawing method on a report. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentX",
            "CurrentY",
            "Single"
        ]
    },
    {
        "api_name": "Access.Report.CurrentY",
        "file_name": "Access.Report.CurrentY.md",
        "kind": "property",
        "main": "Use the **CurrentY** property (along with the **CurrentX** property) to specify the horizontal and vertical coordinates for the starting position of the next printing and drawing method on a report. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "CurrentY",
            "CurrentX",
            "Single"
        ]
    },
    {
        "api_name": "Access.Report.Cycle",
        "file_name": "Access.Report.Cycle.md",
        "kind": "property",
        "main": "Use the **Cycle** property to specify what happens when you press the Tab key and the focus is in the last control on a report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Cycle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.DateGrouping",
        "file_name": "Access.Report.DateGrouping.md",
        "kind": "property",
        "main": "Use the **DateGrouping** property to specify how you want to group dates in a report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DateGrouping",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.DblClick",
        "file_name": "Access.Report.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over a report within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.Report.Deactivate",
        "file_name": "Access.Report.Deactivate.md",
        "kind": "event",
        "main": "The **Deactivate** event occurs when a report loses the focus to a Table, Query, Form, Report, Macro, or Module window, or to the Database window.\n",
        "Parameters": [],
        "Return_value": [
            "Deactivate"
        ]
    },
    {
        "api_name": "Access.Report.DefaultControl",
        "file_name": "Access.Report.DefaultControl.md",
        "kind": "property",
        "main": "The **DefaultControl** property returns a **[Control](Access.Control.md)** object with which you can set the default properties for a particular type of control on a particular report. Read-only.\n",
        "Parameters": [
            "ControlType"
        ],
        "Return_value": [
            "DefaultControl",
            "Access.Control.md"
        ]
    },
    {
        "api_name": "Access.Report.DefaultView",
        "file_name": "Access.Report.DefaultView.md",
        "kind": "property",
        "main": "Use the **DefaultView** property to specify the opening view of a report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DefaultView",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.Dirty",
        "file_name": "Access.Report.Dirty.md",
        "kind": "property",
        "main": "Use the **Dirty** property to determine whether the current record has been modified since it was last saved. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Dirty",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.DisplayOnSharePointSite",
        "file_name": "Access.Report.DisplayOnSharePointSite.md",
        "kind": "property",
        "main": "Gets or sets whether the specified report can be made available as a view on a Microsoft SharePoint Foundation site. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.DrawMode",
        "file_name": "Access.Report.DrawMode.md",
        "kind": "property",
        "main": "Use the **DrawMode** property to specify how the pen (the color used in drawing) interacts with existing background colors on a report when the **[Line](Access.Report.Line.md)**, **[Circle](Access.Report.Circle.md)**, or **[Pset](Access.Report.PSet.md)** method is used to draw on a report when printing. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "DrawMode",
            "Access.Report.Line.md",
            "Access.Report.Circle.md",
            "Access.Report.PSet.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.DrawStyle",
        "file_name": "Access.Report.DrawStyle.md",
        "kind": "property",
        "main": "Use the **DrawStyle** property to specify the line style when using the **[Line](Access.Report.Line.md)** and **[Circle](Access.Report.Circle.md)** methods to print lines on reports. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "DrawStyle",
            "Access.Report.Line.md",
            "Access.Report.Circle.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.DrawWidth",
        "file_name": "Access.Report.DrawWidth.md",
        "kind": "property",
        "main": "Use the **DrawWidth** property to specify the line width for the **[Line](Access.Report.Line.md)**, **[Circle](Access.Report.Circle.md)**, and **[Pset](Access.Report.PSet.md)** methods to print lines on reports. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "DrawWidth",
            "Access.Report.Line.md",
            "Access.Report.Circle.md",
            "Access.Report.PSet.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.Error",
        "file_name": "Access.Report.Error.md",
        "kind": "event",
        "main": "The **Error** event occurs when a run-time error is produced in Microsoft Access when a report has the focus.\n",
        "Parameters": [
            "DataErr",
            "Response"
        ],
        "Return_value": [
            "Error"
        ]
    },
    {
        "api_name": "Access.Report.FastLaserPrinting",
        "file_name": "Access.Report.FastLaserPrinting.md",
        "kind": "property",
        "main": "Use the **FastLaserPrinting** property to specify whether lines and rectangles are replaced by text character lines—similar to the underscore ( _ ) and vertical bar ( | ) characters—when you print a report by using most laser printers. Replacing lines and rectangles with text character lines can make printing much faster. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FastLaserPrinting",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.FillColor",
        "file_name": "Access.Report.FillColor.md",
        "kind": "property",
        "main": "You use the **FillColor** property to specify the color that fills in boxes and circles drawn on reports with the **[Line](Access.Report.Line.md)** and **[Circle](Access.Report.Circle.md)** methods. You can also use this property with [Visual Basic](../access/Concepts/Settings/set-properties-by-using-visual-basic.md) to create special visual effects on custom reports when you print by using a color printer or preview the reports on a color monitor. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FillColor",
            "Access.Report.Line.md",
            "Access.Report.Circle.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.FillStyle",
        "file_name": "Access.Report.FillStyle.md",
        "kind": "property",
        "main": "Use the **FillStyle** property to specify whether a circle or line drawn by the **[Circle](Access.Report.Circle.md)** or **[Line](Access.Report.Line.md)** method on a report is transparent, opaque, or filled with a pattern. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FillStyle",
            "Access.Report.Circle.md",
            "Access.Report.Line.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.Filter",
        "file_name": "Access.Report.Filter(even).md",
        "kind": "event",
        "main": "Occurs when the user opens a filter window by choosing **Advanced Filter/Sort**.\n",
        "Parameters": [
            "Cancel",
            "FilterType"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Report.Filter",
        "file_name": "Access.Report.Filter(property).md",
        "kind": "property",
        "main": "Use the **Filter** property to specify a subset of records to be displayed when a filter is applied to a form, report, query, or table. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Filter",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.FilterOn",
        "file_name": "Access.Report.FilterOn.md",
        "kind": "property",
        "main": "Use the **FilterOn** property to specify or determine whether the **Filter** property for a form or report is applied. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FilterOn",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.FilterOnLoad",
        "file_name": "Access.Report.FilterOnLoad.md",
        "kind": "property",
        "main": "Gets or sets whether the filter specified by the **[Filter](Access.Report.Filter(property).md)** property is applied when the report is loaded. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Report.Filter(property).md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.FitToPage",
        "file_name": "Access.Report.FitToPage.md",
        "kind": "property",
        "main": "Gets or sets whether the width of the specified report is sized to automatically fit the page. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.FontBold",
        "file_name": "Access.Report.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.FontItalic",
        "file_name": "Access.Report.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.FontName",
        "file_name": "Access.Report.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.FontSize",
        "file_name": "Access.Report.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.FontUnderline",
        "file_name": "Access.Report.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.ForeColor",
        "file_name": "Access.Report.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.FormatCount",
        "file_name": "Access.Report.FormatCount.md",
        "kind": "property",
        "main": "Use the **FormatCount** property to determine the number of times the **[OnFormat](Access.Section.OnFormat.md)** property has been evaluated for the current section on a report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FormatCount",
            "Access.Section.OnFormat.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.GotFocus",
        "file_name": "Access.Report.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the report receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.Report.GridX",
        "file_name": "Access.Report.GridX.md",
        "kind": "property",
        "main": "Use the **GridX** property (along with the **GridY** property) to specify the horizontal and vertical divisions of the alignment grid in report Design view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "GridX",
            "GridY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.GridY",
        "file_name": "Access.Report.GridY.md",
        "kind": "property",
        "main": "Use the **GridY** property (along with the **GridX** property) to specify the horizontal and vertical divisions of the alignment grid in report Design view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "GridY",
            "GridX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.GroupLevel",
        "file_name": "Access.Report.GroupLevel.md",
        "kind": "property",
        "main": "Use the **GroupLevel** property in Visual Basic to refer to the group level that you are grouping or sorting on in a report. Read-only **GroupLevel** object.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "GroupLevel"
        ]
    },
    {
        "api_name": "Access.Report.GrpKeepTogether",
        "file_name": "Access.Report.GrpKeepTogether.md",
        "kind": "property",
        "main": "Use the **GrpKeepTogether** property to specify whether groups in a multiple column report that have their **[KeepTogether](Access.GroupLevel.KeepTogether.md)** property for a group set to Whole Group or With First Detail will be kept together by page or by column. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "GrpKeepTogether",
            "Access.GroupLevel.KeepTogether.md",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.HasData",
        "file_name": "Access.Report.HasData.md",
        "kind": "property",
        "main": "Use the **HasData** property to determine if a report is bound to an empty recordset. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HasData",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.HasModule",
        "file_name": "Access.Report.HasModule.md",
        "kind": "property",
        "main": "Use the **HasModule** property to specify or determine whether a form or report has a class module. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HasModule",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Height",
        "file_name": "Access.Report.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.HelpContextId",
        "file_name": "Access.Report.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.HelpFile",
        "file_name": "Access.Report.HelpFile.md",
        "kind": "property",
        "main": "The name of a help file associated with a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.Hwnd",
        "file_name": "Access.Report.Hwnd.md",
        "kind": "property",
        "main": "Use the **hWnd** property to determine the handle (a unique **Long Integer** value) assigned by Windows to the current window. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "hWnd",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.InputParameters",
        "file_name": "Access.Report.InputParameters.md",
        "kind": "property",
        "main": "Use the **InputParameters** property to specify or determine the input parameters that are passed to a SQL statement in the **RecordSource** property of a form or report or a stored procedure when used as the record source within a Microsoft Access project (.adp). Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "InputParameters",
            "RecordSource",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.KeyDown",
        "file_name": "Access.Report.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a report has the focus. This event also occurs if you send a keystroke to a report by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Report.KeyPress",
        "file_name": "Access.Report.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a report has the focus. This event also occurs if you send an ANSI keystroke to a report by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Report.KeyPreview",
        "file_name": "Access.Report.KeyPreview.md",
        "kind": "property",
        "main": "Use the **KeyPreview** property to specify whether the report-level keyboard event procedures are invoked before a control's keyboard event procedures. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "KeyPreview",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.KeyUp",
        "file_name": "Access.Report.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a report has the focus. This event also occurs if you send a keystroke to a report by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.Report.LayoutForPrint",
        "file_name": "Access.Report.LayoutForPrint.md",
        "kind": "property",
        "main": "Use the **LayoutForPrint** property to specify whether the report uses printer or screen fonts. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "LayoutForPrint",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Left",
        "file_name": "Access.Report.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.Line",
        "file_name": "Access.Report.Line.md",
        "kind": "method",
        "main": "The **Line** method draws lines and rectangles on a **Report** object when the **Print** event occurs.\n",
        "Parameters": [
            "Step",
            "Color",
            "B",
            "F"
        ],
        "Return_value": [
            "Line",
            "Report",
            "Print"
        ]
    },
    {
        "api_name": "Access.Report.Load",
        "file_name": "Access.Report.Load.md",
        "kind": "event",
        "main": "Occurs when a report is opened and its records are displayed.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Report.LostFocus",
        "file_name": "Access.Report.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified report loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.Report",
        "Events": [
            "Activate",
            "ApplyFilter",
            "Click",
            "Close",
            "Current",
            "DblClick",
            "Deactivate",
            "Error",
            "Filter",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "Load",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "MouseWheel",
            "NoData",
            "Open",
            "Page",
            "Resize",
            "Timer",
            "Unload"
        ],
        "file_name": "Access.Report.md",
        "kind": "object",
        "main": "A **Report** object refers to a particular Microsoft Access report.\n",
        "Methods": [
            "Circle",
            "Line",
            "Move",
            "Print",
            "PSet",
            "Requery",
            "Scale",
            "TextHeight",
            "TextWidth"
        ],
        "Properties": [
            "ActiveControl",
            "AllowLayoutView",
            "AllowReportView",
            "Application",
            "AutoCenter",
            "AutoResize",
            "BorderStyle",
            "Caption",
            "CloseButton",
            "ControlBox",
            "Controls",
            "Count",
            "CurrentRecord",
            "CurrentView",
            "CurrentX",
            "CurrentY",
            "Cycle",
            "DateGrouping",
            "DefaultControl",
            "DefaultView",
            "Dirty",
            "DisplayOnSharePointSite",
            "DrawMode",
            "DrawStyle",
            "DrawWidth",
            "FastLaserPrinting",
            "FillColor",
            "FillStyle",
            "Filter",
            "FilterOn",
            "FilterOnLoad",
            "FitToPage",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "ForeColor",
            "FormatCount",
            "GridX",
            "GridY",
            "GroupLevel",
            "GrpKeepTogether",
            "HasData",
            "HasModule",
            "Height",
            "HelpContextId",
            "HelpFile",
            "Hwnd",
            "InputParameters",
            "KeyPreview",
            "LayoutForPrint",
            "Left",
            "MenuBar",
            "MinMaxButtons",
            "Modal",
            "Module",
            "MouseWheel",
            "Moveable",
            "MoveLayout",
            "Name",
            "NextRecord",
            "OnActivate",
            "OnApplyFilter",
            "OnClick",
            "OnClose",
            "OnCurrent",
            "OnDblClick",
            "OnDeactivate",
            "OnError",
            "OnFilter",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLoad",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnNoData",
            "OnOpen",
            "OnPage",
            "OnResize",
            "OnTimer",
            "OnUnload",
            "OpenArgs",
            "OrderBy",
            "OrderByOn",
            "OrderByOnLoad",
            "Orientation",
            "Page",
            "PageFooter",
            "PageHeader",
            "Pages",
            "Painting",
            "PaintPalette",
            "PaletteSource",
            "Parent",
            "Picture",
            "PictureAlignment",
            "PictureData",
            "PicturePages",
            "PicturePalette",
            "PictureSizeMode",
            "PictureTiling",
            "PictureType",
            "PopUp",
            "PrintCount",
            "Printer",
            "PrintSection",
            "Properties",
            "PrtDevMode",
            "PrtDevNames",
            "PrtMip",
            "RecordLocks",
            "Recordset",
            "RecordSource",
            "RecordSourceQualifier",
            "Report",
            "RibbonName",
            "ScaleHeight",
            "ScaleLeft",
            "ScaleMode",
            "ScaleTop",
            "ScaleWidth",
            "ScrollBars",
            "Section",
            "ServerFilter",
            "Shape",
            "ShortcutMenuBar",
            "ShowPageMargins",
            "Tag",
            "TimerInterval",
            "Toolbar",
            "Top",
            "UseDefaultPrinter",
            "Visible",
            "Width",
            "WindowHeight",
            "WindowLeft",
            "WindowTop",
            "WindowWidth"
        ]
    },
    {
        "api_name": "Access.Report.MenuBar",
        "file_name": "Access.Report.MenuBar.md",
        "kind": "property",
        "main": "Specifies a custom menu to display for a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.MinMaxButtons",
        "file_name": "Access.Report.MinMaxButtons.md",
        "kind": "property",
        "main": "Use the **MinMaxButtons** property to specify whether the **Maximize** and **Minimize** buttons will be visible on a report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "MinMaxButtons",
            "Maximize",
            "Minimize",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.Modal",
        "file_name": "Access.Report.Modal.md",
        "kind": "property",
        "main": "Use the **Modal** property to specify whether a report opens as a modal window. When a report opens as a modal window, you must close the window before you can move the focus to another object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Modal",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Module",
        "file_name": "Access.Report.Module.md",
        "kind": "property",
        "main": "Use the **Module** property to specify a report module. Read-only **Module** object.\n",
        "Parameters": [],
        "Return_value": [
            "Module"
        ]
    },
    {
        "api_name": "Access.Report.MouseDown",
        "file_name": "Access.Report.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.Report.MouseMove",
        "file_name": "Access.Report.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.Report.MouseUp",
        "file_name": "Access.Report.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.Report.MouseWheel",
        "file_name": "Access.Report.MouseWheel(even).md",
        "kind": "event",
        "main": "Occurs when the user rolls the mouse wheel in Report view or Layout view.\n",
        "Parameters": [
            "Page",
            "Count"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Report.MouseWheel",
        "file_name": "Access.Report.MouseWheel(property).md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **[MouseWheel](access.report.mousewheel(even).md)** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "access.report.mousewheel(even).md"
        ]
    },
    {
        "api_name": "Access.Report.Move",
        "file_name": "Access.Report.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.Report.Moveable",
        "file_name": "Access.Report.Moveable.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether the specified report can be moved by the user; **True** if it can be moved. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Report.MoveLayout",
        "file_name": "Access.Report.MoveLayout.md",
        "kind": "property",
        "main": "The **MoveLayout** property specifies whether Microsoft Access should move to the next printing location on the page. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "MoveLayout",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Name",
        "file_name": "Access.Report.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.NextRecord",
        "file_name": "Access.Report.NextRecord.md",
        "kind": "property",
        "main": "The **NextRecord** property specifies whether a section should advance to the next record. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "NextRecord",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.NoData",
        "file_name": "Access.Report.NoData.md",
        "kind": "event",
        "main": "The **NoData** event occurs after Microsoft Access formats a report for printing that has no data (the report is bound to an empty recordset), but before the report is printed. Use this event to cancel printing of a blank report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "NoData"
        ]
    },
    {
        "api_name": "Access.Report.OnActivate",
        "file_name": "Access.Report.OnActivate.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Activate** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnApplyFilter",
        "file_name": "Access.Report.OnApplyFilter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Apply Filter** box in the Properties window of a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnClick",
        "file_name": "Access.Report.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnClose",
        "file_name": "Access.Report.OnClose.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Close** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnCurrent",
        "file_name": "Access.Report.OnCurrent.md",
        "kind": "property",
        "main": "Sets or returns the value of the **OnCurrent** property on the report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "OnCurrent",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnDblClick",
        "file_name": "Access.Report.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnDeactivate",
        "file_name": "Access.Report.OnDeactivate.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Deactivate** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnError",
        "file_name": "Access.Report.OnError.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Error** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnFilter",
        "file_name": "Access.Report.OnFilter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Filter** box in the Properties window of a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnGotFocus",
        "file_name": "Access.Report.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnKeyDown",
        "file_name": "Access.Report.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnKeyPress",
        "file_name": "Access.Report.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnKeyUp",
        "file_name": "Access.Report.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnLoad",
        "file_name": "Access.Report.OnLoad.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Load** box in the Properties window of a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnLostFocus",
        "file_name": "Access.Report.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnMouseDown",
        "file_name": "Access.Report.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnMouseMove",
        "file_name": "Access.Report.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnMouseUp",
        "file_name": "Access.Report.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnNoData",
        "file_name": "Access.Report.OnNoData.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On No Data** box in the Properties window of a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnOpen",
        "file_name": "Access.Report.OnOpen.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Open** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnPage",
        "file_name": "Access.Report.OnPage.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Page** box in the Properties window of a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnResize",
        "file_name": "Access.Report.OnResize.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Resize** box in the Properties window of a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnTimer",
        "file_name": "Access.Report.OnTimer.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Timer** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OnUnload",
        "file_name": "Access.Report.OnUnload.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Unload** box in the Properties window of a form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.Open",
        "file_name": "Access.Report.Open.md",
        "kind": "event",
        "main": "The **Open** event occurs before a report is previewed or printed.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Open"
        ]
    },
    {
        "api_name": "Access.Report.OpenArgs",
        "file_name": "Access.Report.OpenArgs.md",
        "kind": "property",
        "main": "Determines the string expression specified by the _OpenArgs_ argument of the **[OpenReport](access.docmd.openreport.md)** method that opened a report. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "access.docmd.openreport.md",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Report.OrderBy",
        "file_name": "Access.Report.OrderBy.md",
        "kind": "property",
        "main": "Use the **OrderBy** property to specify how you want to sort records in a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "OrderBy",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.OrderByOn",
        "file_name": "Access.Report.OrderByOn.md",
        "kind": "property",
        "main": "Use the **OrderByOn** property to specify whether an object's **OrderBy** property setting is applied. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "OrderByOn",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.OrderByOnLoad",
        "file_name": "Access.Report.OrderByOnLoad.md",
        "kind": "property",
        "main": "Gets or sets whether the sorting specified by the **[OrderBy](Access.Report.OrderBy.md)** property is applied when the report is loaded. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Report.OrderBy.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Orientation",
        "file_name": "Access.Report.Orientation.md",
        "kind": "property",
        "main": "Use the **Orientation** property to specify or determine the view orientation. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Orientation",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.Page",
        "file_name": "Access.Report.Page(even).md",
        "kind": "event",
        "main": "The **Page** event occurs after Microsoft Access formats a page of a report for printing, but before the page is printed. Use this event to draw a border around the page, or add other graphic elements to the page.\n",
        "Parameters": [],
        "Return_value": [
            "Page"
        ]
    },
    {
        "api_name": "Access.Report.Page",
        "file_name": "Access.Report.Page(property).md",
        "kind": "property",
        "main": "The **Page** property specifies the current page number when a report is being printed. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Page",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.PageFooter",
        "file_name": "Access.Report.PageFooter.md",
        "kind": "property",
        "main": "Use the **PageFooter** property to specify whether a report's page footer is printed on the same page as a report footer. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PageFooter",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.PageHeader",
        "file_name": "Access.Report.PageHeader.md",
        "kind": "property",
        "main": "Use the **PageHeader** property to specify whether a report's page header is printed on the same page as a report header. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PageHeader",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.Pages",
        "file_name": "Access.Report.Pages.md",
        "kind": "property",
        "main": "Use the **Pages** property to return information needed to print page numbers in a report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Pages",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.Painting",
        "file_name": "Access.Report.Painting.md",
        "kind": "property",
        "main": "Use the **Painting** property to specify whether a report is repainted. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Painting",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.PaintPalette",
        "file_name": "Access.Report.PaintPalette.md",
        "kind": "property",
        "main": "Use the **PaintPalette** property to specify a palette to be used by a report. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PaintPalette",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Report.PaletteSource",
        "file_name": "Access.Report.PaletteSource.md",
        "kind": "property",
        "main": "Use the **PaletteSource** property to specify the palette for a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "PaletteSource",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.Parent",
        "file_name": "Access.Report.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Report.Picture",
        "file_name": "Access.Report.Picture.md",
        "kind": "property",
        "main": "Use the **Picture** property to specify a bitmap or other type of graphic to be used as a background picture on a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Picture",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.PictureAlignment",
        "file_name": "Access.Report.PictureAlignment.md",
        "kind": "property",
        "main": "Use the **PictureAlignment** property to specify where a background picture will appear in an image control or on a form or report. Read/write **Byte**.Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "PictureAlignment",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.PictureData",
        "file_name": "Access.Report.PictureData.md",
        "kind": "property",
        "main": "Use the **PictureData** property to copy the picture to another object that supports the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Report.PicturePages",
        "file_name": "Access.Report.PicturePages.md",
        "kind": "property",
        "main": "Use the **PicturePages** property to specify on which page or pages of a report a picture will be displayed. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PicturePages",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.PicturePalette",
        "file_name": "Access.Report.PicturePalette.md",
        "kind": "property",
        "main": "Use the **PicturePalette** property to specify a palette to be used by a report. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PicturePalette",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Report.PictureSizeMode",
        "file_name": "Access.Report.PictureSizeMode.md",
        "kind": "property",
        "main": "Use the **PictureSizeMode** property to specify how a picture for a form or report is sized. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureSizeMode",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.PictureTiling",
        "file_name": "Access.Report.PictureTiling.md",
        "kind": "property",
        "main": "Use the **PictureTiling** property to specify whether a background picture is tiled across the entire image control, Form window, form, or page of a report. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureTiling",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.PictureType",
        "file_name": "Access.Report.PictureType.md",
        "kind": "property",
        "main": "Use the **PictureType** property to specify whether Microsoft Access stores an object's picture as a linked or an embedded object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.PopUp",
        "file_name": "Access.Report.PopUp.md",
        "kind": "property",
        "main": "Specifies whether a report opens as a pop-up window. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Print",
        "file_name": "Access.Report.Print.md",
        "kind": "method",
        "main": "The **Print** method prints text on a **Report** object by using the current color and font.\n",
        "Parameters": [
            "Expr"
        ],
        "Return_value": [
            "Print",
            "Report"
        ]
    },
    {
        "api_name": "Access.Report.PrintCount",
        "file_name": "Access.Report.PrintCount.md",
        "kind": "property",
        "main": "Use the **PrintCount** property to identify the number of times the **OnPrint** property has been evaluated for the current section of a report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "PrintCount",
            "OnPrint",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.Printer",
        "file_name": "Access.Report.Printer.md",
        "kind": "property",
        "main": "Returns or sets a **[Printer](Access.Printer.md)** object representing the default printer on the current system. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Printer.md"
        ]
    },
    {
        "api_name": "Access.Report.PrintSection",
        "file_name": "Access.Report.PrintSection.md",
        "kind": "property",
        "main": "The **PrintSection** property specifies whether a section should be printed. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "PrintSection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Properties",
        "file_name": "Access.Report.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Report.PrtDevMode",
        "file_name": "Access.Report.PrtDevMode.md",
        "kind": "property",
        "main": "Use the **PrtDevMode** property to set or return printing device mode information specified for a form or report in the **Print** dialog box. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PrtDevMode",
            "Print",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Report.PrtDevNames",
        "file_name": "Access.Report.PrtDevNames.md",
        "kind": "property",
        "main": "Use the **PrtDevNames** property to set or return information about the printer selected in the **Print** dialog box for a form or report. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PrtDevNames",
            "Print",
            "Variant"
        ]
    },
    {
        "api_name": "Access.Report.PrtMip",
        "file_name": "Access.Report.PrtMip.md",
        "kind": "property",
        "main": "Use the **PrtMip** property in Visual Basic to set or return the device mode information specified for a form or report in the **Print** dialog box.\n",
        "Parameters": [],
        "Return_value": [
            "PrtMip",
            "Print"
        ]
    },
    {
        "api_name": "Access.Report.PSet",
        "file_name": "Access.Report.PSet.md",
        "kind": "method",
        "main": "The **PSet** method sets a point on a **Report** object to a specified color when the **Print** event occurs.\n",
        "Parameters": [
            "Flags",
            "x",
            "y",
            "Color"
        ],
        "Return_value": [
            "PSet",
            "Report",
            "Print"
        ]
    },
    {
        "api_name": "Access.Report.RecordLocks",
        "file_name": "Access.Report.RecordLocks.md",
        "kind": "property",
        "main": "Use the **RecordLocks** property to determine how records are locked and what happens when two users try to edit the same record at the same time. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "RecordLocks"
        ]
    },
    {
        "api_name": "Access.Report.Recordset",
        "file_name": "Access.Report.Recordset.md",
        "kind": "property",
        "main": "Returns or sets the ADO **Recordset** or DAO **Recordset** object that represents the record source for the specified object. Read/write **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Recordset",
            "Object"
        ]
    },
    {
        "api_name": "Access.Report.RecordSource",
        "file_name": "Access.Report.RecordSource.md",
        "kind": "property",
        "main": "Use the **RecordSource** property to specify the source of the data for a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "RecordSource",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.RecordSourceQualifier",
        "file_name": "Access.Report.RecordSourceQualifier.md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating the SQL Server owner name of the record source for the specified report. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.Report",
        "file_name": "Access.Report.Report.md",
        "kind": "property",
        "main": "Use the **Report** property to refer to a report or to refer to the report associated with a subreport control. Read-only **Report**.\n",
        "Parameters": [],
        "Return_value": [
            "Report"
        ]
    },
    {
        "api_name": "Access.Report.Requery",
        "file_name": "Access.Report.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying the specified report by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.Report.Resize",
        "file_name": "Access.Report.Resize.md",
        "kind": "event",
        "main": "The **Resize** event occurs when a report is opened and whenever the size of a report changes.\n",
        "Parameters": [],
        "Return_value": [
            "Resize"
        ]
    },
    {
        "api_name": "Access.Report.RibbonName",
        "file_name": "Access.Report.RibbonName.md",
        "kind": "property",
        "main": "Gets or sets the name of the customized ribbon to be displayed when the specified report is loaded. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.Scale",
        "file_name": "Access.Report.Scale.md",
        "kind": "method",
        "main": "The **Scale** method defines the coordinate system for a **[Report](Access.Report.md)** object.\n",
        "Parameters": [
            "Flags",
            "x1",
            "y1",
            "x2",
            "y2"
        ],
        "Return_value": [
            "Scale",
            "Access.Report.md"
        ]
    },
    {
        "api_name": "Access.Report.ScaleHeight",
        "file_name": "Access.Report.ScaleHeight.md",
        "kind": "property",
        "main": "Use the **ScaleHeight** property to specify the number of units for the vertical measurement of the page when the **[Circle](Access.Report.Circle.md)**, **[Line](Access.Report.Line.md)**, **[Pset](Access.Report.PSet.md)**, or **[Print](Access.Report.Print.md)** method is used while a report is printed or previewed, or its output is saved to a file. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ScaleHeight",
            "Access.Report.Circle.md",
            "Access.Report.Line.md",
            "Access.Report.PSet.md",
            "Access.Report.Print.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Report.ScaleLeft",
        "file_name": "Access.Report.ScaleLeft.md",
        "kind": "property",
        "main": "Use the **ScaleLeft** property to specify the units for the horizontal coordinates that describe the location of the left edge of a page when the **[Circle](Access.Report.Circle.md)**, **[Line](Access.Report.Line.md)**, **[Pset](Access.Report.PSet.md)**, or **[Print](Access.Report.Print.md)** method is used while a report is printed or previewed, or its output is saved to a file. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ScaleLeft",
            "Access.Report.Circle.md",
            "Access.Report.Line.md",
            "Access.Report.PSet.md",
            "Access.Report.Print.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Report.ScaleMode",
        "file_name": "Access.Report.ScaleMode.md",
        "kind": "property",
        "main": "Use the **ScaleMode** property in Visual Basic to specify the unit of measurement for coordinates on a page when the **[Circle](Access.Report.Circle.md)**, **[Line](Access.Report.Line.md)**, **[Pset](Access.Report.PSet.md)**, or **[Print](Access.Report.Print.md)** method is used while a report is previewed or printed, or its output is saved to a file. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ScaleMode",
            "Access.Report.Circle.md",
            "Access.Report.Line.md",
            "Access.Report.PSet.md",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.ScaleTop",
        "file_name": "Access.Report.ScaleTop.md",
        "kind": "property",
        "main": "Use the **ScaleTop** property to specify the units for the vertical coordinates that describe the location of the top edge of a page when the **[Circle](Access.Report.Circle.md)**, **[Line](Access.Report.Line.md)**, **[Pset](Access.Report.PSet.md)**, or **[Print](Access.Report.Print.md)** method is used while a report is printed or previewed, or its output is saved to a file. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ScaleTop",
            "Access.Report.Circle.md",
            "Access.Report.Line.md",
            "Access.Report.PSet.md",
            "Access.Report.Print.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Report.ScaleWidth",
        "file_name": "Access.Report.ScaleWidth.md",
        "kind": "property",
        "main": "Use the **ScaleWidth** property to specify the number of units for the horizontal measurement of the page when the **[Circle](Access.Report.Circle.md)**, **[Line](Access.Report.Line.md)**, **[Pset](Access.Report.PSet.md)**, or **[Print](Access.Report.Print.md)** method is used while a report is printed or previewed, or its output is saved to a file. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ScaleWidth",
            "Access.Report.Circle.md",
            "Access.Report.Line.md",
            "Access.Report.PSet.md",
            "Access.Report.Print.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.Report.ScrollBars",
        "file_name": "Access.Report.ScrollBars.md",
        "kind": "property",
        "main": "Gets or sets whether scroll bars appear on a report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.Report.Section",
        "file_name": "Access.Report.Section.md",
        "kind": "property",
        "main": "Use the **Section** property to identify a section of a report and provide access to the properties of that section. Read-only **Section** object.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Section"
        ]
    },
    {
        "api_name": "Access.Report.ServerFilter",
        "file_name": "Access.Report.ServerFilter.md",
        "kind": "property",
        "main": "Use the **ServerFilter** property to specify a subset of records to be displayed when a server filter is applied to a report within a Microsoft Access project (.adp) or database. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ServerFilter",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.ShortcutMenuBar",
        "file_name": "Access.Report.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.Report.ShowPageMargins",
        "file_name": "Access.Report.ShowPageMargins.md",
        "kind": "property",
        "main": "Gets or sets whether page margins are displayed when the specified report is in Layout view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Tag",
        "file_name": "Access.Report.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.TextHeight",
        "file_name": "Access.Report.TextHeight.md",
        "kind": "method",
        "main": "The **TextHeight** method returns the height of a text string as it would be printed in the current font of a **Report** object.\n",
        "Parameters": [
            "Expr"
        ],
        "Return_value": [
            "TextHeight",
            "Report"
        ]
    },
    {
        "api_name": "Access.Report.TextWidth",
        "file_name": "Access.Report.TextWidth.md",
        "kind": "method",
        "main": "The **TextWidth** method returns the width of a text string as it would be printed in the current font of a **Report** object.\n",
        "Parameters": [
            "Expr"
        ],
        "Return_value": [
            "TextWidth",
            "Report"
        ]
    },
    {
        "api_name": "Access.Report.Timer",
        "file_name": "Access.Report.Timer.md",
        "kind": "event",
        "main": "The **Timer** event occurs for a report at regular intervals as specified by the report's **[TimerInterval](Access.Report.TimerInterval.md)** property.\n",
        "Parameters": [],
        "Return_value": [
            "Timer",
            "Access.Report.TimerInterval.md"
        ]
    },
    {
        "api_name": "Access.Report.TimerInterval",
        "file_name": "Access.Report.TimerInterval.md",
        "kind": "property",
        "main": "Use the **TimerInterval** property to specify the interval, in milliseconds, between **[Timer](Access.Report.Timer.md)** events on a report. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "TimerInterval",
            "Access.Report.Timer.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.Toolbar",
        "file_name": "Access.Report.Toolbar.md",
        "kind": "property",
        "main": "Specifies a custom toolbar to display for a report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Report.Top",
        "file_name": "Access.Report.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Long"
        ]
    },
    {
        "api_name": "Access.Report.Unload",
        "file_name": "Access.Report.Unload.md",
        "kind": "event",
        "main": "The **Unload** event occurs after a report is closed but before it's removed from the screen.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Unload"
        ]
    },
    {
        "api_name": "Access.Report.UseDefaultPrinter",
        "file_name": "Access.Report.UseDefaultPrinter.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether the specified report uses the default printer for the system; **True** if the form or report uses the default printer. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.Report.Visible",
        "file_name": "Access.Report.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Report.Width",
        "file_name": "Access.Report.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.WindowHeight",
        "file_name": "Access.Report.WindowHeight.md",
        "kind": "property",
        "main": "Returns the height of a report in [twips](../language/glossary/vbe-glossary.md#twip). Read-only **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.WindowLeft",
        "file_name": "Access.Report.WindowLeft.md",
        "kind": "property",
        "main": "Returns an **Integer** indicating the screen position in [twips](../language/glossary/vbe-glossary.md#twip) of the left edge of a report relative to the left edge of the Microsoft Access window. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.WindowTop",
        "file_name": "Access.Report.WindowTop.md",
        "kind": "property",
        "main": "Returns an **Integer** indicating the screen position in [twips](../language/glossary/vbe-glossary.md#twip) of the top edge of a report relative to the top of the Microsoft Access window. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Report.WindowWidth",
        "file_name": "Access.Report.WindowWidth.md",
        "kind": "property",
        "main": "Returns the width of a report in [twips](../language/glossary/vbe-glossary.md#twip). Read-only **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Reports.Application",
        "file_name": "Access.Reports.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Reports.Count",
        "file_name": "Access.Reports.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.Reports.Item",
        "file_name": "Access.Reports.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Report**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Report"
        ]
    },
    {
        "api_name": "Access.Reports",
        "Events": [],
        "file_name": "Access.Reports.md",
        "kind": "object",
        "main": "The **Reports** collection contains all of the currently open reports in a Microsoft Access database.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.Reports.Parent",
        "file_name": "Access.Reports.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ReturnVar",
        "Events": [],
        "file_name": "Access.ReturnVar.md",
        "kind": "object",
        "main": "Represents a variable that was initialized by the **SetReturnVar** function in a Data Macro.\n",
        "Methods": [],
        "Properties": [
            "Name",
            "Value"
        ]
    },
    {
        "api_name": "Access.ReturnVar.Name",
        "file_name": "Access.ReturnVar.Name.md",
        "kind": "property",
        "main": "Gets the name of the specified **[ReturnVar](Access.ReturnVar.md)**. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.ReturnVar.md",
            "String"
        ]
    },
    {
        "api_name": "Access.ReturnVar.Value",
        "file_name": "Access.ReturnVar.Value.md",
        "kind": "property",
        "main": "Gets the value of the specified **ReturnVar** object. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "ReturnVar",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ReturnVars.Application",
        "file_name": "Access.ReturnVars.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object. \n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.ReturnVars.Count",
        "file_name": "Access.ReturnVars.Count.md",
        "kind": "property",
        "main": "Gets the number of **[ReturnVar](Access.ReturnVar.md)** objects in the **ReturnVars** collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.ReturnVar.md",
            "ReturnVars",
            "Long"
        ]
    },
    {
        "api_name": "Access.ReturnVars.Item",
        "file_name": "Access.ReturnVars.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **ReturnVar**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "ReturnVar"
        ]
    },
    {
        "api_name": "Access.ReturnVars",
        "Events": [],
        "file_name": "Access.ReturnVars.md",
        "kind": "object",
        "main": "Represents the collection of **[ReturnVar](Access.ReturnVar.md)** objects.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.ReturnVars.Parent",
        "file_name": "Access.ReturnVars.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.Screen.ActiveControl",
        "file_name": "Access.Screen.ActiveControl.md",
        "kind": "property",
        "main": "Use the **ActiveControl** property together with the **Screen** object to identify or refer to the control that has the focus. Read-only **Control** object.\n",
        "Parameters": [],
        "Return_value": [
            "ActiveControl",
            "Screen"
        ]
    },
    {
        "api_name": "Access.Screen.ActiveDatasheet",
        "file_name": "Access.Screen.ActiveDatasheet.md",
        "kind": "property",
        "main": "Use the **ActiveDatasheet** property together with the **Screen** object to identify or refer to the datasheet that has the focus. Read-only **Form** object.\n",
        "Parameters": [],
        "Return_value": [
            "ActiveDatasheet",
            "Screen",
            "Form"
        ]
    },
    {
        "api_name": "Access.Screen.ActiveForm",
        "file_name": "Access.Screen.ActiveForm.md",
        "kind": "property",
        "main": "Use the **ActiveForm** property together with the **Screen** object to identify or refer to the form that has the focus. Read-only **Form** object.\n",
        "Parameters": [],
        "Return_value": [
            "ActiveForm",
            "Screen"
        ]
    },
    {
        "api_name": "Access.Screen.ActiveReport",
        "file_name": "Access.Screen.ActiveReport.md",
        "kind": "property",
        "main": "Use the **ActiveReport** property together with the **Screen** object to identify or refer to the report that has the focus. Read-only **Report** object.\n",
        "Parameters": [],
        "Return_value": [
            "ActiveReport",
            "Screen"
        ]
    },
    {
        "api_name": "Access.Screen.Application",
        "file_name": "Access.Screen.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Screen",
        "Events": [],
        "file_name": "Access.Screen.md",
        "kind": "object",
        "main": "The **Screen** object refers to the particular form, report, or control that currently has the focus.\n",
        "Methods": [],
        "Properties": [
            "ActiveControl",
            "ActiveDatasheet",
            "ActiveForm",
            "ActiveReport",
            "Application",
            "MousePointer",
            "Parent",
            "PreviousControl"
        ]
    },
    {
        "api_name": "Access.Screen.MousePointer",
        "file_name": "Access.Screen.MousePointer.md",
        "kind": "property",
        "main": "Use the **MousePointer** property together with the **Screen** object to specify or determine the type of mouse pointer currently displayed. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "MousePointer",
            "Screen",
            "Integer"
        ]
    },
    {
        "api_name": "Access.Screen.Parent",
        "file_name": "Access.Screen.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Screen.PreviousControl",
        "file_name": "Access.Screen.PreviousControl.md",
        "kind": "property",
        "main": "Use the **PreviousControl** property together with the **Screen** object to return a reference to the control that last received the focus. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "PreviousControl",
            "Screen"
        ]
    },
    {
        "api_name": "Access.Section.AlternateBackColor",
        "file_name": "Access.Section.AlternateBackColor.md",
        "kind": "property",
        "main": "Gets or sets the background color to display on alternate rows of the specified section. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Section.AlternateBackShade",
        "file_name": "Access.Section.AlternateBackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **AlternateBackColor** property of the section. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "AlternateBackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Section.AlternateBackThemeColorIndex",
        "file_name": "Access.Section.AlternateBackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **AlternateBackColor** property of the section. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "AlternateBackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Section.AlternateBackTint",
        "file_name": "Access.Section.AlternateBackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **AlternateBackColor** property of the section. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "AlternateBackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Section.Application",
        "file_name": "Access.Section.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.Section.AutoHeight",
        "file_name": "Access.Section.AutoHeight.md",
        "kind": "property",
        "main": "Gets or sets whether a section's height is adjusted automatically when controls are resized. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Section.BackColor",
        "file_name": "Access.Section.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.Section.BackShade",
        "file_name": "Access.Section.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Section.BackThemeColorIndex",
        "file_name": "Access.Section.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.Section.BackTint",
        "file_name": "Access.Section.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.Section.CanGrow",
        "file_name": "Access.Section.CanGrow.md",
        "kind": "property",
        "main": "Gets or sets whether the specified control automatically adjusts vertically to print or preview all the data that the control contains. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Section.CanShrink",
        "file_name": "Access.Section.CanShrink.md",
        "kind": "property",
        "main": "Gets or sets whether the specified control automatically adjusts vertically to print or preview all the data that the section or control contains. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Section.Click",
        "file_name": "Access.Section.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.Section.Controls",
        "file_name": "Access.Section.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.Section.DblClick",
        "file_name": "Access.Section.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.Section.DisplayWhen",
        "file_name": "Access.Section.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's sections you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Section.EventProcPrefix",
        "file_name": "Access.Section.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.ForceNewPage",
        "file_name": "Access.Section.ForceNewPage.md",
        "kind": "property",
        "main": "Use the **ForceNewPage** property to specify whether form sections (detail, footer) or report sections (header, detail, footer) print on a separate page rather than on the current page. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ForceNewPage",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Section.HasContinued",
        "file_name": "Access.Section.HasContinued.md",
        "kind": "property",
        "main": "Use the **HasContinued** property to determine if part of the current section begins on the previous page. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HasContinued",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Section.Height",
        "file_name": "Access.Section.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.Section.InSelection",
        "file_name": "Access.Section.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Section.KeepTogether",
        "file_name": "Access.Section.KeepTogether.md",
        "kind": "property",
        "main": "Use the **KeepTogether** property for a section to print a form or report section all on one page. For example, you might have a group of related information that you don't want printed across two pages. The **KeepTogether** property applies only to form and report sections (except page headers and page footers). Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "KeepTogether",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Section",
        "Events": [
            "Click",
            "DblClick",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "Paint"
        ],
        "file_name": "Access.Section.md",
        "kind": "object",
        "main": "A form section is part of a form such as a header, footer, or detail section.\n",
        "Methods": [
            "SetTabOrder"
        ],
        "Properties": [
            "AlternateBackColor",
            "AlternateBackShade",
            "AlternateBackThemeColorIndex",
            "AlternateBackTint",
            "Application",
            "AutoHeight",
            "BackColor",
            "BackShade",
            "BackThemeColorIndex",
            "BackTint",
            "CanGrow",
            "CanShrink",
            "Controls",
            "DisplayWhen",
            "EventProcPrefix",
            "ForceNewPage",
            "HasContinued",
            "Height",
            "InSelection",
            "KeepTogether",
            "Name",
            "NewRowOrCol",
            "OnClick",
            "OnDblClick",
            "OnFormat",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnPaint",
            "OnPrint",
            "OnRetreat",
            "Parent",
            "Properties",
            "RepeatSection",
            "SpecialEffect",
            "Tag",
            "Visible",
            "WillContinue"
        ]
    },
    {
        "api_name": "Access.Section.MouseDown",
        "file_name": "Access.Section.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.Section.MouseMove",
        "file_name": "Access.Section.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.Section.MouseUp",
        "file_name": "Access.Section.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.Section.Name",
        "file_name": "Access.Section.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.Section.NewRowOrCol",
        "file_name": "Access.Section.NewRowOrCol.md",
        "kind": "property",
        "main": "Use the **NewRowOrCol** property to specify whether a section and its associated data is printed in a new row or column within a multiple-column report or multiple-column form. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "NewRowOrCol",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Section.OnClick",
        "file_name": "Access.Section.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.OnDblClick",
        "file_name": "Access.Section.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.OnFormat",
        "file_name": "Access.Section.OnFormat.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Format** box in the Properties window of a report section. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.OnMouseDown",
        "file_name": "Access.Section.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.OnMouseMove",
        "file_name": "Access.Section.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.OnMouseUp",
        "file_name": "Access.Section.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.OnPaint",
        "file_name": "Access.Section.OnPaint.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Paint** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.OnPrint",
        "file_name": "Access.Section.OnPrint.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Print** box in the Properties window of a report section. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.OnRetreat",
        "file_name": "Access.Section.OnRetreat.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Retreat** box in the Properties window of a report section. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.Paint",
        "file_name": "Access.Section.Paint.md",
        "kind": "event",
        "main": "Occurs when the specified section is redrawn.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Section.Parent",
        "file_name": "Access.Section.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.Section.Properties",
        "file_name": "Access.Section.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.Section.RepeatSection",
        "file_name": "Access.Section.RepeatSection.md",
        "kind": "property",
        "main": "Use the **RepeatSection** property to specify whether a group header is repeated on the next page or column when a group spans more than one page or column. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "RepeatSection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Section.SetTabOrder",
        "file_name": "Access.Section.SetTabOrder.md",
        "kind": "method",
        "main": "Resets the tab order of the controls in the specified **Section** to their default values.\n",
        "Parameters": [],
        "Return_value": [
            "Section"
        ]
    },
    {
        "api_name": "Access.Section.SpecialEffect",
        "file_name": "Access.Section.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.Section.Tag",
        "file_name": "Access.Section.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.Section.Visible",
        "file_name": "Access.Section.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.Section.WillContinue",
        "file_name": "Access.Section.WillContinue.md",
        "kind": "property",
        "main": "Determines if the current section will continue on the following page. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SharedResource.Delete",
        "file_name": "Access.SharedResource.Delete.md",
        "kind": "method",
        "main": "Deletes the specified object.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SharedResource",
        "Events": [],
        "file_name": "Access.SharedResource.md",
        "kind": "object",
        "main": "Represents a Microsoft Office theme or image that is available as a shared resource in the database.\n",
        "Methods": [
            "Delete"
        ],
        "Properties": [
            "Name",
            "Parent",
            "Type"
        ]
    },
    {
        "api_name": "Access.SharedResource.Name",
        "file_name": "Access.SharedResource.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.SharedResource.Parent",
        "file_name": "Access.SharedResource.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SharedResource.Type",
        "file_name": "Access.SharedResource.Type.md",
        "kind": "property",
        "main": "Gets the type of the **SharedResource** object. Read-only **[AcResourceType](Access.AcResourceType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "SharedResource",
            "Access.AcResourceType.md"
        ]
    },
    {
        "api_name": "Access.SharedResources.Application",
        "file_name": "Access.SharedResources.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.SharedResources.Count",
        "file_name": "Access.SharedResources.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.SharedResources.Item",
        "file_name": "Access.SharedResources.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Object**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Object"
        ]
    },
    {
        "api_name": "Access.SharedResources",
        "Events": [],
        "file_name": "Access.SharedResources.md",
        "kind": "object",
        "main": "Represents the collection of shared resources in the database.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.SharedResources.Parent",
        "file_name": "Access.SharedResources.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTag.Application",
        "file_name": "Access.SmartTag.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.SmartTag.Delete",
        "file_name": "Access.SmartTag.Delete.md",
        "kind": "method",
        "main": "Deletes the specified object.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTag.IsMissing",
        "file_name": "Access.SmartTag.IsMissing.md",
        "kind": "property",
        "main": "Returns **True** if the specified smart tag is not installed or is installed incorrectly. Read-only **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "True",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SmartTag",
        "Events": [],
        "file_name": "Access.SmartTag.md",
        "kind": "object",
        "main": "Represents a smart tag that has been added to a control on a form or report. The **SmartTag** object is a member of the **[SmartTags](Access.SmartTags.md)** collection.\n",
        "Methods": [
            "Delete"
        ],
        "Properties": [
            "Application",
            "IsMissing",
            "Name",
            "Parent",
            "Properties",
            "SmartTagActions",
            "XML"
        ]
    },
    {
        "api_name": "Access.SmartTag.Name",
        "file_name": "Access.SmartTag.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.SmartTag.Parent",
        "file_name": "Access.SmartTag.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTag.Properties",
        "file_name": "Access.SmartTag.Properties.md",
        "kind": "property",
        "main": "Returns a **SmartTagProperties** collection that represents the collection of properties for a particular smart tag. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "SmartTagProperties"
        ]
    },
    {
        "api_name": "Access.SmartTag.SmartTagActions",
        "file_name": "Access.SmartTag.SmartTagActions.md",
        "kind": "property",
        "main": "Returns a **[SmartTagActions](Access.SmartTagActions.md)** collection that represents the actions available for a specific smart tag. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.SmartTagActions.md"
        ]
    },
    {
        "api_name": "Access.SmartTag.XML",
        "file_name": "Access.SmartTag.XML.md",
        "kind": "property",
        "main": "Returns a **String** that represents the related XML code for a smart tag. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.SmartTagAction.Application",
        "file_name": "Access.SmartTagAction.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.SmartTagAction.Execute",
        "file_name": "Access.SmartTagAction.Execute.md",
        "kind": "method",
        "main": "The **Execute** method performs the specified smart tag action.\n",
        "Parameters": [],
        "Return_value": [
            "Execute"
        ]
    },
    {
        "api_name": "Access.SmartTagAction",
        "Events": [],
        "file_name": "Access.SmartTagAction.md",
        "kind": "object",
        "main": "Represents a single action for a smart tag.\n",
        "Methods": [
            "Execute"
        ],
        "Properties": [
            "Application",
            "Name",
            "Parent"
        ]
    },
    {
        "api_name": "Access.SmartTagAction.Name",
        "file_name": "Access.SmartTagAction.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to determine the string expression that identifies the name of an object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.SmartTagAction.Parent",
        "file_name": "Access.SmartTagAction.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTagActions.Application",
        "file_name": "Access.SmartTagActions.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.SmartTagActions.Count",
        "file_name": "Access.SmartTagActions.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.SmartTagActions.Item",
        "file_name": "Access.SmartTagActions.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **SmartTagAction**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "SmartTagAction"
        ]
    },
    {
        "api_name": "Access.SmartTagActions",
        "Events": [],
        "file_name": "Access.SmartTagActions.md",
        "kind": "object",
        "main": "Represents a collection of actions for an individual smart tag or a type of smart tag. \n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.SmartTagActions.Parent",
        "file_name": "Access.SmartTagActions.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTagProperties.Add",
        "file_name": "Access.SmartTagProperties.Add.md",
        "kind": "method",
        "main": "Adds a custom property to a smart tag.\n",
        "Parameters": [
            "Name",
            "Value"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTagProperties.Application",
        "file_name": "Access.SmartTagProperties.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.SmartTagProperties.Count",
        "file_name": "Access.SmartTagProperties.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.SmartTagProperties.Item",
        "file_name": "Access.SmartTagProperties.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **SmartTagProperty**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "SmartTagProperty"
        ]
    },
    {
        "api_name": "Access.SmartTagProperties",
        "Events": [],
        "file_name": "Access.SmartTagProperties.md",
        "kind": "object",
        "main": "A collection of **[SmartTagProperty](Access.SmartTagProperty.md)** objects that represents the properties related to a smart tag.\n",
        "Methods": [
            "Add"
        ],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.SmartTagProperties.Parent",
        "file_name": "Access.SmartTagProperties.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTagProperty.Delete",
        "file_name": "Access.SmartTagProperty.Delete.md",
        "kind": "method",
        "main": "Deletes the specified object.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTagProperty",
        "Events": [],
        "file_name": "Access.SmartTagProperty.md",
        "kind": "object",
        "main": "Represents a single instance of a custom property for a smart tag. The **SmartTagProperty** object is a member of the **[SmartTagProperties](Access.SmartTagProperties.md)** collection.\n",
        "Methods": [
            "Delete"
        ],
        "Properties": [
            "Name",
            "Value"
        ]
    },
    {
        "api_name": "Access.SmartTagProperty.Name",
        "file_name": "Access.SmartTagProperty.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.SmartTagProperty.Value",
        "file_name": "Access.SmartTagProperty.Value.md",
        "kind": "property",
        "main": "Gets or sets the value of the specified object. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.SmartTags.Add",
        "file_name": "Access.SmartTags.Add.md",
        "kind": "method",
        "main": "Adds a smart tag to a form or control.\n",
        "Parameters": [
            "Name"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.SmartTags.Application",
        "file_name": "Access.SmartTags.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.SmartTags.Count",
        "file_name": "Access.SmartTags.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.SmartTags.Item",
        "file_name": "Access.SmartTags.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **SmartTag**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "SmartTag"
        ]
    },
    {
        "api_name": "Access.SmartTags",
        "Events": [],
        "file_name": "Access.SmartTags.md",
        "kind": "object",
        "main": "Represents the collection of smart tags for a control on a form, report, or data access page.\n",
        "Methods": [
            "Add"
        ],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.SmartTags.Parent",
        "file_name": "Access.SmartTags.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SubForm.AddColon",
        "file_name": "Access.SubForm.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.Application",
        "file_name": "Access.SubForm.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.SubForm.AutoLabel",
        "file_name": "Access.SubForm.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.BorderColor",
        "file_name": "Access.SubForm.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.SubForm.BorderShade",
        "file_name": "Access.SubForm.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.SubForm.BorderStyle",
        "file_name": "Access.SubForm.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.BorderThemeColorIndex",
        "file_name": "Access.SubForm.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.SubForm.BorderTint",
        "file_name": "Access.SubForm.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.SubForm.BorderWidth",
        "file_name": "Access.SubForm.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.BottomPadding",
        "file_name": "Access.SubForm.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the subform and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.CanGrow",
        "file_name": "Access.SubForm.CanGrow.md",
        "kind": "property",
        "main": "Gets or sets whether the specified control automatically adjusts vertically to print or preview all the data that the control contains. Read/write **Boolean**. \n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.CanShrink",
        "file_name": "Access.SubForm.CanShrink.md",
        "kind": "property",
        "main": "Gets or sets whether the specified control automatically adjusts vertically to print or preview all the data that the section or control contains. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.Controls",
        "file_name": "Access.SubForm.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.SubForm.ControlType",
        "file_name": "Access.SubForm.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.DisplayWhen",
        "file_name": "Access.SubForm.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.Enabled",
        "file_name": "Access.SubForm.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.Enter",
        "file_name": "Access.SubForm.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.SubForm.EventProcPrefix",
        "file_name": "Access.SubForm.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.Exit",
        "file_name": "Access.SubForm.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.SubForm.FilterOnEmptyMaster",
        "file_name": "Access.SubForm.FilterOnEmptyMaster.md",
        "kind": "property",
        "main": "Gets or sets whether all records are displayed when the subform's master field is **Null**. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Null",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.Form",
        "file_name": "Access.SubForm.Form.md",
        "kind": "property",
        "main": "Use the **Form** property to refer to a form or to refer to the form associated with a subformcontrol. Read-only **Form**.\n",
        "Parameters": [],
        "Return_value": [
            "Form"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineColor",
        "file_name": "Access.SubForm.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified subform. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineShade",
        "file_name": "Access.SubForm.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.SubForm.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.SubForm.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineStyleBottom",
        "file_name": "Access.SubForm.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified subform. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineStyleLeft",
        "file_name": "Access.SubForm.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified subform. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineStyleRight",
        "file_name": "Access.SubForm.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified subform. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineStyleTop",
        "file_name": "Access.SubForm.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified subform. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineThemeColorIndex",
        "file_name": "Access.SubForm.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.SubForm.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.SubForm.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineTint",
        "file_name": "Access.SubForm.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.SubForm.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.SubForm.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineWidthBottom",
        "file_name": "Access.SubForm.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified subform. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineWidthLeft",
        "file_name": "Access.SubForm.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified subform. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineWidthRight",
        "file_name": "Access.SubForm.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified subform. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.GridlineWidthTop",
        "file_name": "Access.SubForm.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified subform. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.Height",
        "file_name": "Access.SubForm.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.HorizontalAnchor",
        "file_name": "Access.SubForm.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the subform is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.SubForm.InSelection",
        "file_name": "Access.SubForm.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.IsVisible",
        "file_name": "Access.SubForm.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.LabelAlign",
        "file_name": "Access.SubForm.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.LabelX",
        "file_name": "Access.SubForm.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.LabelY",
        "file_name": "Access.SubForm.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.Layout",
        "file_name": "Access.SubForm.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified subform. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.SubForm.LayoutID",
        "file_name": "Access.SubForm.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified subform. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.SubForm.Left",
        "file_name": "Access.SubForm.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.LeftPadding",
        "file_name": "Access.SubForm.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the subform and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.LinkChildFields",
        "file_name": "Access.SubForm.LinkChildFields.md",
        "kind": "property",
        "main": "Use the **LinkChildFields** property (along with the **LinkMasterFields** property) to specify how Microsoft Access links records in a form or report to records in a subform, subreport, or embedded object, such as a chart. If these properties are set, Access automatically updates the related record in the subform when you change to a new record in a main form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "LinkChildFields",
            "LinkMasterFields",
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.LinkMasterFields",
        "file_name": "Access.SubForm.LinkMasterFields.md",
        "kind": "property",
        "main": "Use the **LinkMasterFields** property (along with the **LinkChildFields** property) to specify how Microsoft Access links records in a form or report to records in a subform, subreport, or embedded object, such as a chart. If these properties are set, Access automatically updates the related record in the subform when you change to a new record in a main form. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "LinkMasterFields",
            "LinkChildFields",
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.Locked",
        "file_name": "Access.SubForm.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm",
        "Events": [
            "Enter",
            "Exit"
        ],
        "file_name": "Access.SubForm.md",
        "kind": "object",
        "main": "This object corresponds to a subform control. The subform control embeds a form in a form.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit"
        ],
        "Properties": [
            "AddColon",
            "Application",
            "AutoLabel",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "CanGrow",
            "CanShrink",
            "Controls",
            "ControlType",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FilterOnEmptyMaster",
            "Form",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HorizontalAnchor",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "LinkChildFields",
            "LinkMasterFields",
            "Locked",
            "Name",
            "OldBorderStyle",
            "OnEnter",
            "OnExit",
            "Parent",
            "Properties",
            "Report",
            "RightPadding",
            "Section",
            "SourceObject",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.SubForm.Move",
        "file_name": "Access.SubForm.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.SubForm.Name",
        "file_name": "Access.SubForm.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.OldBorderStyle",
        "file_name": "Access.SubForm.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.OnEnter",
        "file_name": "Access.SubForm.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.OnExit",
        "file_name": "Access.SubForm.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.Parent",
        "file_name": "Access.SubForm.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.SubForm.Properties",
        "file_name": "Access.SubForm.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.SubForm.Report",
        "file_name": "Access.SubForm.Report.md",
        "kind": "property",
        "main": "Use the **Report** property to refer to a report or to refer to the report associated with a subreport control. Read-only **Report**.\n",
        "Parameters": [],
        "Return_value": [
            "Report"
        ]
    },
    {
        "api_name": "Access.SubForm.Requery",
        "file_name": "Access.SubForm.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified subform by requerying the source of data for the subform.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.SubForm.RightPadding",
        "file_name": "Access.SubForm.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the subform and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.Section",
        "file_name": "Access.SubForm.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.SetFocus",
        "file_name": "Access.SubForm.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.SubForm.SizeToFit",
        "file_name": "Access.SubForm.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.SubForm.SourceObject",
        "file_name": "Access.SubForm.SourceObject.md",
        "kind": "property",
        "main": "Use the **SourceObject** property to identify the form or report that is the source of the subform or subreport on a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "SourceObject",
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.SpecialEffect",
        "file_name": "Access.SubForm.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.SubForm.StatusBarText",
        "file_name": "Access.SubForm.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.TabIndex",
        "file_name": "Access.SubForm.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.TabStop",
        "file_name": "Access.SubForm.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.Tag",
        "file_name": "Access.SubForm.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.SubForm.Top",
        "file_name": "Access.SubForm.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.TopPadding",
        "file_name": "Access.SubForm.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the subform and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.SubForm.VerticalAnchor",
        "file_name": "Access.SubForm.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified subform is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.SubForm.Visible",
        "file_name": "Access.SubForm.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.SubForm.Width",
        "file_name": "Access.SubForm.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.Application",
        "file_name": "Access.TabControl.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.TabControl.BackColor",
        "file_name": "Access.TabControl.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.BackShade",
        "file_name": "Access.TabControl.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.BackStyle",
        "file_name": "Access.TabControl.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.BackThemeColorIndex",
        "file_name": "Access.TabControl.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.BackTint",
        "file_name": "Access.TabControl.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.BorderColor",
        "file_name": "Access.TabControl.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.BorderShade",
        "file_name": "Access.TabControl.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.BorderStyle",
        "file_name": "Access.TabControl.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.BorderThemeColorIndex",
        "file_name": "Access.TabControl.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.BorderTint",
        "file_name": "Access.TabControl.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.BottomPadding",
        "file_name": "Access.TabControl.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.Change",
        "file_name": "Access.TabControl.Change.md",
        "kind": "event",
        "main": "The **Change** event occurs when you move from one page to another page.\n",
        "Parameters": [],
        "Return_value": [
            "Change"
        ]
    },
    {
        "api_name": "Access.TabControl.Click",
        "file_name": "Access.TabControl.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.TabControl.ControlType",
        "file_name": "Access.TabControl.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.DblClick",
        "file_name": "Access.TabControl.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.TabControl.DisplayWhen",
        "file_name": "Access.TabControl.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.Enabled",
        "file_name": "Access.TabControl.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.EventProcPrefix",
        "file_name": "Access.TabControl.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.FontBold",
        "file_name": "Access.TabControl.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.FontItalic",
        "file_name": "Access.TabControl.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.FontName",
        "file_name": "Access.TabControl.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.FontSize",
        "file_name": "Access.TabControl.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.FontUnderline",
        "file_name": "Access.TabControl.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.FontWeight",
        "file_name": "Access.TabControl.FontWeight.md",
        "kind": "property",
        "main": "Use the **FontWeight** property to specify the line width that Windows uses to display and print characters in a control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.ForeColor",
        "file_name": "Access.TabControl.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.ForeShade",
        "file_name": "Access.TabControl.ForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.ForeThemeColorIndex",
        "file_name": "Access.TabControl.ForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **ForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.ForeTint",
        "file_name": "Access.TabControl.ForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.Gradient",
        "file_name": "Access.TabControl.Gradient.md",
        "kind": "property",
        "main": "Gets or sets the gradient fill applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineColor",
        "file_name": "Access.TabControl.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineShade",
        "file_name": "Access.TabControl.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.TabControl.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.TabControl.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineStyleBottom",
        "file_name": "Access.TabControl.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineStyleLeft",
        "file_name": "Access.TabControl.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineStyleRight",
        "file_name": "Access.TabControl.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineStyleTop",
        "file_name": "Access.TabControl.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineThemeColorIndex",
        "file_name": "Access.TabControl.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.TabControl.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.TabControl.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineTint",
        "file_name": "Access.TabControl.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.TabControl.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.TabControl.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineWidthBottom",
        "file_name": "Access.TabControl.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineWidthLeft",
        "file_name": "Access.TabControl.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineWidthRight",
        "file_name": "Access.TabControl.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.GridlineWidthTop",
        "file_name": "Access.TabControl.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.Height",
        "file_name": "Access.TabControl.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.HelpContextId",
        "file_name": "Access.TabControl.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.HorizontalAnchor",
        "file_name": "Access.TabControl.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the tab control is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.TabControl.HoverColor",
        "file_name": "Access.TabControl.HoverColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on the control when the user rests the mouse cursor over it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.HoverForeColor",
        "file_name": "Access.TabControl.HoverForeColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the text displayed on the control when the user rests the mouse cursor over it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.HoverForeShade",
        "file_name": "Access.TabControl.HoverForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **HoverForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.HoverForeThemeColorIndex",
        "file_name": "Access.TabControl.HoverForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **HoverForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.HoverForeTint",
        "file_name": "Access.TabControl.HoverForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **HoverForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.HoverShade",
        "file_name": "Access.TabControl.HoverShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **HoverColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.HoverThemeColorIndex",
        "file_name": "Access.TabControl.HoverThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **HoverColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.HoverTint",
        "file_name": "Access.TabControl.HoverTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **HoverColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.InSelection",
        "file_name": "Access.TabControl.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.IsVisible",
        "file_name": "Access.TabControl.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.KeyDown",
        "file_name": "Access.TabControl.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.TabControl.KeyPress",
        "file_name": "Access.TabControl.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.TabControl.KeyUp",
        "file_name": "Access.TabControl.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.TabControl.Layout",
        "file_name": "Access.TabControl.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified control. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.TabControl.LayoutID",
        "file_name": "Access.TabControl.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified control. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.Left",
        "file_name": "Access.TabControl.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.LeftPadding",
        "file_name": "Access.TabControl.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl",
        "Events": [
            "Change",
            "Click",
            "DblClick",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.TabControl.md",
        "kind": "object",
        "main": "A tab control contains multiple pages on which you can place other controls, such as text boxes or option buttons. When a user chooses the corresponding tab, that page becomes active.\n",
        "Methods": [
            "Move",
            "SizeToFit"
        ],
        "Properties": [
            "Application",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BottomPadding",
            "ControlType",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "FontWeight",
            "ForeColor",
            "ForeShade",
            "ForeThemeColorIndex",
            "ForeTint",
            "Gradient",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "HoverColor",
            "HoverForeColor",
            "HoverForeShade",
            "HoverForeThemeColorIndex",
            "HoverForeTint",
            "HoverShade",
            "HoverThemeColorIndex",
            "HoverTint",
            "InSelection",
            "IsVisible",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "MultiRow",
            "Name",
            "OldValue",
            "OnChange",
            "OnClick",
            "OnDblClick",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "Pages",
            "Parent",
            "PressedColor",
            "PressedForeColor",
            "PressedForeShade",
            "PressedForeThemeColorIndex",
            "PressedForeTint",
            "PressedShade",
            "PressedThemeColorIndex",
            "PressedTint",
            "Properties",
            "RightPadding",
            "Section",
            "Shape",
            "ShortcutMenuBar",
            "StatusBarText",
            "Style",
            "TabFixedHeight",
            "TabFixedWidth",
            "TabIndex",
            "TabStop",
            "Tag",
            "ThemeFontIndex",
            "Top",
            "TopPadding",
            "UseTheme",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.TabControl.MouseDown",
        "file_name": "Access.TabControl.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.TabControl.MouseMove",
        "file_name": "Access.TabControl.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.TabControl.MouseUp",
        "file_name": "Access.TabControl.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.TabControl.Move",
        "file_name": "Access.TabControl.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.TabControl.MultiRow",
        "file_name": "Access.TabControl.MultiRow.md",
        "kind": "property",
        "main": "Use the **MultiRow** property to specify or determine whether a tab control can display more than one row of tabs. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "MultiRow",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.Name",
        "file_name": "Access.TabControl.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OldValue",
        "file_name": "Access.TabControl.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.TabControl.OnChange",
        "file_name": "Access.TabControl.OnChange.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Change** box in the Properties window of one of the objects in the **Applies To** list. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OnClick",
        "file_name": "Access.TabControl.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OnDblClick",
        "file_name": "Access.TabControl.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OnKeyDown",
        "file_name": "Access.TabControl.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OnKeyPress",
        "file_name": "Access.TabControl.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OnKeyUp",
        "file_name": "Access.TabControl.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OnMouseDown",
        "file_name": "Access.TabControl.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OnMouseMove",
        "file_name": "Access.TabControl.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.OnMouseUp",
        "file_name": "Access.TabControl.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.Pages",
        "file_name": "Access.TabControl.Pages.md",
        "kind": "property",
        "main": "Returns a **[Pages](Access.Pages.md)** collection that represents the pages in the specified **TabControl** object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Pages.md",
            "TabControl"
        ]
    },
    {
        "api_name": "Access.TabControl.Parent",
        "file_name": "Access.TabControl.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.TabControl.PressedColor",
        "file_name": "Access.TabControl.PressedColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on the control when the user chooses it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.PressedForeColor",
        "file_name": "Access.TabControl.PressedForeColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the text displayed on the control when the user chooses it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.PressedForeShade",
        "file_name": "Access.TabControl.PressedForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **PressedForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.PressedForeThemeColorIndex",
        "file_name": "Access.TabControl.PressedForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **PressedForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.PressedForeTint",
        "file_name": "Access.TabControl.PressedForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **PressedForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.PressedShade",
        "file_name": "Access.TabControl.PressedShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **PressedColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.PressedThemeColorIndex",
        "file_name": "Access.TabControl.PressedThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **PressedColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.PressedTint",
        "file_name": "Access.TabControl.PressedTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **PressedColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TabControl.Properties",
        "file_name": "Access.TabControl.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.TabControl.RightPadding",
        "file_name": "Access.TabControl.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.Section",
        "file_name": "Access.TabControl.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.Shape",
        "file_name": "Access.TabControl.Shape.md",
        "kind": "property",
        "main": "Returns or sets the shape of the specified tab control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.ShortcutMenuBar",
        "file_name": "Access.TabControl.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.SizeToFit",
        "file_name": "Access.TabControl.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.TabControl.StatusBarText",
        "file_name": "Access.TabControl.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.Style",
        "file_name": "Access.TabControl.Style.md",
        "kind": "property",
        "main": "Use the **Style** property to specify or determine the appearance of tabs on a tab control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Style",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TabControl.TabFixedHeight",
        "file_name": "Access.TabControl.TabFixedHeight.md",
        "kind": "property",
        "main": "Use the **TabFixedHeight** property to specify or determine the height of the tabs on a tab control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabFixedHeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.TabFixedWidth",
        "file_name": "Access.TabControl.TabFixedWidth.md",
        "kind": "property",
        "main": "Use the **TabFixedWidth** property to specify or determine the width of the tabs on a tab control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabFixedWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.TabIndex",
        "file_name": "Access.TabControl.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.TabStop",
        "file_name": "Access.TabControl.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.Tag",
        "file_name": "Access.TabControl.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TabControl.ThemeFontIndex",
        "file_name": "Access.TabControl.ThemeFontIndex.md",
        "kind": "property",
        "main": "Gets or sets the font index that represents a font in the applied theme associated with the **FontName** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Long"
        ]
    },
    {
        "api_name": "Access.TabControl.Top",
        "file_name": "Access.TabControl.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.TopPadding",
        "file_name": "Access.TabControl.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TabControl.UseTheme",
        "file_name": "Access.TabControl.UseTheme.md",
        "kind": "property",
        "main": "Gets or sets whether the specified object will utilize formatting styles defined in Office Document Themes. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.Value",
        "file_name": "Access.TabControl.Value.md",
        "kind": "property",
        "main": "Determines or specifies the selected **[Page](Access.Page.md)** object. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Page.md",
            "Variant"
        ]
    },
    {
        "api_name": "Access.TabControl.VerticalAnchor",
        "file_name": "Access.TabControl.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified tab control is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.TabControl.Visible",
        "file_name": "Access.TabControl.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TabControl.Width",
        "file_name": "Access.TabControl.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TempVar",
        "Events": [],
        "file_name": "Access.TempVar.md",
        "kind": "object",
        "main": "Represents a variable that can be used in Visual Basic for Applications (VBA) code or from a macro. \n",
        "Methods": [],
        "Properties": [
            "Name",
            "Value"
        ]
    },
    {
        "api_name": "Access.TempVar.Name",
        "file_name": "Access.TempVar.Name.md",
        "kind": "property",
        "main": "Gets the name of the specified **TempVar** object. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "TempVar",
            "String"
        ]
    },
    {
        "api_name": "Access.TempVar.Value",
        "file_name": "Access.TempVar.Value.md",
        "kind": "property",
        "main": "Gets or sets the value of the specified **TempVar** object. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "TempVar",
            "Variant"
        ]
    },
    {
        "api_name": "Access.TempVars.Add",
        "file_name": "Access.TempVars.Add.md",
        "kind": "method",
        "main": "Adds a variable to the **[TempVars](Access.TempVars.md)** collection.\n",
        "Parameters": [
            "Name",
            "Value"
        ],
        "Return_value": [
            "Access.TempVars.md"
        ]
    },
    {
        "api_name": "Access.TempVars.Application",
        "file_name": "Access.TempVars.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.TempVars.Count",
        "file_name": "Access.TempVars.Count.md",
        "kind": "property",
        "main": "Gets the number of **[TempVar](Access.TempVar.md)** objects in the **TempVars** collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.TempVar.md",
            "TempVars",
            "Long"
        ]
    },
    {
        "api_name": "Access.TempVars.Item",
        "file_name": "Access.TempVars.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **[TempVar](Access.TempVar.md)**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Access.TempVar.md"
        ]
    },
    {
        "api_name": "Access.TempVars",
        "Events": [],
        "file_name": "Access.TempVars.md",
        "kind": "object",
        "main": "Represents the collection of **[TempVar](Access.TempVar.md)** objects.\n",
        "Methods": [
            "Add",
            "Remove",
            "RemoveAll"
        ],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.TempVars.Parent",
        "file_name": "Access.TempVars.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.TempVars.Remove",
        "file_name": "Access.TempVars.Remove.md",
        "kind": "method",
        "main": "Removes the specified **[TempVar](Access.TempVar.md)** object from the **TempVars** collection.\n",
        "Parameters": [
            "var"
        ],
        "Return_value": [
            "Access.TempVar.md",
            "TempVars"
        ]
    },
    {
        "api_name": "Access.TempVars.RemoveAll",
        "file_name": "Access.TempVars.RemoveAll.md",
        "kind": "method",
        "main": "Removes all of the **[TempVar](Access.TempVar.md)** objects from the **TempVars** collection.\n",
        "Parameters": [],
        "Return_value": [
            "Access.TempVar.md",
            "TempVars"
        ]
    },
    {
        "api_name": "Access.TextBox.AddColon",
        "file_name": "Access.TextBox.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.AfterUpdate",
        "file_name": "Access.TextBox.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.TextBox.AfterUpdate",
        "file_name": "Access.TextBox.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.textbox.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.AllowAutoCorrect",
        "file_name": "Access.TextBox.AllowAutoCorrect.md",
        "kind": "property",
        "main": "Use the **AllowAutoCorrect** property to specify whether the specified control will automatically correct entries made by the user. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AllowAutoCorrect",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.Application",
        "file_name": "Access.TextBox.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.TextBox.AsianLineBreak",
        "file_name": "Access.TextBox.AsianLineBreak.md",
        "kind": "property",
        "main": "Returns or sets a **Boolean** indicating whether line breaks in text boxes follow rules governing East Asian languages. **True** to control line breaks based on East Asian language rules. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean",
            "True"
        ]
    },
    {
        "api_name": "Access.TextBox.AutoLabel",
        "file_name": "Access.TextBox.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.AutoTab",
        "file_name": "Access.TextBox.AutoTab.md",
        "kind": "property",
        "main": "Use the **AutoTab** property to specify whether an automatic tab occurs when the last character permitted by a text box control's input mask is entered. An automatic tab moves the focus to the next control in the form's tab order. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "AutoTab",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.BackColor",
        "file_name": "Access.TextBox.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.BackShade",
        "file_name": "Access.TextBox.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TextBox.BackStyle",
        "file_name": "Access.TextBox.BackStyle.md",
        "kind": "property",
        "main": "Use the **BackStyle** property to specify whether a control will be transparent. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BackStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.BackThemeColorIndex",
        "file_name": "Access.TextBox.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.BackTint",
        "file_name": "Access.TextBox.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TextBox.BeforeUpdate",
        "file_name": "Access.TextBox.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.TextBox.BeforeUpdate",
        "file_name": "Access.TextBox.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.TextBox.beforeupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.BorderColor",
        "file_name": "Access.TextBox.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.BorderShade",
        "file_name": "Access.TextBox.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TextBox.BorderStyle",
        "file_name": "Access.TextBox.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.BorderThemeColorIndex",
        "file_name": "Access.TextBox.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.BorderTint",
        "file_name": "Access.TextBox.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TextBox.BorderWidth",
        "file_name": "Access.TextBox.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.BottomMargin",
        "file_name": "Access.TextBox.BottomMargin.md",
        "kind": "property",
        "main": "Along with the **LeftMargin**, **RightMargin**, and **TopMargin** properties, specifies the location of information displayed within a text box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LeftMargin",
            "RightMargin",
            "TopMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.BottomPadding",
        "file_name": "Access.TextBox.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the text box and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.CanGrow",
        "file_name": "Access.TextBox.CanGrow.md",
        "kind": "property",
        "main": "Gets or sets whether the specified control automatically adjusts vertically to print or preview all the data that the control contains. Read/write **Boolean**. \n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.CanShrink",
        "file_name": "Access.TextBox.CanShrink.md",
        "kind": "property",
        "main": "Gets or sets whether the specified control automatically adjusts vertically to print or preview all the data that the section or control contains. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.Change",
        "file_name": "Access.TextBox.Change.md",
        "kind": "event",
        "main": "The **Change** event occurs when the contents of the specified control change.\n",
        "Parameters": [],
        "Return_value": [
            "Change"
        ]
    },
    {
        "api_name": "Access.TextBox.Click",
        "file_name": "Access.TextBox.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.TextBox.ColumnHidden",
        "file_name": "Access.TextBox.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.ColumnOrder",
        "file_name": "Access.TextBox.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.ColumnWidth",
        "file_name": "Access.TextBox.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.Controls",
        "file_name": "Access.TextBox.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.TextBox.ControlSource",
        "file_name": "Access.TextBox.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.ControlTipText",
        "file_name": "Access.TextBox.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.ControlType",
        "file_name": "Access.TextBox.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.DblClick",
        "file_name": "Access.TextBox.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.TextBox.DecimalPlaces",
        "file_name": "Access.TextBox.DecimalPlaces.md",
        "kind": "property",
        "main": "Use the **DecimalPlaces** property to specify the number of decimal places that Microsoft Access uses to display numbers. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DecimalPlaces",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.DefaultValue",
        "file_name": "Access.TextBox.DefaultValue.md",
        "kind": "property",
        "main": "Specifies a value that is automatically entered in a field when a new record is created. For example, in an **Addresses** table, you can set the default value for the **City** field to New York. When users add a record to the table, they can either accept this value or enter the name of a different city. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Addresses",
            "City",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.Dirty",
        "file_name": "Access.TextBox.Dirty.md",
        "kind": "event",
        "main": "The **Dirty** event occurs when the contents of the specified control changes.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Dirty"
        ]
    },
    {
        "api_name": "Access.TextBox.DisplayAsHyperlink",
        "file_name": "Access.TextBox.DisplayAsHyperlink.md",
        "kind": "property",
        "main": "Gets or sets an **[AcDisplayAsHyperlink](Access.AcDisplayAsHyperlink.md)** constant that specifies whether to display the contents of the specified text box as a hyperlink. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcDisplayAsHyperlink.md"
        ]
    },
    {
        "api_name": "Access.TextBox.DisplayWhen",
        "file_name": "Access.TextBox.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.Enabled",
        "file_name": "Access.TextBox.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.Enter",
        "file_name": "Access.TextBox.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.TextBox.EnterKeyBehavior",
        "file_name": "Access.TextBox.EnterKeyBehavior.md",
        "kind": "property",
        "main": "Use the **EnterKeyBehavior** property to specify what happens when you press Enter in a text box control in Form view or Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "EnterKeyBehavior",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.EventProcPrefix",
        "file_name": "Access.TextBox.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.Exit",
        "file_name": "Access.TextBox.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.TextBox.FilterLookup",
        "file_name": "Access.TextBox.FilterLookup.md",
        "kind": "property",
        "main": "Use the **FilterLookup** property to specify whether values appear in a bound text box control when using the Filter By Form or Server Filter By Form window. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "FilterLookup",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.FontBold",
        "file_name": "Access.TextBox.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.FontItalic",
        "file_name": "Access.TextBox.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.FontName",
        "file_name": "Access.TextBox.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.FontSize",
        "file_name": "Access.TextBox.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.FontUnderline",
        "file_name": "Access.TextBox.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.FontWeight",
        "file_name": "Access.TextBox.FontWeight.md",
        "kind": "property",
        "main": "Use the **FontWeight** property to specify the line width that Windows uses to display and print characters in a control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.ForeColor",
        "file_name": "Access.TextBox.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.ForeShade",
        "file_name": "Access.TextBox.ForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TextBox.ForeThemeColorIndex",
        "file_name": "Access.TextBox.ForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **ForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.ForeTint",
        "file_name": "Access.TextBox.ForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.TextBox.Format",
        "file_name": "Access.TextBox.Format.md",
        "kind": "property",
        "main": "Use the **Format** property to customize the way numbers, dates, times, and text are displayed and printed. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Format",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.FormatConditions",
        "file_name": "Access.TextBox.FormatConditions.md",
        "kind": "property",
        "main": "Use the **FormatConditions** property to return a read-only reference to the **[FormatConditions](Access.FormatConditions.md)** collection and its related properties.\n",
        "Parameters": [],
        "Return_value": [
            "FormatConditions",
            "Access.FormatConditions.md"
        ]
    },
    {
        "api_name": "Access.TextBox.FuriganaControl",
        "file_name": "Access.TextBox.FuriganaControl.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.TextBox.GotFocus",
        "file_name": "Access.TextBox.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineColor",
        "file_name": "Access.TextBox.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified text box. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineShade",
        "file_name": "Access.TextBox.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.TextBox.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.TextBox.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineStyleBottom",
        "file_name": "Access.TextBox.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified text box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineStyleLeft",
        "file_name": "Access.TextBox.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified text box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineStyleRight",
        "file_name": "Access.TextBox.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified text box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineStyleTop",
        "file_name": "Access.TextBox.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified text box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineThemeColorIndex",
        "file_name": "Access.TextBox.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.TextBox.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.TextBox.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineTint",
        "file_name": "Access.TextBox.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.TextBox.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.TextBox.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineWidthBottom",
        "file_name": "Access.TextBox.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified text box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineWidthLeft",
        "file_name": "Access.TextBox.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified text box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineWidthRight",
        "file_name": "Access.TextBox.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified text box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.GridlineWidthTop",
        "file_name": "Access.TextBox.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified text box. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.Height",
        "file_name": "Access.TextBox.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.HelpContextId",
        "file_name": "Access.TextBox.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.HideDuplicates",
        "file_name": "Access.TextBox.HideDuplicates.md",
        "kind": "property",
        "main": "Use the **HideDuplicates** property to hide a control on a report when its value is the same as in the preceding record. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HideDuplicates",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.HorizontalAnchor",
        "file_name": "Access.TextBox.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the text box is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.TextBox.Hyperlink",
        "file_name": "Access.TextBox.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.TextBox.IMEHold",
        "file_name": "Access.TextBox.IMEHold.md",
        "kind": "property",
        "main": "Use the **IMEHold/Hold KanjiConversionMode** property to show whether the Kanji Conversion Mode is maintained when the control loses the focus. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.IMEMode",
        "file_name": "Access.TextBox.IMEMode.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.TextBox.IMESentenceMode",
        "file_name": "Access.TextBox.IMESentenceMode.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.TextBox.InputMask",
        "file_name": "Access.TextBox.InputMask.md",
        "kind": "property",
        "main": "Use the **InputMask** property to make data entry easier and to control the values that users can enter in a text box control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "InputMask",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.InSelection",
        "file_name": "Access.TextBox.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.IsHyperlink",
        "file_name": "Access.TextBox.IsHyperlink.md",
        "kind": "property",
        "main": "Use the **IsHyperlink** property to specify or determine if the data contained in a text box is a hyperlink. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsHyperlink",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.IsVisible",
        "file_name": "Access.TextBox.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.KeyboardLanguage",
        "file_name": "Access.TextBox.KeyboardLanguage.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.TextBox.KeyDown",
        "file_name": "Access.TextBox.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.TextBox.KeyPress",
        "file_name": "Access.TextBox.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.TextBox.KeyUp",
        "file_name": "Access.TextBox.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.TextBox.LabelAlign",
        "file_name": "Access.TextBox.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.LabelX",
        "file_name": "Access.TextBox.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.LabelY",
        "file_name": "Access.TextBox.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.Layout",
        "file_name": "Access.TextBox.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified text box. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.TextBox.LayoutID",
        "file_name": "Access.TextBox.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified text box. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.Left",
        "file_name": "Access.TextBox.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.LeftMargin",
        "file_name": "Access.TextBox.LeftMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **RightMargin**, and **BottomMargin** properties, specifies the location of information displayed within a text box control. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "RightMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.LeftPadding",
        "file_name": "Access.TextBox.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the text box and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.LineSpacing",
        "file_name": "Access.TextBox.LineSpacing.md",
        "kind": "property",
        "main": "Use the **LineSpacing** property to specify or determine the location of information displayed within a label or text box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LineSpacing",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.Locked",
        "file_name": "Access.TextBox.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.LostFocus",
        "file_name": "Access.TextBox.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.TextBox",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Change",
            "Click",
            "DblClick",
            "Dirty",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "Undo"
        ],
        "file_name": "Access.TextBox.md",
        "kind": "object",
        "main": "This object represents a text box control on a form or report. Text boxes are used to display data from a record source, display the results of a calculation, or accept input from a user.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "AddColon",
            "AfterUpdate",
            "AllowAutoCorrect",
            "Application",
            "AsianLineBreak",
            "AutoLabel",
            "AutoTab",
            "BackColor",
            "BackShade",
            "BackStyle",
            "BackThemeColorIndex",
            "BackTint",
            "BeforeUpdate",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomMargin",
            "BottomPadding",
            "CanGrow",
            "CanShrink",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DecimalPlaces",
            "DefaultValue",
            "DisplayAsHyperlink",
            "DisplayWhen",
            "Enabled",
            "EnterKeyBehavior",
            "EventProcPrefix",
            "FilterLookup",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "FontWeight",
            "ForeColor",
            "ForeShade",
            "ForeThemeColorIndex",
            "ForeTint",
            "Format",
            "FormatConditions",
            "FuriganaControl",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HideDuplicates",
            "HorizontalAnchor",
            "Hyperlink",
            "IMEHold",
            "IMEMode",
            "IMESentenceMode",
            "InputMask",
            "InSelection",
            "IsHyperlink",
            "IsVisible",
            "KeyboardLanguage",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftMargin",
            "LeftPadding",
            "LineSpacing",
            "Locked",
            "Name",
            "NumeralShapes",
            "OldBorderStyle",
            "OldValue",
            "OnChange",
            "OnClick",
            "OnDblClick",
            "OnDirty",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnUndo",
            "Parent",
            "PostalAddress",
            "Properties",
            "ReadingOrder",
            "RightMargin",
            "RightPadding",
            "RunningSum",
            "ScrollBarAlign",
            "ScrollBars",
            "Section",
            "SelLength",
            "SelStart",
            "SelText",
            "ShortcutMenuBar",
            "ShowDatePicker",
            "SmartTags",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Text",
            "TextAlign",
            "TextFormat",
            "ThemeFontIndex",
            "Top",
            "TopMargin",
            "TopPadding",
            "ValidationRule",
            "ValidationText",
            "Value",
            "Vertical",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.TextBox.MouseDown",
        "file_name": "Access.TextBox.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.TextBox.MouseMove",
        "file_name": "Access.TextBox.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.TextBox.MouseUp",
        "file_name": "Access.TextBox.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.TextBox.Move",
        "file_name": "Access.TextBox.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.TextBox.Name",
        "file_name": "Access.TextBox.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.NumeralShapes",
        "file_name": "Access.TextBox.NumeralShapes.md",
        "kind": "property",
        "main": "",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.TextBox.OldBorderStyle",
        "file_name": "Access.TextBox.OldBorderStyle.md",
        "kind": "property",
        "main": "Use this property to set or return the unedited value of the **BorderStyle** property for a form or control. This property is useful if you need to revert to an unedited or preferred border style. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderStyle",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.OldValue",
        "file_name": "Access.TextBox.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.TextBox.OnChange",
        "file_name": "Access.TextBox.OnChange.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Change** box in the Properties window of one of the objects in the **Applies To** list. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnClick",
        "file_name": "Access.TextBox.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnDblClick",
        "file_name": "Access.TextBox.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnDirty",
        "file_name": "Access.TextBox.OnDirty.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dirty** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnEnter",
        "file_name": "Access.TextBox.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnExit",
        "file_name": "Access.TextBox.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnGotFocus",
        "file_name": "Access.TextBox.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnKeyDown",
        "file_name": "Access.TextBox.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnKeyPress",
        "file_name": "Access.TextBox.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnKeyUp",
        "file_name": "Access.TextBox.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnLostFocus",
        "file_name": "Access.TextBox.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnMouseDown",
        "file_name": "Access.TextBox.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnMouseMove",
        "file_name": "Access.TextBox.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnMouseUp",
        "file_name": "Access.TextBox.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.OnUndo",
        "file_name": "Access.TextBox.OnUndo.md",
        "kind": "property",
        "main": "Returns or sets a **String** indicating which macro, event procedure, or user-defined function runs when the **Undo** event occurs. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "String",
            "Undo"
        ]
    },
    {
        "api_name": "Access.TextBox.Parent",
        "file_name": "Access.TextBox.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.TextBox.PostalAddress",
        "file_name": "Access.TextBox.PostalAddress.md",
        "kind": "property",
        "main": "Use the **PostalAddress** property to specify or determine the postal code and the Customer Barcode data corresponding to the address information displayed in a specified field or text box. The PostalAddress Property Wizard enables the setting of these properties. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "PostalAddress",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.Properties",
        "file_name": "Access.TextBox.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.TextBox.ReadingOrder",
        "file_name": "Access.TextBox.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.Requery",
        "file_name": "Access.TextBox.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.TextBox.RightMargin",
        "file_name": "Access.TextBox.RightMargin.md",
        "kind": "property",
        "main": "Along with the **TopMargin**, **LeftMargin**, and **BottomMargin** properties, specifies the location of information displayed within a text box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TopMargin",
            "LeftMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.RightPadding",
        "file_name": "Access.TextBox.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the text box and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.RunningSum",
        "file_name": "Access.TextBox.RunningSum.md",
        "kind": "property",
        "main": "Use the **RunningSum** property to calculate record-by-record or group-by-group totals in a report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "RunningSum",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.ScrollBarAlign",
        "file_name": "Access.TextBox.ScrollBarAlign.md",
        "kind": "property",
        "main": "Use the **ScrollBarAlign** property to specify or determine the alignment of a vertical scroll bar. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ScrollBarAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.ScrollBars",
        "file_name": "Access.TextBox.ScrollBars.md",
        "kind": "property",
        "main": "Use the **ScrollBars** property to specify whether scroll bars appear on a text box control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ScrollBars",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.Section",
        "file_name": "Access.TextBox.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.SelLength",
        "file_name": "Access.TextBox.SelLength.md",
        "kind": "property",
        "main": "The **SelLength** property specifies or determines the number of characters selected in a text box. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "SelLength",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.SelStart",
        "file_name": "Access.TextBox.SelStart.md",
        "kind": "property",
        "main": "The **SelStart** property specifies or determines the starting point of the selected text or the position of the insertion point if no text is selected. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "SelStart",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.SelText",
        "file_name": "Access.TextBox.SelText.md",
        "kind": "property",
        "main": "The **SelText** property returns a string containing the selected text. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "SelText",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.SetFocus",
        "file_name": "Access.TextBox.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.TextBox.ShortcutMenuBar",
        "file_name": "Access.TextBox.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.ShowDatePicker",
        "file_name": "Access.TextBox.ShowDatePicker.md",
        "kind": "property",
        "main": "Gets or sets whether the date picker control is displayed for the specified text box. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.SizeToFit",
        "file_name": "Access.TextBox.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.TextBox.SmartTags",
        "file_name": "Access.TextBox.SmartTags.md",
        "kind": "property",
        "main": "Returns a **[SmartTags](Access.SmartTags.md)** collection that represents the collection of smart tags that have been added to a control. \n",
        "Parameters": [],
        "Return_value": [
            "Access.SmartTags.md"
        ]
    },
    {
        "api_name": "Access.TextBox.SpecialEffect",
        "file_name": "Access.TextBox.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.StatusBarText",
        "file_name": "Access.TextBox.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.TabIndex",
        "file_name": "Access.TextBox.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.TabStop",
        "file_name": "Access.TextBox.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.Tag",
        "file_name": "Access.TextBox.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.Text",
        "file_name": "Access.TextBox.Text.md",
        "kind": "property",
        "main": "Use the **Text** property to set or return the text **Value** contained in a text box. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Text",
            "Value",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.TextAlign",
        "file_name": "Access.TextBox.TextAlign.md",
        "kind": "property",
        "main": "The **TextAlign** property specifies the text alignment in new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "TextAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.TextBox.TextFormat",
        "file_name": "Access.TextBox.TextFormat.md",
        "kind": "property",
        "main": "Gets or sets whether rich text is displayed in the specified text box. Read/write **[AcTextFormat](Access.AcTextFormat.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcTextFormat.md"
        ]
    },
    {
        "api_name": "Access.TextBox.ThemeFontIndex",
        "file_name": "Access.TextBox.ThemeFontIndex.md",
        "kind": "property",
        "main": "Gets or sets the font index that represents a font in the applied theme associated with the **FontName** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Long"
        ]
    },
    {
        "api_name": "Access.TextBox.Top",
        "file_name": "Access.TextBox.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.TopMargin",
        "file_name": "Access.TextBox.TopMargin.md",
        "kind": "property",
        "main": "Along with the **LeftMargin**, **RightMargin**, and **BottomMargin** properties, specifies the location of information displayed within a text box control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LeftMargin",
            "RightMargin",
            "BottomMargin",
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.TopPadding",
        "file_name": "Access.TextBox.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the text box and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.TextBox.Undo",
        "file_name": "Access.TextBox.Undo(even).md",
        "kind": "event",
        "main": "Occurs when the user undoes a change.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.TextBox.Undo",
        "file_name": "Access.TextBox.Undo(method).md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.TextBox.ValidationRule",
        "file_name": "Access.TextBox.ValidationRule.md",
        "kind": "property",
        "main": "Use the **ValidationRule** property to specify requirements for data entered into a record, field, or control. When data is entered that violates the **ValidationRule** setting, you can use the **ValidationText** property to specify the message to be displayed to the user. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationRule",
            "ValidationText",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.ValidationText",
        "file_name": "Access.TextBox.ValidationText.md",
        "kind": "property",
        "main": "Use the **ValidationText** property to specify a message to be displayed to the user when data is entered that violates a **ValidationRule** setting for a record, field, or control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationText",
            "ValidationRule",
            "String"
        ]
    },
    {
        "api_name": "Access.TextBox.Value",
        "file_name": "Access.TextBox.Value.md",
        "kind": "property",
        "main": "Determines or specifies the text in the text box. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.TextBox.Vertical",
        "file_name": "Access.TextBox.Vertical.md",
        "kind": "property",
        "main": "Use the **Vertical** property to set a form control for vertical display and editing, or to set a report control for vertical display and printing. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Vertical",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.VerticalAnchor",
        "file_name": "Access.TextBox.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified text box is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.TextBox.Visible",
        "file_name": "Access.TextBox.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.TextBox.Width",
        "file_name": "Access.TextBox.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.AddColon",
        "file_name": "Access.ToggleButton.AddColon.md",
        "kind": "property",
        "main": "Specifies whether a colon follows the text in labels for new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.AfterUpdate",
        "file_name": "Access.ToggleButton.AfterUpdate-event.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.ToggleButton.AfterUpdate",
        "file_name": "Access.ToggleButton.AfterUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[AfterUpdate](access.togglebutton.afterupdate-event.md)** event occurs. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Application",
        "file_name": "Access.ToggleButton.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.ToggleButton.AutoLabel",
        "file_name": "Access.ToggleButton.AutoLabel.md",
        "kind": "property",
        "main": "Specifies whether labels are automatically created and attached to new controls. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BackColor",
        "file_name": "Access.ToggleButton.BackColor.md",
        "kind": "property",
        "main": "Gets or sets the interior color of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BackShade",
        "file_name": "Access.ToggleButton.BackShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BackThemeColorIndex",
        "file_name": "Access.ToggleButton.BackThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BackColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BackTint",
        "file_name": "Access.ToggleButton.BackTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BackColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BackColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BeforeUpdate",
        "file_name": "Access.ToggleButton.BeforeUpdate-event.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BeforeUpdate",
        "file_name": "Access.ToggleButton.BeforeUpdate-property.md",
        "kind": "property",
        "main": "Returns or sets which macro, event procedure, or user-defined function runs when the **[BeforeUpdate](access.togglebutton.beforeupdate-event.md)** event occurs. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Bevel",
        "file_name": "Access.ToggleButton.Bevel.md",
        "kind": "property",
        "main": "Gets or sets the bevel effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BorderColor",
        "file_name": "Access.ToggleButton.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BorderShade",
        "file_name": "Access.ToggleButton.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BorderStyle",
        "file_name": "Access.ToggleButton.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BorderThemeColorIndex",
        "file_name": "Access.ToggleButton.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BorderTint",
        "file_name": "Access.ToggleButton.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BorderWidth",
        "file_name": "Access.ToggleButton.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.BottomPadding",
        "file_name": "Access.ToggleButton.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the toggle button and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Caption",
        "file_name": "Access.ToggleButton.Caption.md",
        "kind": "property",
        "main": "Gets or sets the text that appears in the control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Click",
        "file_name": "Access.ToggleButton.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ColumnHidden",
        "file_name": "Access.ToggleButton.ColumnHidden.md",
        "kind": "property",
        "main": "Use the **ColumnHidden** property to show or hide a specified column in Datasheet view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnHidden",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ColumnOrder",
        "file_name": "Access.ToggleButton.ColumnOrder.md",
        "kind": "property",
        "main": "Use the **ColumnOrder** property to specify the order of the columns in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnOrder",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ColumnWidth",
        "file_name": "Access.ToggleButton.ColumnWidth.md",
        "kind": "property",
        "main": "Use the **ColumnWidth** property to specify the width of a column in Datasheet view. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "ColumnWidth",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Controls",
        "file_name": "Access.ToggleButton.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ControlSource",
        "file_name": "Access.ToggleButton.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ControlTipText",
        "file_name": "Access.ToggleButton.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ControlType",
        "file_name": "Access.ToggleButton.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.DblClick",
        "file_name": "Access.ToggleButton.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.ToggleButton.DefaultValue",
        "file_name": "Access.ToggleButton.DefaultValue.md",
        "kind": "property",
        "main": "Specifies a value that is automatically entered in a field when a new record is created. For example, in an **Addresses** table, you can set the default value for the **City** field to New York. When users add a record to the table, they can either accept this value or enter the name of a different city. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Addresses",
            "City",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.DisplayWhen",
        "file_name": "Access.ToggleButton.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Enabled",
        "file_name": "Access.ToggleButton.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Enter",
        "file_name": "Access.ToggleButton.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.ToggleButton.EventProcPrefix",
        "file_name": "Access.ToggleButton.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Exit",
        "file_name": "Access.ToggleButton.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.ToggleButton.FontBold",
        "file_name": "Access.ToggleButton.FontBold.md",
        "kind": "property",
        "main": "Use the **FontBold** property to specify whether a font appears in a bold style in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontBold",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.FontItalic",
        "file_name": "Access.ToggleButton.FontItalic.md",
        "kind": "property",
        "main": "Use the **FontItalic** property to specify whether text is italic in the following situations:\n- When displaying or printing controls on forms and reports.    \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontItalic",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.FontName",
        "file_name": "Access.ToggleButton.FontName.md",
        "kind": "property",
        "main": "Use the **FontName** property to specify the font for text in the following situations:\n- When displaying or printing controls on forms and reports.  \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Access.Report.Print.md",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.FontSize",
        "file_name": "Access.ToggleButton.FontSize.md",
        "kind": "property",
        "main": "Use the **FontSize** property to specify the point size for text in the following situations:\n- When displaying or printing controls on forms and reports.   \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontSize",
            "Access.Report.Print.md",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.FontUnderline",
        "file_name": "Access.ToggleButton.FontUnderline.md",
        "kind": "property",
        "main": "Use the **FontUnderline** property to specify whether text is underlined in the following situations:\n- When displaying or printing controls on forms and reports. \n- When using the **[Print](Access.Report.Print.md)** method on a report.\n    \nRead/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "FontUnderline",
            "Access.Report.Print.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.FontWeight",
        "file_name": "Access.ToggleButton.FontWeight.md",
        "kind": "property",
        "main": "Use the **FontWeight** property to specify the line width that Windows uses to display and print characters in a control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "FontWeight",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ForeColor",
        "file_name": "Access.ToggleButton.ForeColor.md",
        "kind": "property",
        "main": "Use the **ForeColor** property to specify the color for text in a control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ForeShade",
        "file_name": "Access.ToggleButton.ForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ForeThemeColorIndex",
        "file_name": "Access.ToggleButton.ForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **ForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ForeTint",
        "file_name": "Access.ToggleButton.ForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **ForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "ForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Glow",
        "file_name": "Access.ToggleButton.Glow.md",
        "kind": "property",
        "main": "Gets or sets the glow effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GotFocus",
        "file_name": "Access.ToggleButton.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Gradient",
        "file_name": "Access.ToggleButton.Gradient.md",
        "kind": "property",
        "main": "Gets or sets the gradient fill applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineColor",
        "file_name": "Access.ToggleButton.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified toggle button. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineShade",
        "file_name": "Access.ToggleButton.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.ToggleButton.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ToggleButton.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineStyleBottom",
        "file_name": "Access.ToggleButton.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified toggle button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineStyleLeft",
        "file_name": "Access.ToggleButton.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified toggle button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineStyleRight",
        "file_name": "Access.ToggleButton.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified toggle button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineStyleTop",
        "file_name": "Access.ToggleButton.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified toggle button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineThemeColorIndex",
        "file_name": "Access.ToggleButton.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.ToggleButton.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ToggleButton.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineTint",
        "file_name": "Access.ToggleButton.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.ToggleButton.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.ToggleButton.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineWidthBottom",
        "file_name": "Access.ToggleButton.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified toggle button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineWidthLeft",
        "file_name": "Access.ToggleButton.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified toggle button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineWidthRight",
        "file_name": "Access.ToggleButton.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified toggle button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.GridlineWidthTop",
        "file_name": "Access.ToggleButton.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified toggle button. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Height",
        "file_name": "Access.ToggleButton.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HelpContextId",
        "file_name": "Access.ToggleButton.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HideDuplicates",
        "file_name": "Access.ToggleButton.HideDuplicates.md",
        "kind": "property",
        "main": "Use the **HideDuplicates** property to hide a control on a report when its value is the same as in the preceding record. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "HideDuplicates",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HorizontalAnchor",
        "file_name": "Access.ToggleButton.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the toggle button is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HoverColor",
        "file_name": "Access.ToggleButton.HoverColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on the control when the user rests the mouse cursor over it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HoverForeColor",
        "file_name": "Access.ToggleButton.HoverForeColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the text displayed on the control when the user rests the mouse cursor over it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HoverForeShade",
        "file_name": "Access.ToggleButton.HoverForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **HoverForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HoverForeThemeColorIndex",
        "file_name": "Access.ToggleButton.HoverForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **HoverForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HoverForeTint",
        "file_name": "Access.ToggleButton.HoverForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **HoverForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HoverShade",
        "file_name": "Access.ToggleButton.HoverShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **HoverColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HoverThemeColorIndex",
        "file_name": "Access.ToggleButton.HoverThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **HoverColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.HoverTint",
        "file_name": "Access.ToggleButton.HoverTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **HoverColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "HoverColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.InSelection",
        "file_name": "Access.ToggleButton.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.IsVisible",
        "file_name": "Access.ToggleButton.IsVisible.md",
        "kind": "property",
        "main": "Use the **IsVisible** property to determine whether a control on a report is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "IsVisible",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.KeyDown",
        "file_name": "Access.ToggleButton.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ToggleButton.KeyPress",
        "file_name": "Access.ToggleButton.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ToggleButton.KeyUp",
        "file_name": "Access.ToggleButton.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.ToggleButton.LabelAlign",
        "file_name": "Access.ToggleButton.LabelAlign.md",
        "kind": "property",
        "main": "The **LabelAlign** property specifies the text alignment within attached labels on new controls. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelAlign",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.LabelX",
        "file_name": "Access.ToggleButton.LabelX.md",
        "kind": "property",
        "main": "The **LabelX** property (along with the **LabelY** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelX",
            "LabelY",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.LabelY",
        "file_name": "Access.ToggleButton.LabelY.md",
        "kind": "property",
        "main": "The **LabelY** property (along with the **LabelX** property) specifies the placement of the label for a new control. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "LabelY",
            "LabelX",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Layout",
        "file_name": "Access.ToggleButton.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified toggle button. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.ToggleButton.LayoutID",
        "file_name": "Access.ToggleButton.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified toggle button. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Left",
        "file_name": "Access.ToggleButton.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.LeftPadding",
        "file_name": "Access.ToggleButton.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the toggle button and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Locked",
        "file_name": "Access.ToggleButton.Locked.md",
        "kind": "property",
        "main": "The **Locked** property specifies whether you can edit data in a control in Form view. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Locked",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.LostFocus",
        "file_name": "Access.ToggleButton.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.ToggleButton",
        "Events": [
            "AfterUpdate",
            "BeforeUpdate",
            "Click",
            "DblClick",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp"
        ],
        "file_name": "Access.ToggleButton.md",
        "kind": "object",
        "main": "This object corresponds to a toggle button. A toggle button on a form is a stand-alone control used to display a Yes/No value from an underlying record source.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "AddColon",
            "AfterUpdate",
            "Application",
            "AutoLabel",
            "BackColor",
            "BackShade",
            "BackThemeColorIndex",
            "BackTint",
            "BeforeUpdate",
            "Bevel",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Caption",
            "ColumnHidden",
            "ColumnOrder",
            "ColumnWidth",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DefaultValue",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "FontBold",
            "FontItalic",
            "FontName",
            "FontSize",
            "FontUnderline",
            "FontWeight",
            "ForeColor",
            "ForeShade",
            "ForeThemeColorIndex",
            "ForeTint",
            "Glow",
            "Gradient",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HideDuplicates",
            "HorizontalAnchor",
            "HoverColor",
            "HoverForeColor",
            "HoverForeShade",
            "HoverForeThemeColorIndex",
            "HoverForeTint",
            "HoverShade",
            "HoverThemeColorIndex",
            "HoverTint",
            "InSelection",
            "IsVisible",
            "LabelAlign",
            "LabelX",
            "LabelY",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "Locked",
            "Name",
            "ObjectPalette",
            "OldValue",
            "OnClick",
            "OnDblClick",
            "OnEnter",
            "OnExit",
            "OnGotFocus",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnLostFocus",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OptionValue",
            "Parent",
            "Picture",
            "PictureData",
            "PictureType",
            "PressedColor",
            "PressedForeColor",
            "PressedForeShade",
            "PressedForeThemeColorIndex",
            "PressedForeTint",
            "PressedShade",
            "PressedThemeColorIndex",
            "PressedTint",
            "Properties",
            "QuickStyle",
            "QuickStyleMask",
            "ReadingOrder",
            "RightPadding",
            "Section",
            "Shadow",
            "Shape",
            "ShortcutMenuBar",
            "SoftEdges",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "ThemeFontIndex",
            "Top",
            "TopPadding",
            "TripleState",
            "UseTheme",
            "ValidationRule",
            "ValidationText",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.ToggleButton.MouseDown",
        "file_name": "Access.ToggleButton.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.ToggleButton.MouseMove",
        "file_name": "Access.ToggleButton.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.ToggleButton.MouseUp",
        "file_name": "Access.ToggleButton.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Move",
        "file_name": "Access.ToggleButton.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.ToggleButton.Name",
        "file_name": "Access.ToggleButton.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ObjectPalette",
        "file_name": "Access.ToggleButton.ObjectPalette.md",
        "kind": "property",
        "main": "The **ObjectPalette** property specifies the palette in the application used to create a bitmap or other graphic that is loaded into the specified control by using the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "ObjectPalette",
            "Picture",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OldValue",
        "file_name": "Access.ToggleButton.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnClick",
        "file_name": "Access.ToggleButton.OnClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnDblClick",
        "file_name": "Access.ToggleButton.OnDblClick.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Dbl Click** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnEnter",
        "file_name": "Access.ToggleButton.OnEnter.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Enter** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnExit",
        "file_name": "Access.ToggleButton.OnExit.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Exit** box in the Properties window of specified object. Read/write **String**. \n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnGotFocus",
        "file_name": "Access.ToggleButton.OnGotFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Got Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnKeyDown",
        "file_name": "Access.ToggleButton.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnKeyPress",
        "file_name": "Access.ToggleButton.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnKeyUp",
        "file_name": "Access.ToggleButton.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnLostFocus",
        "file_name": "Access.ToggleButton.OnLostFocus.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Lost Focus** box in the Properties window of the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnMouseDown",
        "file_name": "Access.ToggleButton.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnMouseMove",
        "file_name": "Access.ToggleButton.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OnMouseUp",
        "file_name": "Access.ToggleButton.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.OptionValue",
        "file_name": "Access.ToggleButton.OptionValue.md",
        "kind": "property",
        "main": "Each control in an option group has a numeric value that you can set with the **OptionValue** property. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "OptionValue",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Parent",
        "file_name": "Access.ToggleButton.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.ToggleButton.Picture",
        "file_name": "Access.ToggleButton.Picture.md",
        "kind": "property",
        "main": "Use the **Picture** property to specify a bitmap or other type of graphic to be displayed on the specified control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Picture",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PictureData",
        "file_name": "Access.ToggleButton.PictureData.md",
        "kind": "property",
        "main": "Use the **PictureData** property to copy the picture to another object that supports the **Picture** property. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureData",
            "Variant"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PictureType",
        "file_name": "Access.ToggleButton.PictureType.md",
        "kind": "property",
        "main": "Use the **PictureType** property to specify whether Microsoft Access stores an object's picture as a linked or an embedded object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "PictureType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PressedColor",
        "file_name": "Access.ToggleButton.PressedColor.md",
        "kind": "property",
        "main": "Gets or sets the color displayed on the control when the user chooses it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PressedForeColor",
        "file_name": "Access.ToggleButton.PressedForeColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the text displayed on the control when the user chooses it. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PressedForeShade",
        "file_name": "Access.ToggleButton.PressedForeShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **PressedForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PressedForeThemeColorIndex",
        "file_name": "Access.ToggleButton.PressedForeThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **PressedForeColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PressedForeTint",
        "file_name": "Access.ToggleButton.PressedForeTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **PressedForeColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedForeColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PressedShade",
        "file_name": "Access.ToggleButton.PressedShade.md",
        "kind": "property",
        "main": "Gets or sets the shade that is applied to the theme color in the **PressedColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PressedThemeColorIndex",
        "file_name": "Access.ToggleButton.PressedThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **PressedColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.PressedTint",
        "file_name": "Access.ToggleButton.PressedTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **PressedColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "PressedColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Properties",
        "file_name": "Access.ToggleButton.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.ToggleButton.QuickStyle",
        "file_name": "Access.ToggleButton.QuickStyle.md",
        "kind": "property",
        "main": "Gets or sets the quick style that is applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ReadingOrder",
        "file_name": "Access.ToggleButton.ReadingOrder.md",
        "kind": "property",
        "main": "Use the **ReadingOrder** property to specify or determine the reading order of words in text. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ReadingOrder",
            "Byte"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Requery",
        "file_name": "Access.ToggleButton.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.ToggleButton.RightPadding",
        "file_name": "Access.ToggleButton.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the toggle button and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Section",
        "file_name": "Access.ToggleButton.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.SetFocus",
        "file_name": "Access.ToggleButton.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Shadow",
        "file_name": "Access.ToggleButton.Shadow.md",
        "kind": "property",
        "main": "Gets or sets the shadow effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Shape",
        "file_name": "Access.ToggleButton.Shape.md",
        "kind": "property",
        "main": "Returns or sets the shape of the specified toggle button. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ShortcutMenuBar",
        "file_name": "Access.ToggleButton.ShortcutMenuBar.md",
        "kind": "property",
        "main": "Use the **ShortcutMenuBar** property to specify the shortcut menu that appears when you right-click the specified object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ShortcutMenuBar",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.SizeToFit",
        "file_name": "Access.ToggleButton.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.ToggleButton.SoftEdges",
        "file_name": "Access.ToggleButton.SoftEdges.md",
        "kind": "property",
        "main": "Gets or sets the soft edges effect applied to the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.StatusBarText",
        "file_name": "Access.ToggleButton.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.TabIndex",
        "file_name": "Access.ToggleButton.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.TabStop",
        "file_name": "Access.ToggleButton.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Tag",
        "file_name": "Access.ToggleButton.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ThemeFontIndex",
        "file_name": "Access.ToggleButton.ThemeFontIndex.md",
        "kind": "property",
        "main": "Gets or sets the font index that represents a font in the applied theme associated with the **FontName** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "FontName",
            "Long"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Top",
        "file_name": "Access.ToggleButton.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**. \n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.TopPadding",
        "file_name": "Access.ToggleButton.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the toggle button and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.ToggleButton.TripleState",
        "file_name": "Access.ToggleButton.TripleState.md",
        "kind": "property",
        "main": "Use the **TripleState** property to specify how the specified control displays **Null** values. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TripleState",
            "Null",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Undo",
        "file_name": "Access.ToggleButton.Undo.md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.ToggleButton.UseTheme",
        "file_name": "Access.ToggleButton.UseTheme.md",
        "kind": "property",
        "main": "Gets or sets whether the specified object will utilize formatting styles defined in Office Document Themes. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ValidationRule",
        "file_name": "Access.ToggleButton.ValidationRule.md",
        "kind": "property",
        "main": "Use the **ValidationRule** property to specify requirements for data entered into a record, field, or control. When data is entered that violates the **ValidationRule** setting, you can use the **ValidationText** property to specify the message to be displayed to the user. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationRule",
            "ValidationText",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.ValidationText",
        "file_name": "Access.ToggleButton.ValidationText.md",
        "kind": "property",
        "main": "Use the **ValidationText** property to specify a message to be displayed to the user when data is entered that violates a **ValidationRule** setting for a record, field, or control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ValidationText",
            "ValidationRule",
            "String"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Value",
        "file_name": "Access.ToggleButton.Value.md",
        "kind": "property",
        "main": "Determines or specifies whether the specified toggle button control is selected. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.ToggleButton.VerticalAnchor",
        "file_name": "Access.ToggleButton.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified toggle button is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Visible",
        "file_name": "Access.ToggleButton.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.ToggleButton.Width",
        "file_name": "Access.ToggleButton.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.AfterUpdate",
        "file_name": "Access.WebBrowserControl.AfterUpdate.md",
        "kind": "event",
        "main": "The **AfterUpdate** event occurs after changed data in a control or record is updated.\n",
        "Parameters": [],
        "Return_value": [
            "AfterUpdate"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Application",
        "file_name": "Access.WebBrowserControl.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BeforeNavigate2",
        "file_name": "Access.WebBrowserControl.BeforeNavigate2.md",
        "kind": "event",
        "main": "Occurs before navigation occurs in the given **WebBrowserControl**.\n",
        "Parameters": [
            "pDisp",
            "URL",
            "flags",
            "TargetFrameName",
            "PostData",
            "Headers",
            "Cancel"
        ],
        "Return_value": [
            "WebBrowserControl"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BeforeUpdate",
        "file_name": "Access.WebBrowserControl.BeforeUpdate.md",
        "kind": "event",
        "main": "The **BeforeUpdate** event occurs before changed data in a control or record is updated.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "BeforeUpdate"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BorderColor",
        "file_name": "Access.WebBrowserControl.BorderColor.md",
        "kind": "property",
        "main": "Use the **BorderColor** property to specify the color of a control's border. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BorderShade",
        "file_name": "Access.WebBrowserControl.BorderShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BorderStyle",
        "file_name": "Access.WebBrowserControl.BorderStyle.md",
        "kind": "property",
        "main": "Specifies how a control's border appears. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BorderThemeColorIndex",
        "file_name": "Access.WebBrowserControl.BorderThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets a value that represents a color in the applied color theme associated with the **BorderColor** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BorderTint",
        "file_name": "Access.WebBrowserControl.BorderTint.md",
        "kind": "property",
        "main": "Gets or sets the tint that is applied to the theme color in the **BorderColor** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderColor",
            "Single"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BorderWidth",
        "file_name": "Access.WebBrowserControl.BorderWidth.md",
        "kind": "property",
        "main": "Use the **BorderWidth** property to specify the width of a control's border. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "BorderWidth",
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.BottomPadding",
        "file_name": "Access.WebBrowserControl.BottomPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its bottom gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Change",
        "file_name": "Access.WebBrowserControl.Change.md",
        "kind": "event",
        "main": "The **Change** event occurs when the contents of the specified control change.\n",
        "Parameters": [],
        "Return_value": [
            "Change"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Click",
        "file_name": "Access.WebBrowserControl.Click.md",
        "kind": "event",
        "main": "The **Click** event occurs when the user presses and then releases a mouse button over an object.\n",
        "Parameters": [],
        "Return_value": [
            "Click"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Controls",
        "file_name": "Access.WebBrowserControl.Controls.md",
        "kind": "property",
        "main": "Returns the **Controls** collection of a form, subform, report, or section. Read-only **Controls**.\n",
        "Parameters": [],
        "Return_value": [
            "Controls"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.ControlSource",
        "file_name": "Access.WebBrowserControl.ControlSource.md",
        "kind": "property",
        "main": "Use the **ControlSource** property to specify what data appears in a control. You can display and edit data bound to a field in a table, query, or SQL statement. You can also display the result of an expression. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlSource",
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.ControlTipText",
        "file_name": "Access.WebBrowserControl.ControlTipText.md",
        "kind": "property",
        "main": "Use the **ControlTipText** property to specify the text that appears in a ScreenTip when you hold the mouse pointer over a control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlTipText",
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.ControlType",
        "file_name": "Access.WebBrowserControl.ControlType.md",
        "kind": "property",
        "main": "Use the **ControlType** property in Visual Basic to determine the type of control on a form or report. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ControlType",
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.DblClick",
        "file_name": "Access.WebBrowserControl.DblClick.md",
        "kind": "event",
        "main": "The **DblClick** event occurs when the user presses and releases the left mouse button twice over an object within the double-click time limit of the system.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "DblClick"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Dirty",
        "file_name": "Access.WebBrowserControl.Dirty.md",
        "kind": "event",
        "main": "The **Dirty** event occurs when the contents of the specified control changes.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Dirty"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.DisplayWhen",
        "file_name": "Access.WebBrowserControl.DisplayWhen.md",
        "kind": "property",
        "main": "Use the **DisplayWhen** property to specify which of a form's controls you want displayed on screen and in print. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "DisplayWhen",
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.DocumentComplete",
        "file_name": "Access.WebBrowserControl.DocumentComplete.md",
        "kind": "event",
        "main": "Occurs when a document is completely loaded and initialized.\n",
        "Parameters": [
            "pDisp",
            "URL"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.WebBrowserControl.Enabled",
        "file_name": "Access.WebBrowserControl.Enabled.md",
        "kind": "property",
        "main": "Use the **Enabled** property to set or return the status of the conditional format in the **[FormatCondition](Access.FormatCondition.md)** object. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Enabled",
            "Access.FormatCondition.md",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Enter",
        "file_name": "Access.WebBrowserControl.Enter.md",
        "kind": "event",
        "main": "The **Enter** event occurs before a control actually receives the focus from a control on the same form or report.\n",
        "Parameters": [],
        "Return_value": [
            "Enter"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.EventProcPrefix",
        "file_name": "Access.WebBrowserControl.EventProcPrefix.md",
        "kind": "property",
        "main": "Gets or sets the prefix portion of an event procedure name. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Exit",
        "file_name": "Access.WebBrowserControl.Exit.md",
        "kind": "event",
        "main": "The **Exit** event occurs just before a control loses the focus to another control on the same form or report.\n",
        "Parameters": [
            "Cancel"
        ],
        "Return_value": [
            "Exit"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GotFocus",
        "file_name": "Access.WebBrowserControl.GotFocus.md",
        "kind": "event",
        "main": "The **GotFocus** event occurs when the specified object receives the focus.\n",
        "Parameters": [],
        "Return_value": [
            "GotFocus"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineColor",
        "file_name": "Access.WebBrowserControl.GridlineColor.md",
        "kind": "property",
        "main": "Gets or sets the color of the gridline for the specified control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineShade",
        "file_name": "Access.WebBrowserControl.GridlineShade.md",
        "kind": "property",
        "main": "Gets or sets the shade applied to the theme color in the **[GridlineColor](access.WebBrowserControl.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.WebBrowserControl.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineStyleBottom",
        "file_name": "Access.WebBrowserControl.GridlineStyleBottom.md",
        "kind": "property",
        "main": "Gets or sets the bottom gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineStyleLeft",
        "file_name": "Access.WebBrowserControl.GridlineStyleLeft.md",
        "kind": "property",
        "main": "Gets or sets the left gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineStyleRight",
        "file_name": "Access.WebBrowserControl.GridlineStyleRight.md",
        "kind": "property",
        "main": "Gets or sets the right gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineStyleTop",
        "file_name": "Access.WebBrowserControl.GridlineStyleTop.md",
        "kind": "property",
        "main": "Gets or sets the top gridline style of the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineThemeColorIndex",
        "file_name": "Access.WebBrowserControl.GridlineThemeColorIndex.md",
        "kind": "property",
        "main": "Gets or sets the theme color index that represents a color in the applied color theme associated with the **[GridlineColor](access.WebBrowserControl.gridlinecolor.md)** property of the specified object. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "access.WebBrowserControl.gridlinecolor.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineTint",
        "file_name": "Access.WebBrowserControl.GridlineTint.md",
        "kind": "property",
        "main": "Gets or sets the tint applied to the theme color in the **[GridlineColor](access.WebBrowserControl.gridlinecolor.md)** property of the specified object. Read/write **Single**.\n",
        "Parameters": [],
        "Return_value": [
            "access.WebBrowserControl.gridlinecolor.md",
            "Single"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineWidthBottom",
        "file_name": "Access.WebBrowserControl.GridlineWidthBottom.md",
        "kind": "property",
        "main": "Gets or sets the width of the bottom gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineWidthLeft",
        "file_name": "Access.WebBrowserControl.GridlineWidthLeft.md",
        "kind": "property",
        "main": "Gets or sets the width of the left gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineWidthRight",
        "file_name": "Access.WebBrowserControl.GridlineWidthRight.md",
        "kind": "property",
        "main": "Gets or sets the width of the right gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.GridlineWidthTop",
        "file_name": "Access.WebBrowserControl.GridlineWidthTop.md",
        "kind": "property",
        "main": "Gets or sets the width of the top gridline for the specified control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Height",
        "file_name": "Access.WebBrowserControl.Height.md",
        "kind": "property",
        "main": "Gets or sets the height of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.HelpContextId",
        "file_name": "Access.WebBrowserControl.HelpContextId.md",
        "kind": "property",
        "main": "The **HelpContextID** property specifies the context ID of a topic in the custom Help file specified by the **[HelpFile](access.form.helpfile.md)** property setting. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "HelpContextID",
            "access.form.helpfile.md",
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.HorizontalAnchor",
        "file_name": "Access.WebBrowserControl.HorizontalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcHorizontalAnchor](Access.AcHorizontalAnchor.md)** constant that indicates how the control is anchored horizontally within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcHorizontalAnchor.md"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Hyperlink",
        "file_name": "Access.WebBrowserControl.Hyperlink.md",
        "kind": "property",
        "main": "Use the **Hyperlink** property to return a reference to a **[Hyperlink](access.hyperlink.md)** object and to access the properties and methods of a control's hyperlink. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Hyperlink",
            "access.hyperlink.md"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.InSelection",
        "file_name": "Access.WebBrowserControl.InSelection.md",
        "kind": "property",
        "main": "Use the **InSelection** property to determine or specify whether a control on a form in Design view is selected. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "InSelection",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.KeyDown",
        "file_name": "Access.WebBrowserControl.KeyDown.md",
        "kind": "event",
        "main": "The **KeyDown** event occurs when the user presses a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyDown",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.KeyPress",
        "file_name": "Access.WebBrowserControl.KeyPress.md",
        "kind": "event",
        "main": "The **KeyPress** event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyAscii"
        ],
        "Return_value": [
            "KeyPress",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.KeyUp",
        "file_name": "Access.WebBrowserControl.KeyUp.md",
        "kind": "event",
        "main": "The **KeyUp** event occurs when the user releases a key while a form or control has the focus. This event also occurs if you send a keystroke to a form or control by using the SendKeys action in a macro or the **SendKeys** statement in Visual Basic.\n",
        "Parameters": [
            "KeyCode",
            "Shift"
        ],
        "Return_value": [
            "KeyUp",
            "SendKeys"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Layout",
        "file_name": "Access.WebBrowserControl.Layout.md",
        "kind": "property",
        "main": "Returns the type of layout for the specified control. Read-only **[AcLayoutType](Access.AcLayoutType.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcLayoutType.md"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.LayoutID",
        "file_name": "Access.WebBrowserControl.LayoutID.md",
        "kind": "property",
        "main": "Returns the unique identifier for the layout that contains the specified control. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Left",
        "file_name": "Access.WebBrowserControl.Left.md",
        "kind": "property",
        "main": "Use the **Left** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Left",
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.LeftPadding",
        "file_name": "Access.WebBrowserControl.LeftPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its left gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.LocationURL",
        "file_name": "Access.WebBrowserControl.LocationURL.md",
        "kind": "property",
        "main": "Gets the Uniform Resource Locator (URL) of the current document. Read-only **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.LostFocus",
        "file_name": "Access.WebBrowserControl.LostFocus.md",
        "kind": "event",
        "main": "The **LostFocus** event occurs when the specified object loses the focus.\n",
        "Parameters": [],
        "Return_value": [
            "LostFocus"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl",
        "Events": [
            "AfterUpdate",
            "BeforeNavigate2",
            "BeforeUpdate",
            "Change",
            "Click",
            "DblClick",
            "Dirty",
            "DocumentComplete",
            "Enter",
            "Exit",
            "GotFocus",
            "KeyDown",
            "KeyPress",
            "KeyUp",
            "LostFocus",
            "MouseDown",
            "MouseMove",
            "MouseUp",
            "NavigateError",
            "ProgressChange",
            "Updated"
        ],
        "file_name": "Access.WebBrowserControl.md",
        "kind": "object",
        "main": "Represents a web browser control on a form.\n",
        "Methods": [
            "Move",
            "Requery",
            "SetFocus",
            "SizeToFit",
            "Undo"
        ],
        "Properties": [
            "Application",
            "BorderColor",
            "BorderShade",
            "BorderStyle",
            "BorderThemeColorIndex",
            "BorderTint",
            "BorderWidth",
            "BottomPadding",
            "Controls",
            "ControlSource",
            "ControlTipText",
            "ControlType",
            "DisplayWhen",
            "Enabled",
            "EventProcPrefix",
            "GridlineColor",
            "GridlineShade",
            "GridlineStyleBottom",
            "GridlineStyleLeft",
            "GridlineStyleRight",
            "GridlineStyleTop",
            "GridlineThemeColorIndex",
            "GridlineTint",
            "GridlineWidthBottom",
            "GridlineWidthLeft",
            "GridlineWidthRight",
            "GridlineWidthTop",
            "Height",
            "HelpContextId",
            "HorizontalAnchor",
            "Hyperlink",
            "InSelection",
            "Layout",
            "LayoutID",
            "Left",
            "LeftPadding",
            "LocationURL",
            "Name",
            "Object",
            "OldValue",
            "OnBeforeNavigate",
            "OnDocumentComplete",
            "OnKeyDown",
            "OnKeyPress",
            "OnKeyUp",
            "OnMouseDown",
            "OnMouseMove",
            "OnMouseUp",
            "OnNavigateError",
            "OnProgressChange",
            "OnUpdated",
            "Parent",
            "Progress",
            "Properties",
            "ReadyState",
            "RightPadding",
            "ScrollBars",
            "ScrollLeft",
            "ScrollTop",
            "Section",
            "SpecialEffect",
            "StatusBarText",
            "TabIndex",
            "TabStop",
            "Tag",
            "Top",
            "TopPadding",
            "Transform",
            "Value",
            "VerticalAnchor",
            "Visible",
            "Width"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.MouseDown",
        "file_name": "Access.WebBrowserControl.MouseDown.md",
        "kind": "event",
        "main": "The **MouseDown** event occurs when the user presses a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseDown"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.MouseMove",
        "file_name": "Access.WebBrowserControl.MouseMove.md",
        "kind": "event",
        "main": "The **MouseMove** event occurs when the user moves the mouse.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseMove"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.MouseUp",
        "file_name": "Access.WebBrowserControl.MouseUp.md",
        "kind": "event",
        "main": "The **MouseUp** event occurs when the user releases a mouse button.\n",
        "Parameters": [
            "Button",
            "Shift",
            "X",
            "Y"
        ],
        "Return_value": [
            "MouseUp"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Move",
        "file_name": "Access.WebBrowserControl.Move.md",
        "kind": "method",
        "main": "Moves the specified object to the coordinates specified by the argument values.\n",
        "Parameters": [
            "Left",
            "Top",
            "Width",
            "Height"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.WebBrowserControl.Name",
        "file_name": "Access.WebBrowserControl.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.NavigateError",
        "file_name": "Access.WebBrowserControl.NavigateError.md",
        "kind": "event",
        "main": "Occurs when an error occurs during navigation.\n",
        "Parameters": [
            "pDisp",
            "URL",
            "TargetFrameName",
            "StatusCode",
            "Cancel"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.WebBrowserControl.Object",
        "file_name": "Access.WebBrowserControl.Object.md",
        "kind": "property",
        "main": "Use the **Object** property in Visual Basic to return a reference to the ActiveX object that is associated with a linked or embedded OLE object in a control. By using this reference, you can access the properties or invoke the methods of the OLE object. Read-only **Object**.\n",
        "Parameters": [],
        "Return_value": [
            "Object"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OldValue",
        "file_name": "Access.WebBrowserControl.OldValue.md",
        "kind": "property",
        "main": "Use the **OldValue** property to determine the unedited value of a bound control. Read-only **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "OldValue",
            "Variant"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnBeforeNavigate",
        "file_name": "Access.WebBrowserControl.OnBeforeNavigate.md",
        "kind": "property",
        "main": "Gets or sets the value of the **On Before Navigate** box in the property sheet of a web browser control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnDocumentComplete",
        "file_name": "Access.WebBrowserControl.OnDocumentComplete.md",
        "kind": "property",
        "main": "Gets or sets the value of the **On Document Complete** box in the property sheet of a web browser control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnKeyDown",
        "file_name": "Access.WebBrowserControl.OnKeyDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnKeyPress",
        "file_name": "Access.WebBrowserControl.OnKeyPress.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Press** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnKeyUp",
        "file_name": "Access.WebBrowserControl.OnKeyUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Key Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnMouseDown",
        "file_name": "Access.WebBrowserControl.OnMouseDown.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Down** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnMouseMove",
        "file_name": "Access.WebBrowserControl.OnMouseMove.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Move** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnMouseUp",
        "file_name": "Access.WebBrowserControl.OnMouseUp.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Mouse Up** box in the Properties window. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnNavigateError",
        "file_name": "Access.WebBrowserControl.OnNavigateError.md",
        "kind": "property",
        "main": "Gets or sets the value of the **On Navigate Error** box in the property sheet of a web browser control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnProgressChange",
        "file_name": "Access.WebBrowserControl.OnProgressChange.md",
        "kind": "property",
        "main": "Gets or sets the value of the **On Progress Change** box in the property sheet of a web browser control. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.OnUpdated",
        "file_name": "Access.WebBrowserControl.OnUpdated.md",
        "kind": "property",
        "main": "Sets or returns the value of the **On Updated** box in the Properties window of a form or report. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Parent",
        "file_name": "Access.WebBrowserControl.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.WebBrowserControl.Progress",
        "file_name": "Access.WebBrowserControl.Progress.md",
        "kind": "property",
        "main": "Specifies the amount of total progress of a download operation. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.ProgressChange",
        "file_name": "Access.WebBrowserControl.ProgressChange.md",
        "kind": "event",
        "main": "Occurs when the progress of a download operation is updated.\n",
        "Parameters": [
            "Progress",
            "ProgressMax"
        ],
        "Return_value": []
    },
    {
        "api_name": "Access.WebBrowserControl.Properties",
        "file_name": "Access.WebBrowserControl.Properties.md",
        "kind": "property",
        "main": "Returns a reference to a control's **[Properties](Access.Properties.md)** collection object. Read-only.\n",
        "Parameters": [],
        "Return_value": [
            "Access.Properties.md"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.ReadyState",
        "file_name": "Access.WebBrowserControl.ReadyState.md",
        "kind": "property",
        "main": "Gets the status of the specified web browser control. Read-only **[AcWebBrowserState](Access.AcWebBrowserState.md)**.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcWebBrowserState.md"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Requery",
        "file_name": "Access.WebBrowserControl.Requery.md",
        "kind": "method",
        "main": "The **Requery** method updates the data underlying a specified control that's on the active form by requerying the source of data for the control.\n",
        "Parameters": [],
        "Return_value": [
            "Requery"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.RightPadding",
        "file_name": "Access.WebBrowserControl.RightPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its right gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.ScrollBars",
        "file_name": "Access.WebBrowserControl.ScrollBars.md",
        "kind": "property",
        "main": "Use the **ScrollBars** property to specify whether scroll bars appear on a control. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "ScrollBars",
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.ScrollLeft",
        "file_name": "Access.WebBrowserControl.ScrollLeft.md",
        "kind": "property",
        "main": "Gets or sets the distance, in pixels, between the left edge of the **WebBrowserControl** object and the leftmost portion of the content currently visible in the control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "WebBrowserControl",
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.ScrollTop",
        "file_name": "Access.WebBrowserControl.ScrollTop.md",
        "kind": "property",
        "main": "Gets or sets the distance, in pixels, between the top edge of the **WebBrowserControl** object and the topmost portion of the content currently visible in the control. Read/write **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "WebBrowserControl",
            "Long"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Section",
        "file_name": "Access.WebBrowserControl.Section.md",
        "kind": "property",
        "main": "You can identify these controls by the section of a form or report where the control appears. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.SetFocus",
        "file_name": "Access.WebBrowserControl.SetFocus.md",
        "kind": "method",
        "main": "The **SetFocus** method moves the focus to the specified form, the specified control on the active form, or the specified field on the active datasheet.\n",
        "Parameters": [],
        "Return_value": [
            "SetFocus"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.SizeToFit",
        "file_name": "Access.WebBrowserControl.SizeToFit.md",
        "kind": "method",
        "main": "Use the **SizeToFit** method to size a control so that it fits the text or image that it contains.\n",
        "Parameters": [],
        "Return_value": [
            "SizeToFit"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.SpecialEffect",
        "file_name": "Access.WebBrowserControl.SpecialEffect.md",
        "kind": "property",
        "main": "Use the **SpecialEffect** property to specify whether special formatting will apply to the specified object. Read/write **Byte**.\n",
        "Parameters": [],
        "Return_value": [
            "SpecialEffect",
            "Byte"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.StatusBarText",
        "file_name": "Access.WebBrowserControl.StatusBarText.md",
        "kind": "property",
        "main": "Use the **StatusBarText** property to specify the text that is displayed in the status bar when a control is selected. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "StatusBarText",
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.TabIndex",
        "file_name": "Access.WebBrowserControl.TabIndex.md",
        "kind": "property",
        "main": "Use the **TabIndex** property to specify a control's place in the tab order on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "TabIndex",
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.TabStop",
        "file_name": "Access.WebBrowserControl.TabStop.md",
        "kind": "property",
        "main": "Use the **TabStop** property to specify whether you can use the Tab key to move the focus to a control. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "TabStop",
            "Boolean"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Tag",
        "file_name": "Access.WebBrowserControl.Tag.md",
        "kind": "property",
        "main": "Stores extra information about a form, report, section, or control needed by a Microsoft Access application. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "String"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Top",
        "file_name": "Access.WebBrowserControl.Top.md",
        "kind": "property",
        "main": "Use the **Top** property to specify an object's location on a form or report. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Top",
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.TopPadding",
        "file_name": "Access.WebBrowserControl.TopPadding.md",
        "kind": "property",
        "main": "Gets or sets the amount of space (in inches) between the control and its top gridline. Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Transform",
        "file_name": "Access.WebBrowserControl.Transform.md",
        "kind": "property",
        "main": "Read/write.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.WebBrowserControl.Undo",
        "file_name": "Access.WebBrowserControl.Undo.md",
        "kind": "method",
        "main": "Use the **Undo** method to reset a control or form when its value has been changed.\n",
        "Parameters": [],
        "Return_value": [
            "Undo"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Updated",
        "file_name": "Access.WebBrowserControl.Updated.md",
        "kind": "event",
        "main": "The **Updated** event occurs when an OLE object's data has been modified.\n",
        "Parameters": [
            "Code"
        ],
        "Return_value": [
            "Updated"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Value",
        "file_name": "Access.WebBrowserControl.Value.md",
        "kind": "property",
        "main": "Determines or specifies the text in the control. Read/write **Variant**.\n",
        "Parameters": [],
        "Return_value": [
            "Variant"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.VerticalAnchor",
        "file_name": "Access.WebBrowserControl.VerticalAnchor.md",
        "kind": "property",
        "main": "Gets or sets an **[AcVerticalAnchor](Access.AcVerticalAnchor.md)** constant that indicates how the specified control is anchored vertically within its layout. Read/write.\n",
        "Parameters": [],
        "Return_value": [
            "Access.AcVerticalAnchor.md"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Visible",
        "file_name": "Access.WebBrowserControl.Visible.md",
        "kind": "property",
        "main": "Returns or sets whether the object is visible. Read/write **Boolean**.\n",
        "Parameters": [],
        "Return_value": [
            "Boolean"
        ]
    },
    {
        "api_name": "Access.WebBrowserControl.Width",
        "file_name": "Access.WebBrowserControl.Width.md",
        "kind": "property",
        "main": "Gets or sets the width of the specified object in [twips](../language/glossary/vbe-glossary.md#twip). Read/write **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WebService.Entities",
        "file_name": "Access.WebService.Entities.md",
        "kind": "property",
        "main": "Gets the collection of entities defined for the specified Data Service data connection. Read-only **Entities**.\n",
        "Parameters": [],
        "Return_value": [
            "Entities"
        ]
    },
    {
        "api_name": "Access.WebService",
        "Events": [],
        "file_name": "Access.WebService.md",
        "kind": "object",
        "main": "Represents a Data Service data connection.\n",
        "Methods": [],
        "Properties": [
            "Entities",
            "Name",
            "Parent"
        ]
    },
    {
        "api_name": "Access.WebService.Name",
        "file_name": "Access.WebService.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.WebService.Parent",
        "file_name": "Access.WebService.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.WebServices.Application",
        "file_name": "Access.WebServices.Application.md",
        "kind": "property",
        "main": "Use the **Application** property to access the active Microsoft Access **[Application](Access.Application.md)** object and its related properties. Read-only **Application** object.\n",
        "Parameters": [],
        "Return_value": [
            "Application",
            "Access.Application.md"
        ]
    },
    {
        "api_name": "Access.WebServices.Count",
        "file_name": "Access.WebServices.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.WebServices.Item",
        "file_name": "Access.WebServices.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Object**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Object"
        ]
    },
    {
        "api_name": "Access.WebServices",
        "Events": [],
        "file_name": "Access.WebServices.md",
        "kind": "object",
        "main": "Represents the collection of Data Services data connections installed in the database.\n",
        "Methods": [],
        "Properties": [
            "Application",
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.WebServices.Parent",
        "file_name": "Access.WebServices.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.WSParameter",
        "Events": [],
        "file_name": "Access.WSParameter.md",
        "kind": "object",
        "main": "Represents a parameter defined for an **[Operation](Access.Operation.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Name",
            "Parent",
            "Type"
        ]
    },
    {
        "api_name": "Access.WSParameter.Name",
        "file_name": "Access.WSParameter.Name.md",
        "kind": "property",
        "main": "Use the **Name** property to specify or determine the string expression that identifies the name of an object. Read/write **String**.\n",
        "Parameters": [],
        "Return_value": [
            "Name",
            "String"
        ]
    },
    {
        "api_name": "Access.WSParameter.Parent",
        "file_name": "Access.WSParameter.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    },
    {
        "api_name": "Access.WSParameter.Type",
        "file_name": "Access.WSParameter.Type.md",
        "kind": "property",
        "main": "Gets the data type of the specified parameter. Read-only **Integer**.\n",
        "Parameters": [],
        "Return_value": [
            "Integer"
        ]
    },
    {
        "api_name": "Access.WSParameters.Count",
        "file_name": "Access.WSParameters.Count.md",
        "kind": "property",
        "main": "Use the **Count** property to determine the number of items in a specified collection. Read-only **Long**.\n",
        "Parameters": [],
        "Return_value": [
            "Count",
            "Long"
        ]
    },
    {
        "api_name": "Access.WSParameters.Item",
        "file_name": "Access.WSParameters.Item.md",
        "kind": "property",
        "main": "The **Item** property returns a specific member of a collection either by position or by index. Read-only **Object**.\n",
        "Parameters": [
            "Index"
        ],
        "Return_value": [
            "Item",
            "Object"
        ]
    },
    {
        "api_name": "Access.WSParameters",
        "Events": [],
        "file_name": "Access.WSParameters.md",
        "kind": "object",
        "main": "Represents the collection of parameters defined for an **[Operation](Access.Operation.md)** object.\n",
        "Methods": [],
        "Properties": [
            "Count",
            "Item",
            "Parent"
        ]
    },
    {
        "api_name": "Access.WSParameters.Parent",
        "file_name": "Access.WSParameters.Parent.md",
        "kind": "property",
        "main": "Returns the parent object for the specified object. Read-only.\n",
        "Parameters": [],
        "Return_value": []
    }
]